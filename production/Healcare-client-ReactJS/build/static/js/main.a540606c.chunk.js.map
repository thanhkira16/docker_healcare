{"version":3,"sources":["store/actions/actionTypes.js","axios.js","services/userService.js","containers/System/Admin/UserRedux.js","containers/System/Admin/TableManageUser.js","containers/HomePage/Section/slider/OutStandingDoctor.js","containers/Patient/Specialty/DetailSpecialty.js","containers/Patient/Clinic/DetailClinic.js","store/actions/appActions.js","store/actions/userActions.js","store/actions/adminActions.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Auth/Login/Login.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","containers/System/Admin/ManageDoctor.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Specialty/ManageSpecialty.js","containers/System/Clinic/ManageClinic.js","routes/System.js","containers/HomePage/Section/slider/Specialty.js","containers/HomePage/Section/slider/MedicalFacility.js","containers/HomePage/Section/Info/ReactionOfUser.js","containers/HomePage/Section/About.js","containers/HomePage/HomePage.js","containers/Patient/Doctor/Modal/SchedulingToday.js","containers/Patient/SocialPlugin/LikeAndShare.js","containers/Patient/Doctor/DetailDoctor.js","containers/System/Doctor/ManageSchedule.js","containers/Patient/Doctor/Modal/RemedyModal.js","containers/System/Doctor/ManagePatient.js","routes/Doctor.js","containers/Patient/VerifyEmail.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","containers/HomePage/Section/slider/SearchCarousel.js","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Info/Footer.js","containers/Patient/Doctor/ProfileDoctor.js","containers/Patient/Doctor/DoctorExtraInfor.js","containers/Patient/Doctor/Modal/BookingModal.js","containers/Patient/Doctor/DoctorSchedule.js","utils/constant.js","utils/CommonUtils.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","components/CustomToast.js","components/CustomScrollbars.js"],"names":["actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","FETCH_POSITION_START","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","FETCH_ROLE_START","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","CREATE_USER_SUCCESS","CREATE_USER_FAILED","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILED","DELETE_USER_SUCCESS","DELETE_USER_FAILED","EDIT_USER_SUCCESS","EDIT_USER_FAILED","FETCH_TOP_DOCTORS_SUCCESS","FETCH_TOP_DOCTORS_FAILED","FETCH_ALL_DOCTORS_SUCCESS","FETCH_ALL_DOCTORS_FAILED","SAVE_DETAIL_DOCTOR_SUCCESS","SAVE_DETAIL_DOCTOR_FAILED","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","FETCH_ALLCODE_SCHEDULE_TIME_FAILED","FETCH_REQUIRED_DOCTOR_INFOR_START","FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS","FETCH_REQUIRED_DOCTOR_INFOR_FAILED","instance","axios","create","baseURL","process","interceptors","response","use","data","handleLoginApi","email","password","console","log","post","handleSignUpApi","phoneNumber","getAllUsers","inputId","get","concat","createNewUserService","deleteUserService","userId","delete","params","id","editUserService","put","getAllCodeService","inputType","getTopDoctorHomeService","numOfDoctors","getAllDoctorsService","saveDetailDoctor","getDetailInfoDoctor","saveBulkScheduleDoctor","getScheduleDoctorByDate","doctorId","date","getExtraInforDoctorByID","getProfileDoctorByID","getAllPaitentsBookedAppoiment","postSendRemedy","postPatientBookAppointment","postVerifyBookAppointment","createSpecialty","getAllSpecialties","getDetailSpecialtyById","location","createClinic","getAllClinics","getDetailClinicById","UserRedux","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleOnChangeImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","file","base64","objectUrl","wrap","_context","prev","next","target","files","CommonUtils","getBase64","sent","URL","createObjectURL","setState","previewImgURL","image","stop","_x","apply","arguments","onChangeInput","copyState","_objectSpread","state","value","openPreviewImage","isOpenPreviewImg","validateForm","_this$state","firstname","lastname","phonenumber","address","match","length","alert","handleSaveServer","action","CRUD_ACTIONS","CREATE","createNewUser","gender","roleId","role","positionId","position","fetchUserRedux","EDIT","editUser","userEditId","handleEditUserFromParent","user","imgBase64","Buffer","toString","firstName","lastName","genderArray","positionArray","roleArray","_createClass","key","_componentDidMount","_callee2","_context2","this","getGenderStart","getPositionStart","getRoleStart","prevProps","prevState","snapshot","genderRedux","arrGenders","keyMap","positionRedux","arrPositions","roleRedux","arrRoles","listUsers","_this2","genders","positions","roles","language","isLoadingData","isLoadingGender","isLoadingPosition","isLoadingRole","_this$state2","_jsxs","className","children","_jsx","FormattedMessage","LoadingOverlay","active","spinner","text","htmlFor","type","placeholder","onChange","disabled","class","style","backgroundImage","onClick","map","item","index","LANGUAGES","VI","valueVI","valueEN","Lightbox","mainSrc","onCloseRequest","TableManageUser","Component","connect","app","admin","users","dispatch","actions","handleDeleteUser","deleteUserRedux","handleEditUser","usersRedux","userEdit","arrUsers","_Fragment","scope","OutStandingDoctor","arrDoctors","dataSpecialty","slides","assignDataOfCarousel","topDoctorsRedux","res","loadTopDoctors","errCode","error","t0","history","push","forEach","from","nameVi","positionData","valueVi","nameEn","valueEn","specialtyID","Doctor_Infor","specialtyId","specialtyName","i","name","slide","img","mainTitle","Slider","settings","handleViewDetailDoctor","withRouter","isLoggedIn","topDoctors","DetailSpecialty","toggleExpand","expanded","handleOnChangeSelect","listDoctors","arrDoctorId","dataDetailSpecialty","arrLocations","locations","unshift","specialityImage","contentToShow","descriptionHTML","slice","Math","floor","HomeHeader","descriptionMarkdown","dangerouslySetInnerHTML","__html","labelVi","labelEn","EN","ProfileDoctor","isShowDescription","DoctorSchedule","DoctorExtraInfor","Footer","DetailClinic","dataDetailClinic","changeLanguageApp","userLoginSuccess","userInfo","processLogout","fetchGenderStart","getState","fetchGenderSucess","fetchGenderFailed","_x2","genderData","fetchPositionStart","_ref2","fetchPositionSucess","fetchPositionFailed","_x3","_x4","fetchRoleStart","_ref3","_callee3","_context3","fetchRoleSucess","fetchRoleFailed","_x5","_x6","roleData","_ref4","_callee4","_context4","toast","success","saveUserSuccess","fetchAllUserStart","saveUserFailed","_x7","_x8","_ref5","_callee5","_context5","fetchAllUserSuccess","reverse","fetchAllUserFailed","_x9","_x10","deleteUser","_ref6","_callee6","_context6","deleteUserSuccess","deleteUserFailed","_x11","_x12","_ref7","_callee7","_context7","editUserSuccess","editUserFailed","_x13","_x14","fetchTopDoctor","_ref8","_callee8","_context8","fetchTopDoctorSuccess","fetchTopDoctorFailed","_x15","_x16","doctorsData","doctors","fetchAllDoctors","_ref9","_callee9","_context9","fetchAllDoctorsSuccess","fetchAllDoctorsFailed","_x17","_x18","allDoctorData","doSaveDetailDoctor","_ref10","_callee10","_context10","doSaveDetailDoctorSuccess","doSaveDetailDoctorFailed","_x19","_x20","fetchAllScheduleTime","_ref11","_callee11","_context11","fetchAllScheduleTimeSuccess","fetchAllScheduleTimeFailed","_x21","_x22","dataTime","getRequiredDoctorInfor","_ref12","_callee12","resPrice","resPayment","resProvince","resSpecialty","resClinic","_context12","fetchRequiredDoctorInforSuccess","fetchRequiredDoctorInforFailed","_x23","_x24","allRerequiredDoctorInfor","initialState","started","systemMenuPath","contentOfConfirmModal","isOpen","messageId","handleFunc","dataFunc","appReducer","undefined","allDoctors","allScheduleTime","adminReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","whitelist","appPersistConfig","createBrowserHistory","basename","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","persistReducer","userReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","linkToRedirect","Redirect","to","Login","resetState","confirmPassword","errMsg","isShowPassword","isShowConfirmPassword","isValid","handleOnchangeInput","valueInput","stateCopy","handleSwitchLoginAndSignUp","setTimeout","isOpenLogin","validateLogin","isValidLogin","test","trim","values","every","validateSignUp","isValidSignUp","handleLogin","_this$state3","message","handleSignUp","_this$state4","handleTogglePassword","handleKeyDown","document","title","_this$state5","onKeyDown","href","navigate","path","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","handleCloseModal","onCloseModal","handleSaveChanges","e","preventDefault","handleChange","_e$target","_defineProperty","listenToEmitter","on","_this3","Modal","show","onHide","Header","closeButton","Title","Body","onSubmit","required","Button","variant","ModalEditUser","onCloseEditModal","currentUser","_","isEmpty","UserManage","getAllUsersFromReact","doEditUser","emit","showModalUser","handleCloseEditModal","showModalEditUser","handleViewDetails","handleAddNewUser","mdParser","MarkdownIt","ManageDoctor","buildDataSelectDoctor","inputData","results","object","label","handleEditorChange","html","contentMarkdown","contentHTML","handleChangeSelect","selectedOption","listPayment","listPrice","listProvince","listSpecialty","listClinic","markdown","provinceId","paymentId","priceId","nameClinic","clinicId","addressClinic","note","selectedProvince","selectedPayment","selectedPrice","selectedSpecialty","selectedClinic","Markdown","find","description","hasOldData","handleOnChangeDesc","handleSavecontentMarkdown","availbleToSave","doSaveDetailDoctorRedux","handleSelectedDoctorInfor","stateName","handleOnChangeText","selectedDoctor","fetchAllDoctorRedux","getRequiredDoctorInforRedux","dataSelect","dataSelectPaymemt","dataSelectProvince","dataSelectPrice","dataSelectSpecialty","dataSelectClinic","for","Select","options","rows","defaultValue","MdEditor","height","renderHTML","render","MenuGroup","_this$props","Menu","_Component2","_super2","_this$props2","link","hasSubMenu","onLinkClick","Fragment","Link","SubMenu","_Component3","_super3","_len","args","Array","_key","getItemClass","pathname","_this$props3","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","_Component4","_super5","_len2","_key2","expandedMenu","toggle","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","_this2$props","menus","outerLoop","group","j","menu","_this$props5","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","_React$Component","_super4","_this$props4","forwardRef","rest","_objectWithoutProperties","_excluded","ref","React","ComponentWithRef","withRef","adminMenu","doctorMenu","handleLanguageClick","changeLanguageAppRedux","activeLanguage","menuApp","USER_ROLE","ADMIN","DOCTOR","ManageSpecialty","handleOnChangeInput","field","imageBase64","handleSave","then","newSpecialty","catch","ManageClinic","newClinic","System","Switch","Route","component","Specialty","defaultMessage","handleViewDetailSpecialty","MedicalFacility","dataClinic","handleViewDetailClinic","ReactionOfUser","_toConsumableArray","src","width","alt","About","YouTube","videoId","opts","playerVars","autoplay","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","isShowBanner","SchedulingToday","emojis","emoji","require","config","LikeAndShare","window","FB","XFBML","parse","locale","fbAsyncInit","init","appId","REACT_APP_FACEBOOK_APP_ID","cookie","xfbml","version","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","initFacebookSDK","dataHref","DetailDoctor","detailDoctor","isShowSeparator","handleSubmit","fullname","pattern","phone","ManageSchedule","handleClickBtnTime","time","rangeTime","rangeTimeSelected","isSelected","handleSaveSchedule","currDate","result","formatedDate","selectedTime","abrupt","Date","getTime","filter","schedule","timeType","arraySchedule","handleOnChangeDatePicker","formattedDate","year","month","day","weekday","toLocaleDateString","textDate","handleDatePickerClick","isDatePickerOpen","DatePicker","selected","minDate","fontSize","format","dateFormat","SEND_TO_SERVER","readOnly","RemedyModal","handleSendRemedy","sendRemedy","_componentDidUpdate","dataRemedyModal","isOpenModalBooking","centered","size","maxWidth","onCloseRemedyModal","ManagePatient","getDataPatients","convertDateToString","dataPatients","moment","add","startOf","valueOf","handleConfirmAppoiment","patientId","patientData","patientName","isOpenModalRemedy","handleCloseRemedyModal","isLoading","timeTypeDataPatient","Doctor","DoctorMenuPath","VerifyEmail","dataProfile","statusVerify","urlSearchParams","token","search","URLSearchParams","App","handlePersistorState","bootstrapped","onBeforeLift","Promise","resolve","Router","CustomScrollbars","HOME","exact","LOGIN","SYSTEM","HOMEPAGE","DETAIL_DOCTOR","DETAIL_SPECIALTY","DETAIL_CLINIC","VERIFY_EMAIL_BOOKING","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","hostname","messages","LanguageUtils","getFlattenedMessages","IntlProviderWrapper","IntlProvider","defaultLocale","ReactDOM","Provider","store","navigator","serviceWorker","ready","registration","unregister","SearchCarousel","viewBox","xmlns","x1","y1","x2","y2","switchLanguage","oppositeLanguage","handleMenuOpen","isOverlayActive","handleMenuClose","handleClickBtnShop","open","returnToHomePage","department","specialty","getInforDoctor","renderTimeBooking","timeTypeData","unix","forMatedDate","capitalizeFirstLetter","number","toFixed","replace","priceTypeData","priceValue","convertToCustomFormat","string","charAt","toUpperCase","dataBookingModal","renderPrice","showHideDetailDoctorInfor","status","isShowDetailPrice","extraDoctor","paymentTypeData","BookingModal","validateInput","errors","selectedGender","reason","buildDataGender","onCloseBookingModal","handleConfirmBooking","err","timeString","doctorName","buildTimeBooking","birthday","buildDoctorName","doctorData","forWhom","Input","maxDate","ModalFooter","keys","color","display","dateLabel","selectedIndex","allAvailableTimes","dateSelected","handleOpenModalBooking","timeDisplay","dataBookingModalFromSchedule","initDateLabel","lebelVi","getArrDays","allDays","handleCloseBookingModal","_allDays","_allDays2","HEALTHY","LOG_OUT","REGISTER","DELETE","READ","PATIENT","reject","reader","FileReader","readAsDataURL","onload","onerror","KeyCodeUtils","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","reduce","prefixedKey","assign","messages_vi","messages_en","lang","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","otherProps","Scrollbars","autoHide","autoHideTimeout","hideTracksWhenNotNeeded"],"mappings":"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","file":"static/js/main.a540606c.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n  //app\r\n  APP_START_UP_COMPLETE: \"APP_START_UP_COMPLETE\",\r\n  SET_CONTENT_OF_CONFIRM_MODAL: \"SET_CONTENT_OF_CONFIRM_MODAL\",\r\n  CHANGE_LANGUAGE: \"CHANGE_LANGUAGE\",\r\n  //user\r\n  ADD_USER_SUCCESS: \"ADD_USER_SUCCESS\",\r\n  USER_LOGIN_SUCCESS: \"USER_LOGIN_SUCCESS\",\r\n  USER_LOGIN_FAIL: \"USER_LOGIN_FAIL\",\r\n  PROCESS_LOGOUT: \"PROCESS_LOGOUT\",\r\n\r\n  //Gender\r\n  FETCH_GENDER_START: \"FETCH_GENDER_START\",\r\n  FETCH_GENDER_SUCCESS: \"FETCH_GENDER_SUCCESS\",\r\n  FETCH_GENDER_FAILED: \"FETCH_GENDER_FAILED\",\r\n\r\n  //position\r\n  FETCH_POSITION_START: \"FETCH_POSITION_START\",\r\n  FETCH_POSITION_SUCCESS: \"FETCH_POSITION_SUCCESS\",\r\n  FETCH_POSITION_FAILED: \"FETCH_POSITION_FAILED\",\r\n\r\n  //role\r\n  FETCH_ROLE_START: \"FETCH_ROLE_START\",\r\n  FETCH_ROLE_SUCCESS: \"FETCH_ROLE_SUCCESS\",\r\n  FETCH_ROLE_FAILED: \"FETCH_ROLE_FAILED\",\r\n\r\n  //create user\r\n  CREATE_USER_SUCCESS: \"CREATE_USER_SUCCESS\",\r\n  CREATE_USER_FAILED: \"CREATE_USER_FAILED\",\r\n\r\n  //get all users\r\n  FETCH_ALL_USERS_SUCCESS: \"FETCH_ALL_USERS_SUCCESS\",\r\n  FETCH_ALL_USERS_FAILED: \"FETCH_ALL_USERS_FAILED\",\r\n\r\n  //delete user\r\n  DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\",\r\n  DELETE_USER_FAILED: \"DELETE_USER_FAILED\",\r\n\r\n  //edit user\r\n  EDIT_USER_SUCCESS: \"EDIT_USER_SUCCESS\",\r\n  EDIT_USER_FAILED: \"EDIT_USER_FAILED\",\r\n\r\n  //get top doctors\r\n  FETCH_TOP_DOCTORS_SUCCESS: \"FETCH_TOP_DOCTORS_SUCCESS\",\r\n  FETCH_TOP_DOCTORS_FAILED: \"FETCH_TOP_DOCTORS_FAILED\",\r\n\r\n  //get all doctors\r\n  FETCH_ALL_DOCTORS_SUCCESS: \"FETCH_ALL_DOCTORS_SUCCESS\",\r\n  FETCH_ALL_DOCTORS_FAILED: \"FETCH_ALL_DOCTORS_FAILED\",\r\n\r\n  //save detail doctor\r\n  SAVE_DETAIL_DOCTOR_SUCCESS: \"SAVE_DETAIL_DOCTOR_SUCCESS\",\r\n  SAVE_DETAIL_DOCTOR_FAILED: \"SAVE_DETAIL_DOCTOR_FAILED\",\r\n\r\n  //get hours of shedule doctor\r\n  FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS: \"FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS\",\r\n  FETCH_ALLCODE_SCHEDULE_TIME_FAILED: \"FETCH_ALLCODE_SCHEDULE_TIME_FAILED\",\r\n\r\n  //get hours of shedule doctor\r\n  FETCH_REQUIRED_DOCTOR_INFOR_START: \"FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS\",\r\n  FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS: \"FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS\",\r\n  FETCH_REQUIRED_DOCTOR_INFOR_FAILED: \"FETCH_REQUIRED_DOCTOR_INFOR_FAILED\",\r\n});\r\n\r\nexport default actionTypes;\r\n","import axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  // withCredentials: true\r\n});\r\n\r\ninstance.interceptors.response.use((response) => {\r\n  const { data } = response;\r\n  return response.data;\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"../axios\";\r\n//system\r\nconst handleLoginApi = (email, password) => {\r\n  console.log(\"username, password\", email, password);\r\n  return axios.post(\"/api/login\", { email, password });\r\n};\r\nconst handleSignUpApi = (email, phoneNumber, password) => {\r\n  console.log(\"username, password\", email, password);\r\n  return axios.post(\"/api/signup\", { email, phoneNumber, password });\r\n};\r\n\r\nconst getAllUsers = (inputId) => {\r\n  return axios.get(`/api/get-all-users?id=${inputId}`);\r\n};\r\n\r\nconst createNewUserService = (data) => {\r\n  console.log(\"check data from service\", data);\r\n\r\n  return axios.post(\"/api/create-new-user\", data);\r\n};\r\n\r\nconst deleteUserService = (userId) => {\r\n  return axios.delete(\"/api/delete-user\", {\r\n    params: {\r\n      id: userId,\r\n    },\r\n  });\r\n};\r\nconst editUserService = (data) => {\r\n  console.log(\"check data from service\", data);\r\n  return axios.put(\"/api/edit-user\", data);\r\n};\r\nconst getAllCodeService = (inputType) => {\r\n  return axios.get(`/api/allcode?type=${inputType}`);\r\n};\r\n\r\n//Doctor\r\nconst getTopDoctorHomeService = (numOfDoctors) => {\r\n  return axios.get(`/api/top-doctor-home?numOfDoctors=${numOfDoctors}`);\r\n};\r\nconst getAllDoctorsService = () => {\r\n  return axios.get(\"/api/get-all-doctors\");\r\n};\r\nconst saveDetailDoctor = (data) => {\r\n  return axios.post(\"/api/save-info-doctor\", data);\r\n};\r\nconst getDetailInfoDoctor = (id) => {\r\n  return axios.get(`/api/get-detail-doctor-by-id?id=${id}`);\r\n};\r\nconst saveBulkScheduleDoctor = (data) => {\r\n  return axios.post(\"/api/bulk-create-schedule\", data);\r\n};\r\n\r\nconst getScheduleDoctorByDate = (doctorId, date) => {\r\n  return axios.get(\r\n    `/api/get-schedule-doctor-by-date?doctorId=${doctorId}&date=${date}`\r\n  );\r\n};\r\nconst getExtraInforDoctorByID = (doctorId, date) => {\r\n  return axios.get(\r\n    `/api/get-extra-infor-doctor-by-id?doctorId=${doctorId}&date=${date}`\r\n  );\r\n};\r\nconst getProfileDoctorByID = (doctorId) => {\r\n  return axios.get(`/api/get-project-doctor-by-id?doctorId=${doctorId}`);\r\n};\r\nconst getAllPaitentsBookedAppoiment = (data) => {\r\n  return axios.get(\r\n    `/api/get-list-patients-booked-appoiment?doctorId=${data.doctorId}&date=${data.date}`\r\n  );\r\n};\r\nconst postSendRemedy = (data) => {\r\n  return axios.post(\"/api/send-remedy\", data);\r\n};\r\n\r\n//Patient\r\nconst postPatientBookAppointment = (data) => {\r\n  return axios.post(\"/api/patient-book-appointment\", data);\r\n};\r\nconst postVerifyBookAppointment = (data) => {\r\n  return axios.post(\"/api/verify-book-appointment\", data);\r\n};\r\n\r\n//Specialty\r\nconst createSpecialty = (data) => {\r\n  return axios.post(\"/api/create-new-specialty\", data);\r\n};\r\nconst getAllSpecialties = () => {\r\n  return axios.get(\"/api/get-all-specialties\");\r\n};\r\nconst getDetailSpecialtyById = (data) => {\r\n  return axios.get(\r\n    `/api/get-detail-specialty-by-id?id=${data.id}&location=${data.location}`\r\n  );\r\n};\r\n\r\n// Clinic services\r\nconst createClinic = (data) => {\r\n  return axios.post(\"/api/create-new-clinic\", data);\r\n};\r\nconst getAllClinics = () => {\r\n  return axios.get(\"/api/get-all-clinics\");\r\n};\r\nconst getDetailClinicById = (data) => {\r\n  return axios.get(`/api/get-detail-clinic-by-id?id=${data.id}`);\r\n};\r\n\r\nexport {\r\n  handleLoginApi,\r\n  handleSignUpApi,\r\n  getAllUsers,\r\n  createNewUserService,\r\n  deleteUserService,\r\n  editUserService,\r\n  getAllCodeService,\r\n  getTopDoctorHomeService,\r\n  getAllDoctorsService,\r\n  saveDetailDoctor,\r\n  getDetailInfoDoctor,\r\n  saveBulkScheduleDoctor,\r\n  getScheduleDoctorByDate,\r\n  getExtraInforDoctorByID,\r\n  getProfileDoctorByID,\r\n  postPatientBookAppointment,\r\n  postVerifyBookAppointment,\r\n  createSpecialty,\r\n  getAllSpecialties,\r\n  getDetailSpecialtyById,\r\n  createClinic,\r\n  getAllClinics,\r\n  getDetailClinicById,\r\n  getAllPaitentsBookedAppoiment,\r\n  postSendRemedy,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllCodeService } from \"../../../services/userService\";\r\nimport { LANGUAGES, CRUD_ACTIONS, CommonUtils } from \"../../../utils\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport \"./UserRedux.scss\";\r\nimport TableManageUser from \"./TableManageUser\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nclass UserRedux extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genderArray: [],\r\n      positionArray: [],\r\n      roleArray: [],\r\n      previewImgURL: \"\",\r\n      isOpenPreviewImg: false,\r\n      userEditId: \"\",\r\n      action: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      address: \"\",\r\n      image: \"\",\r\n      phonenumber: \"\",\r\n      gender: \"\",\r\n      position: \"\",\r\n      role: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.getGenderStart();\r\n    this.props.getPositionStart();\r\n    this.props.getRoleStart();\r\n    // try {\r\n    //   let res = await getAllCodeService(\"gender\");\r\n    //   if (res && res.errCode === 0) {\r\n    //     this.setState({ genderArray: res.data });\r\n    //   }\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    // }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.genderRedux !== this.props.genderRedux) {\r\n      let arrGenders = this.props.genderRedux;\r\n      this.setState({\r\n        genderArray: arrGenders,\r\n        gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.positionRedux !== this.props.positionRedux) {\r\n      let arrPositions = this.props.positionRedux;\r\n      this.setState({\r\n        positionArray: arrPositions,\r\n        position:\r\n          arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.roleRedux !== this.props.roleRedux) {\r\n      let arrRoles = this.props.roleRedux;\r\n      this.setState({\r\n        roleArray: arrRoles,\r\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : \"\",\r\n      });\r\n    }\r\n    if (prevProps.listUsers !== this.props.listUsers) {\r\n      let arrPositions = this.props.positionRedux;\r\n      let arrGenders = this.props.genderRedux;\r\n      let arrRoles = this.props.roleRedux;\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        address: \"\",\r\n        image: \"\",\r\n        phonenumber: \"\",\r\n        gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : \"\",\r\n        position:\r\n          arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : \"\",\r\n        role: arrRoles && arrRoles.length > 0 ? arrRoles[0].keyMap : \"\",\r\n        previewImgURL: \"\",\r\n        action: CRUD_ACTIONS.CREATE,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnChangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImgURL: objectUrl,\r\n        image: base64,\r\n      });\r\n      console.log(\"Image url: \" + objectUrl);\r\n    }\r\n  };\r\n\r\n  onChangeInput = (event, id) => {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = event.target.value;\r\n    this.setState({\r\n      ...copyState,\r\n    });\r\n  };\r\n\r\n  openPreviewImage = () => {\r\n    if (!this.state.previewImgURL) return;\r\n    this.setState({\r\n      isOpenPreviewImg: true,\r\n    });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { email, password, firstname, lastname, phonenumber, address } =\r\n      this.state;\r\n\r\n    // Define your validation rules here (you can customize them as needed)\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordMinLength = 6;\r\n    const phoneRegex = /^[0-9]+$/;\r\n\r\n    // Check if all required fields are filled\r\n    if (\r\n      !email ||\r\n      !password ||\r\n      !firstname ||\r\n      !lastname ||\r\n      !phonenumber ||\r\n      !address\r\n    ) {\r\n      alert(\"Missing required fields\");\r\n      return false;\r\n    }\r\n\r\n    // Check if email is valid\r\n    if (!email.match(emailRegex)) {\r\n      alert(\"Invalid email\");\r\n      return false;\r\n    }\r\n\r\n    // Check if password meets minimum length\r\n    if (password.length < passwordMinLength) {\r\n      alert(\"Invalid password\");\r\n      return false;\r\n    }\r\n\r\n    // Check if phone number contains only numbers\r\n    if (!phonenumber.match(phoneRegex)) {\r\n      alert(\"Invalid phone number\");\r\n      return false;\r\n    }\r\n\r\n    // Add more validation rules as needed\r\n\r\n    return true;\r\n  };\r\n\r\n  handleSaveServer = () => {\r\n    let isValid = this.validateForm();\r\n    if (isValid === false) return;\r\n\r\n    let action = this.state.action;\r\n    if (action === CRUD_ACTIONS.CREATE) {\r\n      this.props.createNewUser({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstname: this.state.firstname,\r\n        lastname: this.state.lastname,\r\n        address: this.state.address,\r\n        image: this.state.image,\r\n        phonenumber: this.state.phonenumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n      });\r\n\r\n      this.props.fetchUserRedux();\r\n    } else if (action === CRUD_ACTIONS.EDIT) {\r\n      this.props.editUser({\r\n        id: this.state.userEditId,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        firstname: this.state.firstname,\r\n        lastname: this.state.lastname,\r\n        address: this.state.address,\r\n        phonenumber: this.state.phonenumber,\r\n        gender: this.state.gender,\r\n        roleId: this.state.role,\r\n        positionId: this.state.position,\r\n        image: this.state.image,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEditUserFromParent = (user) => {\r\n    let imgBase64 = \"\";\r\n    if (user.image) {\r\n      imgBase64 = new Buffer(user.image, \"base64\").toString(\"binary\");\r\n    }\r\n    console.log(\"image base64\", imgBase64);\r\n    console.log(\"user redux\", user);\r\n    this.setState({\r\n      userEditId: user.id,\r\n      email: user.email,\r\n      password: \"HASHCODE\",\r\n      firstname: user.firstName,\r\n      lastname: user.lastName,\r\n      address: user.address,\r\n      previewImgURL: imgBase64,\r\n      phonenumber: user.phonenumber,\r\n      gender: user.gender,\r\n      position: user.positionId,\r\n      role: user.roleId,\r\n      action: CRUD_ACTIONS.EDIT,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let genders = this.state.genderArray;\r\n    let positions = this.state.positionArray;\r\n    let roles = this.state.roleArray;\r\n    let language = this.props.language;\r\n    let isLoadingData =\r\n      this.props.isLoadingGender &&\r\n      this.props.isLoadingPosition &&\r\n      this.props.isLoadingRole;\r\n    let {\r\n      email,\r\n      password,\r\n      firstname,\r\n      lastname,\r\n      address,\r\n      phonenumber,\r\n      role,\r\n      position,\r\n      gender,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <FormattedMessage id=\"manage-user.addingTitle\" />\r\n        </div>\r\n        <LoadingOverlay\r\n          className=\"loading-overlay\"\r\n          active={isLoadingData}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          {/* Your content goes here */}\r\n          <div></div>\r\n        </LoadingOverlay>\r\n        {/* <span>{isLoadingData === true ? \"Loading...\" : \"\"}</span> */}\r\n        <div className=\"body\">\r\n          <div className=\"row mb-3 mt-3\">\r\n            <div className=\"col-md-6 \">\r\n              <label htmlFor=\"inputEmail\">\r\n                <FormattedMessage id=\"manage-user.email\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"inputEmail\"\r\n                  placeholder={<FormattedMessage id=\"manage-user.email\" />}\r\n                  value={email}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"email\");\r\n                  }}\r\n                  disabled={\r\n                    this.state.action === CRUD_ACTIONS.EDIT ? true : false\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputPassword\">\r\n                <FormattedMessage id=\"manage-user.password\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"inputPassword\"\r\n                  placeholder={<FormattedMessage id=\"manage-user.password\" />}\r\n                  value={password}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"password\");\r\n                  }}\r\n                  disabled={\r\n                    this.state.action === CRUD_ACTIONS.EDIT ? true : false\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputFirstName\">\r\n                <FormattedMessage id=\"manage-user.firstname\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"inputFirstName\"\r\n                  placeholder={<FormattedMessage id=\"manage-user.firstname\" />}\r\n                  value={firstname}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"firstname\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputLastName\">\r\n                <FormattedMessage id=\"manage-user.lastname\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"inputLastName\"\r\n                  placeholder={<FormattedMessage id=\"manage-user.lastname\" />}\r\n                  value={lastname}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"lastname\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputAddress\">\r\n                <FormattedMessage id=\"manage-user.address\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"inputAddress\"\r\n                  placeholder={<FormattedMessage id=\"manage-user.address\" />}\r\n                  value={address}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"address\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputImage\" className=\"d-block\">\r\n                <FormattedMessage id=\"manage-user.image\" />\r\n              </label>\r\n              <div className=\"previewImg-container\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control-file\"\r\n                  id=\"inputImage\"\r\n                  onChange={(event) => this.handleOnChangeImage(event)}\r\n                />\r\n                <label htmlFor=\"inputImage\">\r\n                  <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                  <i class=\"fas fa-upload\"></i>\r\n                </label>\r\n                <div\r\n                  className=\"preview-image\"\r\n                  style={{\r\n                    backgroundImage: `url(${this.state.previewImgURL})`,\r\n                  }}\r\n                  onClick={() => this.openPreviewImage()}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputPhoneNumber\">\r\n                <FormattedMessage id=\"manage-user.phonenumber\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <input\r\n                  type=\"tel\"\r\n                  className=\"form-control form-control-lg\"\r\n                  id=\"inputPhoneNumber\"\r\n                  placeholder={\r\n                    <FormattedMessage id=\"manage-user.phonenumber\" />\r\n                  }\r\n                  value={phonenumber}\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"phonenumber\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputGender\">\r\n                <FormattedMessage id=\"manage-user.gender\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <select\r\n                  value={gender}\r\n                  id=\"inputGender\"\r\n                  className=\"form-control formcontrol-lg\"\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"gender\");\r\n                  }}\r\n                >\r\n                  {genders &&\r\n                    genders.length > 0 &&\r\n                    genders.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LANGUAGES.VI\r\n                            ? item.valueVI\r\n                            : item.valueEN}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputPosition\">\r\n                <FormattedMessage id=\"manage-user.position\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <select\r\n                  value={position}\r\n                  id=\"inputPosition\"\r\n                  className=\"form-control form-control-lg\"\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"position\");\r\n                  }}\r\n                >\r\n                  {positions &&\r\n                    positions.length > 0 &&\r\n                    positions.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LANGUAGES.VI\r\n                            ? item.valueVI\r\n                            : item.valueEN}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"inputRoleID\">\r\n                <FormattedMessage id=\"manage-user.role\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <select\r\n                  value={role}\r\n                  id=\"inputRoleID\"\r\n                  className=\"form-control form-control-lg\"\r\n                  onChange={(event) => {\r\n                    this.onChangeInput(event, \"role\");\r\n                  }}\r\n                >\r\n                  {roles &&\r\n                    roles.length > 0 &&\r\n                    roles.map((item, index) => {\r\n                      return (\r\n                        <option key={index} value={item.keyMap}>\r\n                          {language === LANGUAGES.VI\r\n                            ? item.valueVI\r\n                            : item.valueEN}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-md-12\">\r\n              <button\r\n                type=\"submit\"\r\n                className={`btn px-5 d-flex justify-content-center align-items-center ${\r\n                  this.state.action === CRUD_ACTIONS.EDIT\r\n                    ? \"btn-warning\"\r\n                    : \"btn-primary\"\r\n                }`}\r\n                onClick={() => {\r\n                  this.handleSaveServer();\r\n                }}\r\n              >\r\n                {this.state.action === CRUD_ACTIONS.EDIT ? (\r\n                  <FormattedMessage id=\"manage-user.submitEdit\" />\r\n                ) : (\r\n                  <FormattedMessage id=\"manage-user.submitCreate\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {this.state.isOpenPreviewImg && (\r\n            <Lightbox\r\n              mainSrc={this.state.previewImgURL}\r\n              onCloseRequest={() => this.setState({ isOpenPreviewImg: false })}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"table-manage-user\">\r\n          <TableManageUser\r\n            handleEditUserFromParent={this.handleEditUserFromParent}\r\n            action={this.state.action}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genderRedux: state.admin.genders,\r\n    positionRedux: state.admin.position,\r\n    roleRedux: state.admin.role,\r\n    isLoadingGender: state.admin.isLoadingGender,\r\n    isLoadingPosition: state.admin.isLoadingPosition,\r\n    isLoadingRole: state.admin.isLoadingRole,\r\n    listUsers: state.admin.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n    createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n    editUser: (data) => dispatch(actions.editUser(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TableManageUser.scss\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass TableManageUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usersRedux: [],\r\n      userEdit: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchUserRedux();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.listUsers !== this.props.listUsers) {\r\n      this.setState({ usersRedux: this.props.listUsers });\r\n    }\r\n  }\r\n\r\n  handleDeleteUser = (user) => {\r\n    this.props.deleteUserRedux(user.id);\r\n  };\r\n\r\n  handleEditUser = (user) => {\r\n    console.log(\"Table manage\", user);\r\n    this.props.handleEditUserFromParent(user);\r\n  };\r\n\r\n  render() {\r\n    let arrUsers = this.state.usersRedux;\r\n    return (\r\n      <>\r\n        <div className=\"title mb-3\">\r\n          {\" \"}\r\n          <FormattedMessage id=\"manage-user.manageUserTitle\" />\r\n        </div>\r\n\r\n        <div className=\"table-responsive mb-5\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"manage-user.email\" />\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"manage-user.firstname\" />\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"manage-user.lastname\" />\r\n                </th>\r\n                <th scope=\"col\" className=\"d-none d-md-table-cell\">\r\n                  <FormattedMessage id=\"manage-user.address\" />\r\n                </th>\r\n                <th scope=\"col\" className=\"d-none d-md-table-cell\">\r\n                  <FormattedMessage id=\"manage-user.phonenumber\" />\r\n                </th>\r\n                <th scope=\"col\" className=\"d-none d-md-table-cell\">\r\n                  <FormattedMessage id=\"manage-user.gender\" />\r\n                </th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {arrUsers &&\r\n                arrUsers.length > 0 &&\r\n                arrUsers.map((item, index) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>{item.email}</td>\r\n                      <td>{item.firstName}</td>\r\n                      <td>{item.lastName}</td>\r\n                      <td className=\"d-none d-md-table-cell\">{item.address}</td>\r\n                      <td className=\"d-none d-md-table-cell\">\r\n                        {item.phonenumber}\r\n                      </td>\r\n                      <td className=\"d-none d-md-table-cell\">{item.gender}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn\"\r\n                          onClick={() => this.handleEditUser(item)}\r\n                        >\r\n                          <FormattedMessage id=\"manage-user.btnEdit\" />\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          onClick={() => this.handleDeleteUser(item)}\r\n                        >\r\n                          <FormattedMessage id=\"manage-user.btnDelete\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listUsers: state.admin.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n    deleteUserRedux: (user) => dispatch(actions.deleteUser(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManageUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../scss/OutStandingDoctor.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { getAllSpecialties } from \"../../../../services/userService\"\r\nimport Slider from \"react-slick\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport { LANGUAGES } from \"../../../../utils\";\r\nimport { withRouter } from \"react-router\";\r\nclass OutStandingDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctors: [],\r\n      dataSpecialty: [],\r\n      slides: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n      this.assignDataOfCarousel();\r\n    }\r\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\r\n      this.setState({\r\n        arrDoctors: this.props.topDoctorsRedux,\r\n      });\r\n    }\r\n    if (prevState.arrDoctors !== this.state.arrDoctors) {\r\n      this.assignDataOfCarousel(this.state.arrDoctors);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.props.loadTopDoctors();\r\n    try {\r\n      const res = await getAllSpecialties();\r\n      if (res.errCode === 0) {\r\n        console.log(\"check data\", res.data);\r\n        this.setState({ dataSpecialty: res.data ? res.data : [] });\r\n        console.log(this.state);\r\n      } else {\r\n        console.error(\"Failed to get all specialty\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n  handleViewDetailDoctor(doctorId) {\r\n    this.props.history.push(`/detail-doctor/${doctorId}`);\r\n  }\r\n  // assignDataOfCarousel() {\r\n  //   let { arrDoctors, dataSpecialty } = this.state;\r\n  //   let { language } = this.props;\r\n\r\n  //   let slides = [];\r\n\r\n  //   if (arrDoctors && arrDoctors.length > 0) {\r\n  //     arrDoctors.forEach((item, index) => {\r\n  //       let imgBase64 = \"\";\r\n  //       if (item.image) {\r\n  //         imgBase64 = Buffer.from(item.image, \"base64\").toString(\"binary\");\r\n  //       }\r\n\r\n  //       let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\r\n  //       let nameEn = `${item.positionData.valueEn}, ${item.lastName} ${item.firstName}`;\r\n  //       let specialtyId = item.Doctor_Infor.specialtyId\r\n  //       // Create a new slide object for each iteration\r\n  //       let slide = {\r\n  //         img: imgBase64,\r\n  //         mainTitle: language === LANGUAGES.VI ? nameVi : nameEn,\r\n  //         doctorId: item.id,\r\n  //         specialtyId: specialtyId\r\n  //       };\r\n\r\n  //       slides.push(slide);\r\n  //     });\r\n  //     this.setState({\r\n  //       slides: slides,\r\n  //     });\r\n  //   }\r\n  // }\r\n  assignDataOfCarousel() {\r\n    let { arrDoctors, dataSpecialty } = this.state;\r\n    let { language } = this.props;\r\n    // console.log(\"dataspe\", dataSpecialty)\r\n    \r\n    let slides = [];\r\n\r\n    if (arrDoctors && arrDoctors.length > 0) {\r\n      arrDoctors.forEach((item, index) => {\r\n        let imgBase64 = \"\";\r\n        if (item.image) {\r\n          imgBase64 = Buffer.from(item.image, \"base64\").toString(\"binary\");\r\n        }\r\n        let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\r\n        let nameEn = `${item.positionData.valueEn}, ${item.lastName} ${item.firstName}`;\r\n\r\n        let specialtyID = item.Doctor_Infor.specialtyId\r\n        let specialtyName = \"\";\r\n        // console.log(\"namename\", specialtyID, dataSpecialty.length)\r\n        for (let i = 0; i < dataSpecialty.length; i++) {\r\n          if (dataSpecialty[i].id === specialtyID) {\r\n            specialtyName = dataSpecialty[i].name;\r\n            break;\r\n          }\r\n        }\r\n\r\n\r\n        // Create a new slide object for each iteration\r\n        let slide = {\r\n          img: imgBase64,\r\n          mainTitle: language === LANGUAGES.VI ? nameVi : nameEn,\r\n          doctorId: item.id,\r\n          specialtyName\r\n        };\r\n\r\n        slides.push(slide);\r\n      });\r\n\r\n      this.setState({\r\n        slides: slides,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let language = this.props.language;\r\n    let { slides } = this.state;\r\n    console.log(\"state\", this.state);\r\n    // console.log(\"props\", this.props);\r\n    // const imgDivStyle = {\r\n    //   backgroundImage: slide && slide.img ? `url(${slide.img})` : \"none\",\r\n    // };\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid outstanding-container\">\r\n          <div className=\"container\">\r\n            <div className=\"outstanding-header\">\r\n              <span className=\"header-title header-title-underline\">\r\n                {\" \"}\r\n                <FormattedMessage id=\"home-page.out-standings-doctor\" />\r\n              </span>\r\n              <span className=\"home-btn-see-more\">\r\n                <FormattedMessage id=\"home-page.btnSeeMore\" />\r\n              </span>\r\n            </div>\r\n            <Slider {...this.props.settings}>\r\n              {slides.map((slide, index) => {\r\n                return (\r\n                  <div className=\"card-container\">\r\n                    <div\r\n                      className=\"card p-2 py-3 text-center\"\r\n                      onClick={() =>\r\n                        this.handleViewDetailDoctor(slide.doctorId)\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <div\r\n                        className=\" mb-2 avt-doctor\"\r\n                        style={{\r\n                          backgroundImage: `url(${slide.img})`,\r\n                        }}\r\n                      ></div>\r\n                      <h5 className=\"mb-0 main-title\">{slide.mainTitle}</h5>\r\n                      <small>{slide.specialtyName}</small>\r\n                      {/* <div className=\"ratings mt-2\">\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                  </div> */}\r\n                      <div className=\"mt-4 apointment\">\r\n                        <button className=\"btn btn-success text-uppercase\">\r\n                          Book Appointment\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"section-common section-outstanding-doctor\">\r\n          <div className=\"section-header\">\r\n            <span className=\"title-section\">\r\n             \r\n            </span>\r\n            <button className=\"btn-section\">\r\n              \r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"section-body\">\r\n            <Slider {...this.props.settings}>\r\n              {arrDoctors &&\r\n                arrDoctors.length > 0 &&\r\n                arrDoctors.map((item, index) => {\r\n                  let imgBase64 = \"\";\r\n                  if (item.image) {\r\n                    imgBase64 = new Buffer(item.image, \"base64\").toString(\r\n                      \"binary\"\r\n                    );\r\n                  }\r\n                  let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\r\n                  let nameEn = `${item.positionData.valueEn}, ${item.lastName} ${item.firstName}`;\r\n                  return (\r\n                    <div\r\n                      className=\"section-custiomize\"\r\n                      key={index}\r\n                      onClick={() => this.handleViewDetailDoctor(item)}\r\n                    >\r\n                      <div className=\"slider-card\">\r\n                        <div\r\n                          className=\"bg-img section-outstanding-doctor\"\r\n                          style={{ backgroundImage: `url(${imgBase64})` }}\r\n                        ></div>\r\n                        <div className=\"slider-card-detail\">\r\n                          <span className=\"slider-card-title\">\r\n                            {language === LANGUAGES.VI ? nameVi : nameEn}\r\n                          </span>\r\n                          <span className=\"doctor-title\">\r\n                            Tốt nghiệp Tâm lý trị liệu, trường Tâm lý Thực hành\r\n                            Paris{\" \"}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </Slider>\r\n          </div>\r\n        </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    topDoctorsRedux: state.admin.topDoctors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadTopDoctors: () => dispatch(actions.fetchTopDoctor()),\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"./DetailSpecialty.scss\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\r\nimport \"../../../styles/Base.scss\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport {\r\n  getDetailSpecialtyById,\r\n  getAllCodeService,\r\n} from \"../../../services/userService\";\r\nimport Footer from \"../../../containers/HomePage/Section/Info/Footer.js\";\r\nclass DetailSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctorId: [],\r\n      arrLocations: [],\r\n      dataDetailSpecialty: {},\r\n      listDoctors: [],\r\n      expanded: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      //get details doctor\r\n      let id = this.props.match.params.id;\r\n      let res = await getDetailSpecialtyById({\r\n        id,\r\n        location: \"ALL\",\r\n      });\r\n\r\n      if (res && res.errCode === 0) {\r\n        let listDoctors = res.listDoctors;\r\n        let arrDoctorId = [];\r\n        if (listDoctors && listDoctors.length > 0) {\r\n          listDoctors.map((item) => {\r\n            arrDoctorId.push(item.doctorId);\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          arrDoctorId: arrDoctorId,\r\n        });\r\n      }\r\n\r\n      //get select location\r\n      let locations = await getAllCodeService(\"PROVINCE\");\r\n      console.log(\"PROVINCE\", locations);\r\n      if (locations && locations.data && locations.data.length > 0) {\r\n        locations.data.unshift({\r\n          keyMap: \"ALL\",\r\n          type: \"PROVINCE\",\r\n          valueEN: \"Nationally\",\r\n          valueVI: \"Toàn quốc\",\r\n        });\r\n        this.setState({\r\n          arrLocations: locations.data,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {}\r\n  toggleExpand = () => {\r\n    this.setState((prevState) => ({\r\n      expanded: !prevState.expanded,\r\n    }));\r\n  };\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let location = event.target.value;\r\n      //get details doctor\r\n      let id = this.props.match.params.id;\r\n      let res = await getDetailSpecialtyById({\r\n        id,\r\n        location: location,\r\n      });\r\n      console.log(\"on change select\", res, location);\r\n      if (res && res.errCode === 0) {\r\n        let listDoctors = res.listDoctors;\r\n        let arrDoctorId = [];\r\n        if (listDoctors && listDoctors.length > 0) {\r\n          listDoctors.map((item) => {\r\n            arrDoctorId.push(item.doctorId);\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          dataDetailSpecialty: res.data,\r\n          arrDoctorId: arrDoctorId,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    let { arrDoctorId, dataDetailSpecialty, arrLocations } = this.state;\r\n    let { language } = this.props;\r\n    const { expanded } = this.state;\r\n    let specialityImage = \"\";\r\n    console.log(\"details: \", this.state);\r\n    if (dataDetailSpecialty.image) {\r\n      specialityImage = Buffer.from(\r\n        dataDetailSpecialty.image,\r\n        \"base64\"\r\n      ).toString(\"binary\");\r\n    }\r\n    // console.log(\"image\", dataDetailSpecialty.data.image);\r\n    // Check if dataDetailSpecialty and descriptionHTML exist\r\n    const contentToShow =\r\n      dataDetailSpecialty && dataDetailSpecialty.descriptionHTML\r\n        ? expanded\r\n          ? dataDetailSpecialty.descriptionHTML\r\n          : dataDetailSpecialty.descriptionHTML.slice(\r\n              0,\r\n              Math.floor(dataDetailSpecialty.descriptionHTML.length * 0.4)\r\n            )\r\n        : \"\";\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className=\"container-fluid detail-specialty-container\">\r\n          <div\r\n            className=\"detail-specialty-header container-fluid\"\r\n            style={{\r\n              backgroundImage: `url(${specialityImage}) `,\r\n            }}\r\n          >\r\n            <div className=\"detail-specialty-header-content\">\r\n              {dataDetailSpecialty &&\r\n                dataDetailSpecialty.descriptionMarkdown &&\r\n                dataDetailSpecialty.descriptionHTML && (\r\n                  <div className=\"container\">\r\n                    <div dangerouslySetInnerHTML={{ __html: contentToShow }} />\r\n                    {!expanded && (\r\n                      <span\r\n                        className=\"btn-show-hide\"\r\n                        onClick={this.toggleExpand}\r\n                      >\r\n                        See More\r\n                      </span>\r\n                    )}\r\n                    {expanded && (\r\n                      <span\r\n                        className=\"btn-show-hide\"\r\n                        onClick={this.toggleExpand}\r\n                      >\r\n                        Hide\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div className=\"select-location container\">\r\n            <select\r\n              onChange={(event) => this.handleOnChangeSelect(event)}\r\n              className=\"select-location-btn\"\r\n            >\r\n              {arrLocations &&\r\n                arrLocations.length > 0 &&\r\n                arrLocations.map((item, index) => {\r\n                  // console.log(item.label, \"item\", index);\r\n                  let labelVi = language === LANGUAGES.VI ? item.valueVI : \"\";\r\n                  let labelEn = language === LANGUAGES.EN ? item.valueEN : \"\";\r\n\r\n                  return (\r\n                    <option key={index} value={item.keyMap}>\r\n                      {language === LANGUAGES.VI ? labelVi : labelEn}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"container detail-specialty-body\">\r\n            {arrDoctorId &&\r\n              arrDoctorId.length > 0 &&\r\n              arrDoctorId.map((doctorId) => (\r\n                <div key={doctorId} className=\"row detail-doctor\">\r\n                  <div className=\"col-md-6 col-sm-12\">\r\n                    <ProfileDoctor\r\n                      doctorId={doctorId}\r\n                      isShowDescription={true}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 col-sm-12\">\r\n                    <div className=\"row\">\r\n                      <DoctorSchedule doctorId={doctorId ? doctorId : -1} />\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <DoctorExtraInfor doctorId={doctorId ? doctorId : -1} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"./DetailClinic.scss\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport DoctorSchedule from \"../Doctor/DoctorSchedule\";\r\nimport DoctorExtraInfor from \"../Doctor/DoctorExtraInfor\";\r\nimport ProfileDoctor from \"../Doctor/ProfileDoctor\";\r\nimport \"../../../styles/Base.scss\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport { getDetailClinicById } from \"../../../services/userService\";\r\nimport Footer from \"../../HomePage/Section/Info/Footer.js\";\r\nclass DetailClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrDoctorId: [],\r\n      arrLocations: [],\r\n      dataDetailClinic: {},\r\n      listDoctors: [],\r\n      expanded: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      //get details doctor\r\n      let id = this.props.match.params.id;\r\n      let res = await getDetailClinicById({\r\n        id,\r\n      });\r\n      console.log(\"object\", res);\r\n      if (res && res.errCode === 0) {\r\n        let listDoctors = res.listDoctors;\r\n        let arrDoctorId = [];\r\n        if (listDoctors && listDoctors.length > 0) {\r\n          listDoctors.map((item) => {\r\n            arrDoctorId.push(item.doctorId);\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          dataDetailClinic: res.data,\r\n          arrDoctorId: arrDoctorId,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {}\r\n  toggleExpand = () => {\r\n    this.setState((prevState) => ({\r\n      expanded: !prevState.expanded,\r\n    }));\r\n  };\r\n  handleOnChangeSelect = async (event) => {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      //get details doctor\r\n      let id = this.props.match.params.id;\r\n      let res = await getDetailClinicById({\r\n        id,\r\n      });\r\n      console.log(\"on change select\", res);\r\n      if (res && res.errCode === 0) {\r\n        let listDoctors = res.listDoctors;\r\n        let arrDoctorId = [];\r\n        if (listDoctors && listDoctors.length > 0) {\r\n          listDoctors.map((item) => {\r\n            arrDoctorId.push(item.doctorId);\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          dataDetailClinic: res.data,\r\n          arrDoctorId: arrDoctorId,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    let { arrDoctorId, dataDetailClinic, arrLocations } = this.state;\r\n    let { language } = this.props;\r\n    const { expanded } = this.state;\r\n    let specialityImage = \"\";\r\n    console.log(\"details: \", this.state);\r\n    if (dataDetailClinic.image) {\r\n      specialityImage = Buffer.from(dataDetailClinic.image, \"base64\").toString(\r\n        \"binary\"\r\n      );\r\n    }\r\n    // console.log(\"image\", dataDetailClinic.data.image);\r\n    // Check if dataDetailClinic and descriptionHTML exist\r\n    const contentToShow =\r\n      dataDetailClinic && dataDetailClinic.descriptionHTML\r\n        ? expanded\r\n          ? dataDetailClinic.descriptionHTML\r\n          : dataDetailClinic.descriptionHTML.slice(\r\n              0,\r\n              Math.floor(dataDetailClinic.descriptionHTML.length * 0.4)\r\n            )\r\n        : \"\";\r\n    return (\r\n      <>\r\n        <HomeHeader />\r\n        <div className=\"container-fluid detail-specialty-container\">\r\n          <div\r\n            className=\"detail-specialty-header container-fluid\"\r\n            style={{\r\n              backgroundImage: `url(${specialityImage}) `,\r\n            }}\r\n          >\r\n            <div className=\"detail-specialty-header-content\">\r\n              {dataDetailClinic &&\r\n                dataDetailClinic.descriptionMarkdown &&\r\n                dataDetailClinic.descriptionHTML && (\r\n                  <div className=\"container\">\r\n                    <div dangerouslySetInnerHTML={{ __html: contentToShow }} />\r\n                    {!expanded && (\r\n                      <span\r\n                        className=\"btn-show-hide\"\r\n                        onClick={this.toggleExpand}\r\n                      >\r\n                        See More\r\n                      </span>\r\n                    )}\r\n                    {expanded && (\r\n                      <span\r\n                        className=\"btn-show-hide\"\r\n                        onClick={this.toggleExpand}\r\n                      >\r\n                        Hide\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div className=\"container detail-specialty-body\">\r\n            {arrDoctorId &&\r\n              arrDoctorId.length > 0 &&\r\n              arrDoctorId.map((doctorId) => (\r\n                <div key={doctorId} className=\"row detail-doctor\">\r\n                  <div className=\"col-md-6 col-sm-12\">\r\n                    <ProfileDoctor\r\n                      doctorId={doctorId}\r\n                      isShowDescription={true}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 col-sm-12\">\r\n                    <div className=\"row\">\r\n                      <DoctorSchedule doctorId={doctorId ? doctorId : -1} />\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <DoctorExtraInfor doctorId={doctorId ? doctorId : -1} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const appStartUpComplete = () => ({\r\n  type: actionTypes.APP_START_UP_COMPLETE,\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n  type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n  contentOfConfirmModal: contentOfConfirmModal,\r\n});\r\n\r\nexport const changeLanguageApp = (language) => ({\r\n  type: actionTypes.CHANGE_LANGUAGE,\r\n  language: language,\r\n});\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nexport const addUserSuccess = () => ({\r\n  type: actionTypes.ADD_USER_SUCCESS,\r\n});\r\n\r\nexport const userLoginSuccess = (userInfo) => ({\r\n  type: actionTypes.USER_LOGIN_SUCCESS,\r\n  userInfo: userInfo,\r\n});\r\n\r\nexport const userLoginFail = () => ({\r\n  type: actionTypes.USER_LOGIN_FAIL,\r\n});\r\n\r\nexport const processLogout = () => ({\r\n  type: actionTypes.PROCESS_LOGOUT,\r\n});\r\n","import actionTypes from \"./actionTypes\";\r\nimport {\r\n  getAllCodeService,\r\n  createNewUserService,\r\n  getAllUsers,\r\n  deleteUserService,\r\n  editUserService,\r\n  getTopDoctorHomeService,\r\n  getAllDoctorsService,\r\n  saveDetailDoctor,\r\n  getAllSpecialties,\r\n  getAllClinics,\r\n} from \"../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n//Gender\r\nexport const fetchGenderStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_GENDER_START });\r\n      let res = await getAllCodeService(\"gender\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchGenderSucess(res.data));\r\n      } else {\r\n        dispatch(fetchGenderFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchGenderFailed(err));\r\n      console.log(\"Failed to fetch\", err);\r\n    }\r\n  };\r\n};\r\nexport const fetchGenderSucess = (genderData) => ({\r\n  type: actionTypes.FETCH_GENDER_SUCCESS,\r\n  data: genderData,\r\n});\r\nexport const fetchGenderFailed = () => ({\r\n  type: actionTypes.FETCH_GENDER_FAILED,\r\n});\r\n\r\n//Position\r\nexport const fetchPositionStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_POSITION_START });\r\n      let res = await getAllCodeService(\"position\");\r\n      if (res && res.errCode === 0) {\r\n        console.log(getState);\r\n        dispatch(fetchPositionSucess(res.data));\r\n      } else {\r\n        dispatch(fetchPositionFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchPositionFailed(err));\r\n      console.log(\"Failed to fetch\", err);\r\n    }\r\n  };\r\n};\r\nexport const fetchPositionSucess = (positionData) => ({\r\n  type: actionTypes.FETCH_POSITION_SUCCESS,\r\n  data: positionData,\r\n});\r\nexport const fetchPositionFailed = () => ({\r\n  type: actionTypes.FETCH_POSITION_FAILED,\r\n});\r\n\r\n//Role\r\nexport const fetchRoleStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_ROLE_START });\r\n      let res = await getAllCodeService(\"role\");\r\n      if (res && res.errCode === 0) {\r\n        console.log(getState);\r\n        dispatch(fetchRoleSucess(res.data));\r\n      } else {\r\n        dispatch(fetchRoleFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchRoleFailed(err));\r\n      console.log(\"Failed to fetch\", err);\r\n    }\r\n  };\r\n};\r\nexport const fetchRoleSucess = (roleData) => ({\r\n  type: actionTypes.FETCH_ROLE_SUCCESS,\r\n  data: roleData,\r\n});\r\nexport const fetchRoleFailed = () => ({\r\n  type: actionTypes.FETCH_ROLE_FAILED,\r\n});\r\n\r\n// user\r\nexport const createNewUser = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await createNewUserService(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(<FormattedMessage id=\"manage-user.userCreatedSuccess\" />);\r\n        dispatch(saveUserSuccess());\r\n        dispatch(fetchAllUserStart());\r\n      } else {\r\n        dispatch(saveUserFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(saveUserFailed(err));\r\n      console.log(\"Failed to create new user\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveUserSuccess = () => ({\r\n  type: actionTypes.CREATE_USER_SUCCESS,\r\n});\r\nexport const saveUserFailed = () => ({\r\n  type: actionTypes.CREATE_USER_FAILED,\r\n});\r\n\r\n//get all users\r\nexport const fetchAllUserStart = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllUsers(\"ALL\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchAllUserSuccess(res.users.reverse()));\r\n      } else {\r\n        dispatch(fetchAllUserFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchAllUserFailed());\r\n      console.log(\"Failed to get all users\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllUserSuccess = (data) => ({\r\n  type: actionTypes.FETCH_ALL_USERS_SUCCESS,\r\n  users: data,\r\n});\r\nexport const fetchAllUserFailed = () => ({\r\n  type: actionTypes.FETCH_ALL_USERS_FAILED,\r\n});\r\n\r\n//delete user\r\nexport const deleteUser = (userId) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await deleteUserService(userId);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(<FormattedMessage id=\"manage-user.userDeletedSuccess\" />);\r\n        dispatch(deleteUserSuccess());\r\n        dispatch(fetchAllUserStart());\r\n      } else {\r\n        toast.error(<FormattedMessage id=\"manage-user.userDeleteFailed\" />);\r\n        dispatch(deleteUserFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(deleteUserFailed(err));\r\n      console.log(\"Failed to delete user\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUserSuccess = () => ({\r\n  type: actionTypes.DELETE_USER_SUCCESS,\r\n});\r\n\r\nexport const deleteUserFailed = (data) => ({\r\n  type: actionTypes.DELETE_USER_FAILED,\r\n});\r\n\r\n//edit user\r\nexport const editUser = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await editUserService(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(<FormattedMessage id=\"manage-user.updateUserSuccess\" />);\r\n        dispatch(editUserSuccess());\r\n        dispatch(fetchAllUserStart());\r\n      } else {\r\n        toast.error(\r\n          <FormattedMessage id=\"manage-user.updateUserSuccessFailed\" />\r\n        );\r\n        dispatch(editUserFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(editUserFailed(err));\r\n      console.log(\"Failed to edit user\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const editUserSuccess = () => ({\r\n  type: actionTypes.EDIT_USER_SUCCESS,\r\n});\r\n\r\nexport const editUserFailed = (data) => ({\r\n  type: actionTypes.EDIT_USER_FAILED,\r\n});\r\n\r\n//get top doctors\r\nexport const fetchTopDoctor = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getTopDoctorHomeService(\"\");\r\n      console.log(\"action\", res);\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchTopDoctorSuccess(res));\r\n      } else {\r\n        dispatch(fetchTopDoctorFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchTopDoctorFailed(err));\r\n      console.log(\"Failed to get top doctors\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchTopDoctorSuccess = (res) => ({\r\n  type: actionTypes.FETCH_TOP_DOCTORS_SUCCESS,\r\n  doctorsData: res.doctors,\r\n});\r\n\r\nexport const fetchTopDoctorFailed = (data) => ({\r\n  type: actionTypes.FETCH_TOP_DOCTORS_FAILED,\r\n});\r\n\r\n//get all doctors\r\nexport const fetchAllDoctors = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllDoctorsService();\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchAllDoctorsSuccess(res));\r\n      } else {\r\n        dispatch(fetchAllDoctorsFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchAllDoctorsFailed(err));\r\n      console.log(\"Failed to get all doctor\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllDoctorsSuccess = (res) => ({\r\n  type: actionTypes.FETCH_ALL_DOCTORS_SUCCESS,\r\n  allDoctorData: res.doctors,\r\n});\r\n\r\nexport const fetchAllDoctorsFailed = (data) => ({\r\n  type: actionTypes.FETCH_ALL_DOCTORS_FAILED,\r\n});\r\n\r\n//save details doctor\r\nexport const doSaveDetailDoctor = (data) => {\r\n  console.log(\"do detail doctor admin actions\", data);\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await saveDetailDoctor(data);\r\n      if (res && res.errCode === 0) {\r\n        toast.success(\r\n          <FormattedMessage id=\"manage-doctor.saveDetailDoctorSuccess\" />\r\n        );\r\n        dispatch(doSaveDetailDoctorSuccess(res));\r\n      } else {\r\n        toast.error(\r\n          <FormattedMessage id=\"manage-doctor.saveDetailDoctorFailure\" />\r\n        );\r\n        dispatch(doSaveDetailDoctorFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(doSaveDetailDoctorFailed(err));\r\n      console.log(\"Failed to save doctor\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const doSaveDetailDoctorSuccess = (res) => ({\r\n  type: actionTypes.SAVE_DETAIL_DOCTOR_SUCCESS,\r\n});\r\n\r\nexport const doSaveDetailDoctorFailed = (data) => ({\r\n  type: actionTypes.SAVE_DETAIL_DOCTOR_FAILED,\r\n});\r\n\r\n//getch schedule Time for doctor\r\nexport const fetchAllScheduleTime = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      let res = await getAllCodeService(\"TIME\");\r\n      if (res && res.errCode === 0) {\r\n        dispatch(fetchAllScheduleTimeSuccess(res));\r\n      } else {\r\n        dispatch(fetchAllScheduleTimeFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchAllScheduleTimeFailed(err));\r\n      console.log(\"Failed to fetch All code time\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchAllScheduleTimeSuccess = (res) => ({\r\n  type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS,\r\n  dataTime: res.data,\r\n});\r\n\r\nexport const fetchAllScheduleTimeFailed = (data) => ({\r\n  type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILED,\r\n});\r\n\r\n//fetch required doctor information\r\nexport const getRequiredDoctorInfor = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_START });\r\n      let resPrice = await getAllCodeService(\"PRICE\");\r\n      let resPayment = await getAllCodeService(\"PAYMENT\");\r\n      let resProvince = await getAllCodeService(\"PROVINCE\");\r\n      let resSpecialty = await getAllSpecialties();\r\n      let resClinic = await getAllClinics();\r\n      if (\r\n        resPrice &&\r\n        resPrice.errCode === 0 &&\r\n        resPayment &&\r\n        resPayment.errCode === 0 &&\r\n        resProvince &&\r\n        resProvince.errCode === 0 &&\r\n        resSpecialty &&\r\n        resSpecialty.errCode === 0 &&\r\n        resClinic &&\r\n        resClinic.errCode === 0\r\n      ) {\r\n        let data = {\r\n          resPrice: resPrice.data,\r\n          resPayment: resPayment.data,\r\n          resProvince: resProvince.data,\r\n          resSpecialty: resSpecialty.data,\r\n          resClinic: resClinic.data,\r\n        };\r\n        console.log(\"action data\", data);\r\n        dispatch(fetchRequiredDoctorInforSuccess(data));\r\n      } else {\r\n        dispatch(fetchRequiredDoctorInforFailed());\r\n      }\r\n    } catch (err) {\r\n      dispatch(fetchRequiredDoctorInforFailed(err));\r\n      console.log(\"Failed to fetch required doctor infor\", err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRequiredDoctorInforSuccess = (allRerequiredDoctorInfor) => ({\r\n  type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS,\r\n  data: allRerequiredDoctorInfor,\r\n});\r\n\r\nexport const fetchRequiredDoctorInforFailed = () => ({\r\n  type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAILED,\r\n});\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initContentOfConfirmModal = {\r\n  isOpen: false,\r\n  messageId: \"\",\r\n  handleFunc: null,\r\n  dataFunc: null,\r\n};\r\n\r\nconst initialState = {\r\n  started: true,\r\n  language: \"vi\",\r\n  systemMenuPath: \"/system/user-manage\",\r\n  contentOfConfirmModal: {\r\n    ...initContentOfConfirmModal,\r\n  },\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.APP_START_UP_COMPLETE:\r\n      return {\r\n        ...state,\r\n        started: true,\r\n      };\r\n    case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n      return {\r\n        ...state,\r\n        contentOfConfirmModal: {\r\n          ...state.contentOfConfirmModal,\r\n          ...action.contentOfConfirmModal,\r\n        },\r\n      };\r\n    case actionTypes.CHANGE_LANGUAGE:\r\n      console.log(\"hoidanit check redux\", action);\r\n      return {\r\n        ...state,\r\n        language: action.language,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  userInfo: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.USER_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userInfo: action.userInfo,\r\n      };\r\n    case actionTypes.USER_LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userInfo: null,\r\n      };\r\n    case actionTypes.PROCESS_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userInfo: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoadingGender: false,\r\n  isLoadingPosition: false,\r\n  isLoadingRole: false,\r\n  genders: [],\r\n  role: [],\r\n  position: [],\r\n  users: [],\r\n  topDoctors: [],\r\n  allDoctors: [],\r\n  allScheduleTime: [],\r\n  allRerequiredDoctorInfor: {},\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //gender\r\n    case actionTypes.FETCH_GENDER_START:\r\n      console.log(\"Fetch genders starting\", action);\r\n      state.isLoadingGender = true;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_GENDER_SUCCESS:\r\n      console.log(\"Fetch genders sucess\", action);\r\n      state.genders = action.data;\r\n      state.isLoadingGender = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_GENDER_FAILED:\r\n      console.log(\"Fetch genders failed\", action);\r\n      state.genders = [];\r\n      state.isLoadingGender = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    //position\r\n    case actionTypes.FETCH_POSITION_START:\r\n      console.log(\"Fetch position starting\", action);\r\n      state.isLoadingPosition = true;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_POSITION_SUCCESS:\r\n      console.log(\"Fetch position sucess\", action);\r\n      state.position = action.data;\r\n      state.isLoadingPosition = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_POSITION_FAILED:\r\n      console.log(\"Fetch position failed\", action);\r\n      state.position = [];\r\n      state.isLoadingPosition = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    //role\r\n    case actionTypes.FETCH_ROLE_START:\r\n      console.log(\"Fetch role starting\", action);\r\n      state.isLoadingRole = true;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ROLE_SUCCESS:\r\n      console.log(\"Fetch role sucess\", action);\r\n      state.role = action.data;\r\n      state.isLoadingRole = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ROLE_FAILED:\r\n      console.log(\"Fetch role failed\", action);\r\n      state.role = [];\r\n      state.isLoadingRole = false;\r\n      return {\r\n        ...state,\r\n      };\r\n    //all users\r\n    case actionTypes.FETCH_ALL_USERS_SUCCESS:\r\n      console.log(\"Fetch all users\", action.users);\r\n      state.users = action.users;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ALL_USERS_FAILED:\r\n      console.log(\"Fetch role failed\", action);\r\n      state.users = [];\r\n      return {\r\n        ...state,\r\n      };\r\n    //top doctors\r\n    case actionTypes.FETCH_TOP_DOCTORS_SUCCESS:\r\n      state.topDoctors = action.doctorsData;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_TOP_DOCTORS_FAILED:\r\n      state.topDoctors = [];\r\n      return {\r\n        ...state,\r\n      };\r\n    // all doctors\r\n    case actionTypes.FETCH_ALL_DOCTORS_SUCCESS:\r\n      state.allDoctors = action.allDoctorData;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ALL_DOCTORS_FAILED:\r\n      state.allDoctors = [];\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    // get time from allcode\r\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\r\n      state.allScheduleTime = action.dataTime;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILED:\r\n      state.allScheduleTime = [];\r\n      return {\r\n        ...state,\r\n      };\r\n    // get requrired doctor\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\r\n      // console.log(\"admin reducer\", action.data);\r\n      state.allRerequiredDoctorInfor = action.data;\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAILED:\r\n      state.allRerequiredDoctorInfor = {};\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\n\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nconst persistCommonConfig = {\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n  ...persistCommonConfig,\r\n  key: \"user\",\r\n  whitelist: [\"isLoggedIn\", \"userInfo\"],\r\n};\r\n\r\nconst appPersistConfig = {\r\n  ...persistCommonConfig,\r\n  key: \"app\",\r\n  whitelist: [\"language\"],\r\n};\r\n\r\nexport default (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer,\r\n  });\r\n","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n  authenticatedSelector: (state) => state.user.isLoggedIn,\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  redirectPath: \"/login\",\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n  // Want to redirect the user when they are authenticated\r\n  authenticatedSelector: (state) => !state.user.isLoggedIn,\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n  allowRedirectBack: false,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n    let linkToRedirect = isLoggedIn ? \"/system/user-manage\" : \"/home\";\r\n\r\n    return <Redirect to={linkToRedirect} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport \"./Login.scss\";\r\nimport { handleLoginApi, handleSignUpApi } from \"../../../services/userService\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      phoneNumber: \"\",\r\n      errMsg: \"\",\r\n      isShowPassword: false,\r\n      isOpenLogin: true,\r\n      isShowConfirmPassword: false,\r\n      isValidSignUp: {\r\n        email: true,\r\n        password: true,\r\n        confirmPassword: true,\r\n        phoneNumber: true,\r\n      },\r\n      isValidLogin: {\r\n        email: true,\r\n        password: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"VKU Healcare - login or sign up\";\r\n  }\r\n  resetState = () => {\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      phoneNumber: \"\",\r\n      errMsg: \"\",\r\n      isShowPassword: false,\r\n      isShowConfirmPassword: false,\r\n      isValid: {\r\n        email: true,\r\n        password: true,\r\n        confirmPassword: true,\r\n        phoneNumber: true,\r\n      },\r\n    });\r\n  };\r\n  handleOnchangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n\r\n  handleSwitchLoginAndSignUp = () => {\r\n    this.resetState();\r\n    setTimeout(() => {\r\n      this.setState((prevState) => ({\r\n        isOpenLogin: !prevState.isOpenLogin,\r\n      }));\r\n    }, 200); // 1000 milliseconds (1 second) delay\r\n  };\r\n  validateLogin = () => {\r\n    const { email, password } = this.state;\r\n    const isValidLogin = {\r\n      email: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email),\r\n      // password: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(password),\r\n      password: password.trim() !== \"\",\r\n      // confirmPassword: confirmPassword === password,\r\n      // phoneNumber: /^[0-9]+$/.test(phoneNumber),\r\n    };\r\n\r\n    this.setState({ isValidLogin });\r\n    return Object.values(isValidLogin).every((value) => value);\r\n  };\r\n  validateSignUp = () => {\r\n    const { email, password, confirmPassword, phoneNumber } = this.state;\r\n    console.log(email);\r\n    const isValidSignUp = {\r\n      // email: /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z.]+$/.test(email),\r\n      // password: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(password),\r\n      password: password.trim() !== \"\",\r\n      confirmPassword: confirmPassword === password,\r\n      phoneNumber: /^[0-9]+$/.test(phoneNumber), // Example: only digits\r\n    };\r\n    console.log(isValidSignUp);\r\n    this.setState({ isValidSignUp });\r\n    return Object.values(isValidSignUp).every((value) => value);\r\n  };\r\n\r\n  // Event handler for the login button\r\n  handleLogin = async () => {\r\n    if (this.validateLogin()) {\r\n      this.setState({\r\n        errMsg: \"\",\r\n      });\r\n\r\n      try {\r\n        const { email, password } = this.state;\r\n        let data = await handleLoginApi(email, password);\r\n        console.log(data.user);\r\n\r\n        if (data && data.errCode !== 0) {\r\n          this.setState({\r\n            errMsg: data.message,\r\n          });\r\n        }\r\n        if (data && data.errCode === 0) {\r\n          this.props.userLoginSuccess(data.user);\r\n          console.log(\"Login successful\");\r\n        } else {\r\n          console.log(\"errMsg\", this.state.errMsg);\r\n        }\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.data) {\r\n            this.setState({\r\n              errMsg: e.response.data.message,\r\n            });\r\n          }\r\n        }\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSignUp = async () => {\r\n    console.log(\"signUp\");\r\n    if (this.validateSignUp()) {\r\n      this.setState({\r\n        errMsg: \"\",\r\n      });\r\n\r\n      try {\r\n        const { email, phoneNumber, password } = this.state;\r\n        console.log(email, phoneNumber, password);\r\n        let data = await handleSignUpApi(email, phoneNumber, password);\r\n        console.log(data.user);\r\n\r\n        if (data && data.errCode !== 0) {\r\n          this.setState({\r\n            errMsg: data.message,\r\n          });\r\n        }\r\n        if (data && data.errCode === 0) {\r\n          this.props.userLoginSuccess(data.user);\r\n          console.log(\"Login successful\");\r\n        } else {\r\n          console.log(\"errMsg\", this.state.errMsg);\r\n        }\r\n      } catch (e) {\r\n        if (e.response) {\r\n          if (e.response.data) {\r\n            this.setState({\r\n              errMsg: e.response.data.message,\r\n            });\r\n          }\r\n        }\r\n        console.log(e.response);\r\n      }\r\n    }\r\n  };\r\n  // Event handler for the toggle password button\r\n  handleTogglePassword = (id) => {\r\n    if (id === \"password\") {\r\n      this.setState((prevState) => ({\r\n        isShowPassword: !prevState.isShowPassword,\r\n      }));\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        isShowConfirmPassword: !prevState.isShowConfirmPassword,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      this.handleLogin();\r\n    }\r\n  };\r\n  render() {\r\n    console.log(\" state\", this.state);\r\n    const { isOpenLogin, isValidLogin, isValidSignUp } = this.state;\r\n    // console.log(\"object valid\", isValid);\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row login-container\">\r\n            <div className=\"left col-7 d-none d-lg-block\">\r\n              <h1>VKU Healcare</h1>\r\n              <p>\r\n                You can get the care you need 24/7 – be it online or in person.\r\n                You will be treated by caring specialist doctors.\r\n              </p>\r\n            </div>\r\n            {isOpenLogin ? (\r\n              //render login\r\n              <div className=\"right col-5 is\">\r\n                <form action=\"\" className=\"gap-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\r\n                      isValidLogin.email\r\n                        ? \"form-control\"\r\n                        : \"form-control is-invalid\"\r\n                    }\r\n                    placeholder=\"Email address or phone number\"\r\n                    value={this.state.email}\r\n                    name=\"email\"\r\n                    onChange={(event) =>\r\n                      this.handleOnchangeInput(event, \"email\")\r\n                    }\r\n                  />\r\n                  <div className=\"password-input\">\r\n                    <input\r\n                      type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      className={\r\n                        isValidLogin.password\r\n                          ? \"form-control\"\r\n                          : \"form-control is-invalid\"\r\n                      }\r\n                      value={this.state.password}\r\n                      name=\"password\"\r\n                      onChange={(event) =>\r\n                        this.handleOnchangeInput(event, \"password\")\r\n                      }\r\n                      onKeyDown={(event) => this.handleKeyDown(event)}\r\n                    />\r\n                    {this.state.password && this.state.password !== \"\" && (\r\n                      <span\r\n                        className=\"show-hide\"\r\n                        onClick={() => this.handleTogglePassword(\"password\")}\r\n                        onKeyDown={(event) => this.handleKeyDown(event)}\r\n                      >\r\n                        {this.state.isShowPassword &&\r\n                        this.state.isShowPassword == true ? (\r\n                          <i class=\"fas fa-eye-slash\"></i>\r\n                        ) : (\r\n                          <i class=\"fas fa-eye\"></i>\r\n                        )}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"loginBtn\" onClick={() => this.handleLogin()}>\r\n                    Log In\r\n                  </span>\r\n                  <a href=\"\" className=\"forget\">\r\n                    Forgotten password?\r\n                  </a>\r\n                  <div className=\"sign-up\">\r\n                    <span\r\n                      onClick={this.handleSwitchLoginAndSignUp}\r\n                      className=\"signupBtn\"\r\n                    >\r\n                      Create New Account\r\n                    </span>\r\n                  </div>\r\n                </form>\r\n                <p>\r\n                  <b>Create a Page</b> for a celebrity, band, or business.\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              //render sign up\r\n              <div className=\"right col-5\">\r\n                <form action=\"\" className=\"gap-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email address\"\r\n                    value={this.state.email}\r\n                    name=\"email\"\r\n                    className={\r\n                      isValidSignUp.email\r\n                        ? \"form-control\"\r\n                        : \"form-control is-invalid\"\r\n                    }\r\n                    onChange={(event) =>\r\n                      this.handleOnchangeInput(event, \"email\")\r\n                    }\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Phone number\"\r\n                    value={this.state.phoneNumber}\r\n                    name=\"phoneNumber\"\r\n                    className={\r\n                      isValidSignUp.phoneNumber\r\n                        ? \"form-control\"\r\n                        : \"form-control is-invalid\"\r\n                    }\r\n                    onChange={(event) =>\r\n                      this.handleOnchangeInput(event, \"phoneNumber\")\r\n                    }\r\n                  />\r\n\r\n                  <div className=\"password-input\">\r\n                    <input\r\n                      type={this.state.isShowPassword ? \"text\" : \"password\"}\r\n                      placeholder=\"Password\"\r\n                      value={this.state.password}\r\n                      name=\"password\"\r\n                      onChange={(event) =>\r\n                        this.handleOnchangeInput(event, \"password\")\r\n                      }\r\n                      className={\r\n                        isValidSignUp.password\r\n                          ? \"form-control\"\r\n                          : \"form-control is-invalid\"\r\n                      }\r\n                      onKeyDown={(event) => this.handleKeyDown(event)}\r\n                    />\r\n                    {this.state.password && this.state.password !== \"\" && (\r\n                      //first password\r\n                      <span\r\n                        className=\"show-hide\"\r\n                        onClick={() => this.handleTogglePassword(\"password\")}\r\n                        onKeyDown={(event) => this.handleKeyDown(event)}\r\n                      >\r\n                        {this.state.isShowPassword &&\r\n                        this.state.isShowPassword == true ? (\r\n                          <i class=\"fas fa-eye-slash\"></i>\r\n                        ) : (\r\n                          <i class=\"fas fa-eye\"></i>\r\n                        )}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"password-input\">\r\n                    <input\r\n                      type={\r\n                        this.state.isShowConfirmPassword ? \"text\" : \"password\"\r\n                      }\r\n                      placeholder=\"Re-enter Password\"\r\n                      value={this.state.confirmPassword}\r\n                      name=\"confirmPassword\"\r\n                      className={\r\n                        isValidSignUp.confirmPassword\r\n                          ? \"form-control\"\r\n                          : \"form-control is-invalid\"\r\n                      }\r\n                      onChange={(event) =>\r\n                        this.handleOnchangeInput(event, \"confirmPassword\")\r\n                      }\r\n                      onKeyDown={(event) => this.handleKeyDown(event)}\r\n                    />\r\n                    {this.state.confirmPassword &&\r\n                      this.state.confirmPassword !== \"\" && (\r\n                        //second password\r\n                        <span\r\n                          className=\"show-hide\"\r\n                          onClick={() =>\r\n                            this.handleTogglePassword(\"confirmPassword\")\r\n                          }\r\n                          onKeyDown={(event) => this.handleKeyDown(event)}\r\n                        >\r\n                          {this.state.isShowConfirmPassword &&\r\n                          this.state.isShowConfirmPassword == true ? (\r\n                            <i class=\"fas fa-eye-slash\"></i>\r\n                          ) : (\r\n                            <i class=\"fas fa-eye\"></i>\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n                  <span\r\n                    className=\"loginBtn\"\r\n                    onClick={() => this.handleSignUp()}\r\n                  >\r\n                    Sign Up\r\n                  </span>\r\n                  <a\r\n                    className=\"forget\"\r\n                    onClick={this.handleSwitchLoginAndSignUp}\r\n                  >\r\n                    Already haved an account?\r\n                  </a>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    navigate: (path) => dispatch(push(path)),\r\n\r\n    // userLoginFail: () => dispatch(actions.userLoginFail()),\r\n    userLoginSuccess: (userInfo) =>\r\n      dispatch(actions.userLoginSuccess(userInfo)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import EventEmitter from \"events\";\r\n\r\nconst _emitter = new EventEmitter();\r\n\r\n_emitter.setMaxListeners(0);\r\n\r\nexport const emitter = _emitter;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { emitter } from \"../../utils/emitter\";\r\nclass ModalUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phonenumber: \"\",\r\n      address: \"\",\r\n      gender: \"1\",\r\n      roleId: \"1\",\r\n    };\r\n    this.listenToEmitter();\r\n  }\r\n\r\n  listenToEmitter() {\r\n    emitter.on(\"EVENT_CLEAR_MODAL_DATA\", () => {\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phonenumber: \"\",\r\n        address: \"\",\r\n        gender: \"1\",\r\n        roleId: \"1\",\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // You can perform any initial setup here if needed\r\n  }\r\n\r\n  handleCloseModal = () => {\r\n    // Call the onCloseModal prop to close the modal in the parent component\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  handleSaveChanges = (e) => {\r\n    e.preventDefault();\r\n    // Implement the logic to save the user details\r\n    // For example, call an action to save the user details to Redux store or API\r\n    let isValidForm = this.validateForm();\r\n    if (!isValidForm) {\r\n      alert(\"Please enter\");\r\n    } else {\r\n      console.log(this.props);\r\n      this.props.createNewUser(this.state);\r\n    }\r\n    // After saving, you can close the modal if needed\r\n    this.handleCloseModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { email, password, firstName, lastName, phonenumber, address } =\r\n      this.state;\r\n\r\n    // Define your validation rules here (you can customize them as needed)\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordMinLength = 6;\r\n    const phoneRegex = /^[0-9]+$/;\r\n\r\n    // Check if all required fields are filled\r\n    if (\r\n      !email ||\r\n      !password ||\r\n      !firstName ||\r\n      !lastName ||\r\n      !phonenumber ||\r\n      !address\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    // Check if email is valid\r\n    if (!email.match(emailRegex)) {\r\n      return false;\r\n    }\r\n\r\n    // Check if password meets minimum length\r\n    if (password.length < passwordMinLength) {\r\n      return false;\r\n    }\r\n\r\n    // Check if phone number contains only numbers\r\n    if (!phonenumber.match(phoneRegex)) {\r\n      return false;\r\n    }\r\n\r\n    // Add more validation rules as needed\r\n\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      phonenumber,\r\n      address,\r\n      gender,\r\n      roleId,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Modal show={true} onHide={this.handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New User</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <form onSubmit={this.handleSaveChanges}>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={firstName}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lastName}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Phone Number</label>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"phonenumber\"\r\n                value={phonenumber}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Gender</label>\r\n              <select\r\n                name=\"gender\"\r\n                value={gender}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              >\r\n                <option value=\"1\">Male</option>\r\n                <option value=\"0\">Female</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>User Role</label>\r\n              <select\r\n                name=\"roleId\"\r\n                value={roleId}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              >\r\n                <option value=\"1\">Admin</option>\r\n                <option value=\"2\">Patient</option>\r\n                <option value=\"3\">Doctor</option>\r\n              </select>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCloseModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSaveChanges}>\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\nclass ModalEditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phonenumber: \"\",\r\n      address: \"\",\r\n      gender: \"1\",\r\n      roleId: \"1\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let user = this.props.currentUser;\r\n    console.log(\"did mount\", user);\r\n    if (user && !_.isEmpty(user)) {\r\n      this.setState({\r\n        id: user.id,\r\n        email: user.email,\r\n        password: \"\",\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        phonenumber: user.phonenumber,\r\n        address: user.address,\r\n        gender: user.gender,\r\n        roleId: user.roleId,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCloseModal = () => {\r\n    this.props.onCloseEditModal();\r\n  };\r\n\r\n  handleSaveChanges = (e) => {\r\n    e.preventDefault();\r\n\r\n    let isValidForm = this.validateForm();\r\n    if (!isValidForm) {\r\n      alert(\"Please enter\");\r\n    } else {\r\n      this.props.editUser(this.state);\r\n    }\r\n\r\n    this.handleCloseModal();\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { email, password, firstName, lastName, phonenumber, address } =\r\n      this.state;\r\n\r\n    // Define your validation rules here (you can customize them as needed)\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordMinLength = 6;\r\n    const phoneRegex = /^[0-9]+$/;\r\n\r\n    // Check if all required fields are filled\r\n    if (\r\n      !email ||\r\n      !password ||\r\n      !firstName ||\r\n      !lastName ||\r\n      !phonenumber ||\r\n      !address\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    // Check if email is valid\r\n    if (!email.match(emailRegex)) {\r\n      return false;\r\n    }\r\n\r\n    // Check if password meets minimum length\r\n    if (password.length < passwordMinLength) {\r\n      return false;\r\n    }\r\n\r\n    // Check if phone number contains only numbers\r\n    if (!phonenumber.match(phoneRegex)) {\r\n      return false;\r\n    }\r\n\r\n    // Add more validation rules as needed\r\n\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      phonenumber,\r\n      address,\r\n      gender,\r\n      roleId,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Modal show={true} onHide={this.handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit user</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <form onSubmit={this.handleSaveChanges}>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                disabled\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={firstName}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={lastName}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Phone Number</label>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"phonenumber\"\r\n                value={phonenumber}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Address</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={address}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Gender</label>\r\n              <select\r\n                name=\"gender\"\r\n                value={gender}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n              >\r\n                <option value=\"1\">Male</option>\r\n                <option value=\"0\">Female</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>User Role</label>\r\n              <select\r\n                name=\"roleId\"\r\n                value={roleId}\r\n                onChange={(event) => {\r\n                  this.handleChange(event);\r\n                }}\r\n                className=\"form-control\"\r\n              >\r\n                <option value=\"1\">Admin</option>\r\n                <option value=\"2\">Patient</option>\r\n                <option value=\"3\">Doctor</option>\r\n              </select>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCloseModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSaveChanges}>\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserManage.scss\";\r\nimport {\r\n  getAllUsers,\r\n  createNewUserService,\r\n  deleteUserService,\r\n  editUserService,\r\n} from \"../../services/userService\";\r\nimport ModalUser from \"./ModalUser\";\r\nimport ModalEditUser from \"./ModalEditUser\";\r\nimport { emitter } from \"../../utils/emitter\";\r\nclass UserManage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrUsers: [],\r\n      showModalUser: false,\r\n      showModalEditUser: false,\r\n      userEdit: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getAllUsersFromReact();\r\n  }\r\n\r\n  getAllUsersFromReact = async () => {\r\n    let response = await getAllUsers(\"ALL\");\r\n    if (response && response.errCode === 0) {\r\n      this.setState({\r\n        arrUsers: response.users,\r\n      });\r\n    }\r\n  };\r\n\r\n  //handle event on view\r\n  handleAddNewUser() {\r\n    this.setState({ showModalUser: true });\r\n  }\r\n  handleEditUser(user) {\r\n    this.setState({ showModalEditUser: true, userEdit: user });\r\n  }\r\n  handleDeleteUser = async (user) => {\r\n    try {\r\n      let response = await deleteUserService(user.id);\r\n      if (response && response.errCode !== 0) {\r\n        alert(response.errMsg);\r\n      } else {\r\n        await this.getAllUsersFromReact();\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  doEditUser = async (data) => {\r\n    // console.log(\"update user from user manager\", data);\r\n    try {\r\n      let response = await editUserService(data);\r\n      if (response && response.errCode !== 0) {\r\n        alert(response.errMsg);\r\n      } else {\r\n        await this.getAllUsersFromReact();\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  createNewUser = async (data) => {\r\n    try {\r\n      let response = await createNewUserService(data);\r\n      if (response && response.errCode !== 0) {\r\n        alert(response.errMsg);\r\n      } else {\r\n        await this.getAllUsersFromReact();\r\n        emitter.emit(\"EVENT_CLEAR_MODAL_DATA\", { id: \"your id\" });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    console.log(\"create user from user manager\", data);\r\n  };\r\n\r\n  //handle open - close modal\r\n  handleCloseModal = () => {\r\n    this.setState({ showModalUser: false });\r\n  };\r\n\r\n  handleCloseEditModal = () => {\r\n    this.setState({ showModalEditUser: false });\r\n  };\r\n\r\n  // handleCloseModalEditUser = () => {\r\n  //   this.setState({ showModalEditUser: false });\r\n  // };\r\n\r\n  render() {\r\n    const { arrUsers, showModalUser, showModalEditUser } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"text-center\">Somthing different</div>\r\n        <div className=\"table-user\">\r\n          <div className=\"mx-1\">\r\n            <button\r\n              className=\"btn btn-primary px-5 d-flex align-items-center gap-2 mb-3\"\r\n              onClick={() => this.handleAddNewUser()}\r\n            >\r\n              <span>Add New User</span>\r\n              <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          {showModalUser && (\r\n            <ModalUser\r\n              onCloseModal={this.handleCloseModal}\r\n              createNewUser={this.createNewUser}\r\n            />\r\n          )}\r\n\r\n          {showModalEditUser && (\r\n            <ModalEditUser\r\n              onCloseEditModal={this.handleCloseEditModal}\r\n              currentUser={this.state.userEdit}\r\n              editUser={this.doEditUser}\r\n            />\r\n          )}\r\n\r\n          <table id=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>First Name</th>\r\n                <th>Address</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {arrUsers &&\r\n                arrUsers.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.firstName}</td>\r\n                    <td>{user.address}</td>\r\n                    <td>\r\n                      {/* Add action buttons or links here for each user */}\r\n                      {/* For example, a button to view user details */}\r\n\r\n                      <button\r\n                        className=\"btn red px-3\"\r\n                        onClick={() => this.handleEditUser(user)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-primary px-3\"\r\n                        onClick={() => this.handleDeleteUser(user)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Example handler for the \"View Details\" button\r\n  handleViewDetails = (userId) => {\r\n    // Implement the logic to handle the action, e.g., navigate to a user details page\r\n    console.log(\"View details for user with ID:\", userId);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageDoctor.scss\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"../../../styles/Base.scss\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { CRUD_ACTIONS, LANGUAGES } from \"../../../utils\";\r\n// import style manually\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport Select from \"react-select\";\r\nimport { text } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { getDetailInfoDoctor } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\n\r\nclass ManageDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: null,\r\n      hasOldData: false,\r\n      // availbleToSave: true,\r\n      action: \"\",\r\n      contentHTML: \"\",\r\n      contentMarkdown: \"\",\r\n      selectedDoctor: \"\",\r\n      description: \"\",\r\n      listDoctors: \"\",\r\n\r\n      //save doctor information\r\n      listPrice: [],\r\n      listPayment: [],\r\n      listProvince: [],\r\n      listClinic: [],\r\n      listSpecialty: [],\r\n\r\n      selectedPrice: \"\",\r\n      selectedPayment: \"\",\r\n      selectedProvince: \"\",\r\n      selectedClinic: \"\",\r\n      selectedSpecialty: \"\",\r\n\r\n      clinicId: \"\",\r\n      specialtyId: \"\",\r\n      nameClinic: \"\",\r\n      addressClinic: \"\",\r\n      note: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchAllDoctorRedux();\r\n    this.props.getRequiredDoctorInforRedux();\r\n  }\r\n\r\n  // buildDataSelectDoctor = (inputData, type) => {\r\n  //   let results = [];\r\n  //   let language = this.props.language;\r\n\r\n  //   if (inputData && inputData.length > 0) {\r\n  //     inputData.map((item, index) => {\r\n  //       let object = {};\r\n  //       let labelVi =\r\n  //         type === \"USER\" ? `${item.lastName} ${item.firstName}` : item.valueVI;\r\n  //       let labelEn =\r\n  //         type === \"USER\" ? `${item.firstName} ${item.lastName}` : item.valueEN;\r\n  //       object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n  //       object.value = type === \"USER\" ? item.id : item.keyMap;\r\n\r\n  //       if (type === \"PRICE\")\r\n  //         object[\"label\"] += \" \" + (language === LANGUAGES.VI ? \"VND\" : \"USD\");\r\n\r\n  //       results.push(object);\r\n  //     });\r\n  //   }\r\n\r\n  //   return results;\r\n  // };\r\n\r\n  buildDataSelectDoctor = (inputData, type) => {\r\n    let results = [];\r\n    let language = this.props.language;\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.forEach((item) => {\r\n        let object = {};\r\n        let labelVi = \"\";\r\n        let labelEn = \"\";\r\n\r\n        if (type === \"USER\") {\r\n          labelVi = `${item.lastName} ${item.firstName}`;\r\n          labelEn = `${item.firstName} ${item.lastName}`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.id;\r\n        } else if (type === \"PRICE\") {\r\n          // console.log(\"PRICE\", item);\r\n          labelVi = `${item.valueVI} VND`;\r\n          labelEn = `${item.valueEN} USD`;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n        } else if (type === \"PAYMENT\") {\r\n          // console.log(\"PAYMENT\", item);\r\n          labelVi = item.valueVI;\r\n          labelEn = item.valueEN;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n        } else if (type === \"PROVINCE\") {\r\n          labelVi = item.valueVI;\r\n          labelEn = item.valueEN;\r\n          object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.value = item.keyMap;\r\n        } else if (type === \"SPECIALTY\") {\r\n          // labelVi = item.valueVI;\r\n          // labelEn = item.valueEN;\r\n          // object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n        } else if (type === \"CLINIC\") {\r\n          // labelVi = item.valueVI;\r\n          // labelEn = item.valueEN;\r\n          // object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n          object.label = item.name;\r\n          object.value = item.id;\r\n        }\r\n\r\n        results.push(object);\r\n      });\r\n    }\r\n\r\n    return results;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.buildDataSelectDoctor(\r\n        this.props.allDoctors,\r\n        \"USER\"\r\n      );\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n      });\r\n    }\r\n    if (prevProps.language !== this.props.language) {\r\n      //update another\r\n      let allRerequiredDoctorInfor = this.props.allRerequiredDoctorInfor;\r\n      if (allRerequiredDoctorInfor) {\r\n        let { resPayment, resPrice, resProvince } = allRerequiredDoctorInfor;\r\n        let dataSelectPaymemt = this.buildDataSelectDoctor(\r\n          resPayment,\r\n          \"PAYMENT\"\r\n        );\r\n        let dataSelectProvince = this.buildDataSelectDoctor(\r\n          resProvince,\r\n          \"PROVINCE\"\r\n        );\r\n        let dataSelectPrice = this.buildDataSelectDoctor(resPrice, \"PRICE\");\r\n        this.setState({\r\n          listPrice: dataSelectPrice,\r\n          listPayment: dataSelectPaymemt,\r\n          listProvince: dataSelectProvince,\r\n        });\r\n      }\r\n      //update selected doctor\r\n      let dataSelect = this.buildDataSelectDoctor(\r\n        this.props.allDoctors,\r\n        \"USER\"\r\n      );\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n      });\r\n    }\r\n    if (\r\n      prevProps.allRerequiredDoctorInfor !== this.props.allRerequiredDoctorInfor\r\n    ) {\r\n      let allRerequiredDoctorInfor = this.props.allRerequiredDoctorInfor;\r\n      if (allRerequiredDoctorInfor) {\r\n        let { resPayment, resPrice, resProvince, resSpecialty, resClinic } =\r\n          allRerequiredDoctorInfor;\r\n\r\n        let dataSelectPaymemt = this.buildDataSelectDoctor(\r\n          resPayment,\r\n          \"PAYMENT\"\r\n        );\r\n        let dataSelectProvince = this.buildDataSelectDoctor(\r\n          resProvince,\r\n          \"PROVINCE\"\r\n        );\r\n        let dataSelectPrice = this.buildDataSelectDoctor(resPrice, \"PRICE\");\r\n        let dataSelectSpecialty = this.buildDataSelectDoctor(\r\n          resSpecialty,\r\n          \"SPECIALTY\"\r\n        );\r\n        let dataSelectClinic = this.buildDataSelectDoctor(resClinic, \"CLINIC\");\r\n        this.setState({\r\n          listPrice: dataSelectPrice,\r\n          listPayment: dataSelectPaymemt,\r\n          listProvince: dataSelectProvince,\r\n          listSpecialty: dataSelectSpecialty,\r\n          listClinic: dataSelectClinic,\r\n        });\r\n      } else {\r\n        console.log(\"allRerequiredDoctorInfor is not defined\");\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      contentMarkdown: text,\r\n      contentHTML: html,\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    let { listPayment, listPrice, listProvince, listSpecialty, listClinic } =\r\n      this.state;\r\n\r\n    let res = await getDetailInfoDoctor(selectedOption.value);\r\n    if (res && res.errCode === 0 && res.data.Markdown) {\r\n      let markdown = res.data.Markdown;\r\n      let provinceId = \"\";\r\n      let paymentId = \"\";\r\n      let priceId = \"\";\r\n      let nameClinic = \"\";\r\n      let specialtyId = \"\";\r\n      let clinicId = \"\";\r\n      let addressClinic = \"\";\r\n      let note = \"\";\r\n      let selectedProvince = \"\"; // Initialize with null\r\n      let selectedPayment = \"\"; // Initialize with null\r\n      let selectedPrice = \"\";\r\n      let selectedSpecialty = \"\";\r\n      let selectedClinic = \"\";\r\n      // let provinceId = \"\";\r\n      // let paymentId = \"\";\r\n      // let priceId = \"\";\r\n      // let nameClinic = \"\";\r\n      // let addressClinic = \"\";\r\n      // let note = \"\";\r\n      // let selectedProvince = \"\";\r\n      // let selectedPayment = \"\";\r\n      // let selectedPrice = \"\";\r\n      console.log(res);\r\n      if (res.data.Doctor_Infor) {\r\n        console.log(\"res\", res);\r\n        nameClinic = res.data.Doctor_Infor.nameClinic;\r\n        addressClinic = res.data.Doctor_Infor.addressClinic;\r\n        note = res.data.Doctor_Infor.note;\r\n        console.log(\r\n          \"id\",\r\n          res.data.Doctor_Infor.provinceId,\r\n          res.data.Doctor_Infor.paymentId\r\n        );\r\n\r\n        provinceId = res.data.Doctor_Infor.provinceId;\r\n        paymentId = res.data.Doctor_Infor.paymentId;\r\n        priceId = res.data.Doctor_Infor.priceId;\r\n        specialtyId = res.data.Doctor_Infor.specialtyId;\r\n        clinicId = res.data.Doctor_Infor.clinicId;\r\n        console.log(\"id before\", specialtyId, clinicId);\r\n\r\n        selectedPayment = listPayment.find((item) => {\r\n          return item && item.value.toString() === paymentId.toString();\r\n        });\r\n        selectedPrice = listPrice.find((item) => {\r\n          return item && item.value.toString() === priceId.toString();\r\n        });\r\n        selectedProvince = listProvince.find((item) => {\r\n          console.log(\"id before\", item);\r\n          return item && item.value.toString() === provinceId.toString();\r\n        });\r\n        selectedSpecialty = listSpecialty.find((item) => {\r\n          return item && item.value.toString() === specialtyId.toString();\r\n        });\r\n        selectedClinic = listClinic.find((item) => {\r\n          return item && item.value.toString() === clinicId.toString();\r\n        });\r\n        console.log(\"object clinic\", selectedClinic);\r\n        // selectedClinic = listClinic.find((item) => {\r\n        //   return item && item.value.toString() === clinicId.toString();\r\n        // });\r\n\r\n        // console.log(\r\n        //   \"findout\",\r\n        //   selectedPrice,\r\n        //   selectedProvince,\r\n        //   selectedPayment\r\n        // );\r\n      }\r\n      console.log(listPayment, listProvince, listPrice);\r\n      console.log(selectedPrice, selectedProvince, selectedPayment);\r\n      this.setState({\r\n        contentHTML: markdown.contentHTML,\r\n        contentMarkdown: markdown.contentMarkdown,\r\n        description: markdown.description,\r\n        hasOldData: true,\r\n        nameClinic,\r\n        addressClinic,\r\n        note,\r\n        selectedProvince,\r\n        selectedPayment,\r\n        selectedPrice,\r\n        // availbleToSave: true,\r\n        selectedSpecialty,\r\n        selectedClinic,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        contentHTML: \"\",\r\n        contentMarkdown: \"\",\r\n        description: \"\",\r\n        hasOldData: false,\r\n        nameClinic: \"\", // Set other related state properties to empty as needed\r\n        addressClinic: \"\",\r\n        note: \"\",\r\n        selectedProvince: \"\",\r\n        selectedPayment: \"\",\r\n        selectedPrice: \"\",\r\n        // availbleToSave: false, // Set other related state properties as needed\r\n        selectedSpecialty: \"\",\r\n        selectedClinic: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnChangeDesc = (event) => {\r\n    document.title = event.target.value;\r\n    this.setState({ description: event.target.value });\r\n  };\r\n\r\n  handleSavecontentMarkdown = () => {\r\n    // console.log(\"savecontentMarkdown\", this.state);\r\n    let { hasOldData, availbleToSave } = this.state;\r\n    // if (availbleToSave === true) {\r\n    this.props.doSaveDetailDoctorRedux({\r\n      contentHTML: this.state.contentHTML,\r\n      contentMarkdown: this.state.contentMarkdown,\r\n      description: this.state.description,\r\n      doctorId: this.state.selectedOption.value,\r\n      selectedPrice: this.state.selectedPrice.value,\r\n      selectedPayment: this.state.selectedPayment.value,\r\n      selectedProvince: this.state.selectedProvince.value,\r\n      nameClinic: this.state.nameClinic,\r\n      addressClinic: this.state.addressClinic,\r\n      note: this.state.note,\r\n      action: hasOldData === true ? CRUD_ACTIONS.EDIT : CRUD_ACTIONS.CREATE,\r\n      clinicId:\r\n        this.state.selectedClinic && this.state.selectedClinic.value\r\n          ? this.state.selectedClinic.value\r\n          : \"\",\r\n      specialtyId:\r\n        this.state.selectedSpecialty && this.state.selectedSpecialty.value\r\n          ? this.state.selectedSpecialty.value\r\n          : \"\",\r\n    });\r\n    // } else {\r\n    //   toast.error(\r\n    //     // <FormattedMessage id=\"manage-specialty.missingParameterError\" />\r\n    //     \"Vui long chon bac sy\"\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  handleSelectedDoctorInfor = async (selectedOption, name) => {\r\n    let stateName = name.name;\r\n    let stateCopy = { ...this.state };\r\n\r\n    stateCopy[stateName] = selectedOption;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n\r\n  handleOnChangeText = (event, id) => {\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = event.target.value;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedOption,\r\n      listDoctors,\r\n      listPrice,\r\n      listPayment,\r\n      listProvince,\r\n      listSpecialty,\r\n      listClinic,\r\n    } = this.state;\r\n    // console.log(\"listSpecialty\", this.state.listSpecialty);\r\n    return (\r\n      <>\r\n        <div className=\"app container\">\r\n          <div className=\"title mb-3\">\r\n            {\" \"}\r\n            <FormattedMessage id=\"manage-doctor.title\" />\r\n          </div>\r\n          <div className=\"doctor-and-description row\">\r\n            <div className=\"select col-12 col-md-4\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.doctorLabel\" />\r\n              </label>\r\n              <Select\r\n                value={selectedOption}\r\n                onChange={this.handleChangeSelect}\r\n                options={listDoctors}\r\n                placeholder={\r\n                  <FormattedMessage id=\"manage-doctor.select-placeholder-doctor\" />\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form col-12 col-md-8\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.description\" />\r\n              </label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"textAreaExample1\"\r\n                rows=\"4\"\r\n                value={this.state.description}\r\n                onChange={(event) => this.handleOnChangeDesc(event)}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"row select-list\">\r\n            <div class=\"col-12 col-md-4 select-item \">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.provinceLabel\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedProvince}\r\n                defaultValue={this.state.selectedProvince || \"Select\"}\r\n                onChange={this.handleSelectedDoctorInfor}\r\n                options={listProvince}\r\n                // placeholder={<FormattedMessage id=\"manage-doctor.select-placeholder-province\" />}\r\n\r\n                placeholder={\r\n                  this.state.selectedProvince ? (\r\n                    this.state.selectedProvince.label\r\n                  ) : (\r\n                    <FormattedMessage id=\"manage-doctor.select-placeholder-province\" />\r\n                  )\r\n                }\r\n                name={\"selectedProvince\"}\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-12 col-md-4 select-item\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.paymentLabel\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedPayment}\r\n                onChange={this.handleSelectedDoctorInfor}\r\n                options={listPayment}\r\n                placeholder={\r\n                  <FormattedMessage id=\"manage-doctor.select-placeholder-payment\" />\r\n                }\r\n                name={\"selectedPayment\"}\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-12 col-md-4 select-item\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.priceLabel\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedPrice}\r\n                onChange={this.handleSelectedDoctorInfor}\r\n                options={listPrice}\r\n                placeholder={\r\n                  <FormattedMessage id=\"manage-doctor.select-placeholder-price\" />\r\n                }\r\n                name={\"selectedPrice\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"row select-list\">\r\n            <div class=\"col-12 col-md-4 select-item \">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.nameClinic\" />\r\n              </label>\r\n              <span className=\"input-area\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  onChange={(event) => {\r\n                    this.handleOnChangeText(event, \"nameClinic\");\r\n                  }}\r\n                  value={this.state.nameClinic}\r\n                />\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"col-12 col-md-4 select-item\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.addressClinic\" />\r\n              </label>\r\n              <span className=\"input-area\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  onChange={(event) => {\r\n                    this.handleOnChangeText(event, \"addressClinic\");\r\n                  }}\r\n                  value={this.state.addressClinic}\r\n                />\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"col-12 col-md-4 select-item\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.note\" />\r\n              </label>\r\n              <span className=\"input-area\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  onChange={(event) => {\r\n                    this.handleOnChangeText(event, \"note\");\r\n                  }}\r\n                  value={this.state.note}\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row select-list\">\r\n            <div class=\"col-12 col-md-6 select-item \">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.specialty\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedSpecialty}\r\n                onChange={this.handleSelectedDoctorInfor}\r\n                options={listSpecialty}\r\n                placeholder={\r\n                  <FormattedMessage id=\"manage-doctor.select-placeholder-specialty\" />\r\n                }\r\n                name={\"selectedSpecialty\"}\r\n              />\r\n            </div>\r\n\r\n            <div class=\"col-12 col-md-6 select-item\">\r\n              <label className=\"form-label\" for=\"textAreaExample\">\r\n                <FormattedMessage id=\"manage-doctor.clinic\" />\r\n              </label>\r\n              <Select\r\n                value={this.state.selectedClinic}\r\n                onChange={this.handleSelectedDoctorInfor}\r\n                options={listClinic}\r\n                placeholder={\r\n                  <FormattedMessage id=\"manage-doctor.select-placeholder-clinic\" />\r\n                }\r\n                name={\"selectedClinic\"}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <MdEditor\r\n            style={{ height: \"400px\" }}\r\n            renderHTML={(text) => mdParser.render(text)}\r\n            onChange={this.handleEditorChange}\r\n            value={this.state.contentMarkdown}\r\n          />\r\n          <button\r\n            onClick={this.handleSavecontentMarkdown}\r\n            className=\"btn btn-primary px-5 mt-2\"\r\n          >\r\n            <FormattedMessage id=\"manage-doctor.btnSave\" />\r\n          </button>\r\n\r\n          <div style={{ height: \"200px\" }}></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allDoctors: state.admin.allDoctors,\r\n    language: state.app.language,\r\n    allRerequiredDoctorInfor: state.admin.allRerequiredDoctorInfor,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDoctorRedux: () => dispatch(actions.fetchAllDoctors()),\r\n    getRequiredDoctorInforRedux: () =>\r\n      dispatch(actions.getRequiredDoctorInfor()),\r\n    doSaveDetailDoctorRedux: (data) =>\r\n      dispatch(actions.doSaveDetailDoctor(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n  {\r\n    //Manage user\r\n    name: \"menu.admin.manage-user\",\r\n    menus: [\r\n      {\r\n        name: \"menu.admin.crud\",\r\n        link: \"/system/user-manage\",\r\n        // subMenus: [\r\n        //   {\r\n        //     name: \"menu.system.system-administrator.user-manage\",\r\n        //     link: \"/system/user-manage\",\r\n        //   },\r\n        //   {\r\n        //     name: \"menu.system.system-administrator.user-redux\",\r\n        //     link: \"/system/user-redux\",\r\n        //   },\r\n        // ],\r\n      },\r\n      { name: \"menu.admin.crud-redux\", link: \"/system/user-redux\" },\r\n      { name: \"menu.admin.manage-admin\", link: \"/system/user-admin\" },\r\n      { name: \"menu.admin.manage-doctor\", link: \"/system/manage-doctor\" },\r\n      {\r\n        name: \"menu.doctor.manage-schedule\",\r\n        link: \"/doctor/manage-schedule\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    name: \"menu.admin.clinic\",\r\n    menus: [\r\n      { name: \"menu.admin.manage-clinic\", link: \"/system/manage-clinic\" },\r\n    ],\r\n  },\r\n\r\n  {\r\n    name: \"menu.admin.specialty\",\r\n    menus: [\r\n      { name: \"menu.admin.manage-specialty\", link: \"/system/manage-specialty\" },\r\n    ],\r\n  },\r\n  {\r\n    name: \"menu.admin.handbook\",\r\n    menus: [\r\n      { name: \"menu.admin.manage-handbook\", link: \"/system/manage-handbook\" },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const doctorMenu = [\r\n  {\r\n    name: \"menu.doctor.manage-user\",\r\n    menus: [\r\n      {\r\n        name: \"menu.doctor.manage-schedule\",\r\n        link: \"/doctor/manage-schedule\",\r\n      },\r\n      {\r\n        name: \"menu.doctor.manage-patient\",\r\n        link: \"/doctor/manage-patient\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from \"../../components/Navigator\";\r\nimport { adminMenu, doctorMenu } from \"./menuApp\";\r\nimport \"./Header.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport _ from \"lodash\";\r\nimport { USER_ROLE } from \"../../utils/constant\";\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeLanguage: \"vi\",\r\n      menuApp: [],\r\n    };\r\n  }\r\n\r\n  handleLanguageClick = (language) => {\r\n    this.props.changeLanguageAppRedux(language);\r\n    this.setState({ activeLanguage: language });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { userInfo } = this.props;\r\n    let menu = [];\r\n    if (userInfo && !_.isEmpty(userInfo)) {\r\n      let role = userInfo.roleId;\r\n      if (role === USER_ROLE.ADMIN) {\r\n        menu = adminMenu;\r\n      }\r\n      if (role === USER_ROLE.DOCTOR) {\r\n        menu = doctorMenu;\r\n      }\r\n    }\r\n    this.setState({ menuApp: menu });\r\n  }\r\n\r\n  render() {\r\n    const { processLogout, userInfo } = this.props;\r\n    const { activeLanguage } = this.state;\r\n    // console.log(\"user info\", userInfo);\r\n    return (\r\n      <div className=\"header-container\">\r\n        {/* thanh navigator */}\r\n        <div className=\"header-tabs-container\">\r\n          <Navigator menus={this.state.menuApp} />\r\n        </div>\r\n        <div className=\"languages\">\r\n          <span className=\"welcome\">\r\n            <FormattedMessage id=\"homeheader.welcome\" />\r\n            {userInfo && userInfo.firstName && userInfo.lastName\r\n              ? userInfo.firstName + \" \" + userInfo.lastName\r\n              : \"\"}\r\n          </span>\r\n          <span\r\n            className={`language-vi ${activeLanguage === \"vi\" ? \"active\" : \"\"}`}\r\n            onClick={() => this.handleLanguageClick(\"vi\")}\r\n          >\r\n            VN\r\n          </span>\r\n          <span\r\n            className={`language-en ${activeLanguage === \"en\" ? \"active\" : \"\"}`}\r\n            onClick={() => this.handleLanguageClick(\"en\")}\r\n          >\r\n            EN\r\n          </span>\r\n          <div className=\"btn btn-logout\" onClick={processLogout}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n          </div>\r\n        </div>\r\n        {/* nút logout */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n    userInfo: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n    changeLanguageAppRedux: (language) =>\r\n      dispatch(actions.changeLanguageApp(language)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageSpecialty.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nimport { createSpecialty } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageSpecialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      imageBase64: \"\",\r\n      descriptionHTML: \"\",\r\n      descriptionMarkdown: \"\",\r\n      previewImgURL: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {}\r\n\r\n  handleOnChangeInput = (event, field) => {\r\n    this.setState({\r\n      [field]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      descriptionMarkdown: text,\r\n      descriptionHTML: html,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImgURL: objectUrl,\r\n        imageBase64: base64,\r\n      });\r\n      console.log(\"Image URL: \" + objectUrl);\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { name, imageBase64, descriptionHTML, descriptionMarkdown } =\r\n      this.state;\r\n\r\n    // Check if any required fields are empty\r\n    if (!name || !imageBase64 || !descriptionHTML || !descriptionMarkdown) {\r\n      toast.error(\r\n        <FormattedMessage id=\"manage-specialty.missingParameterError\" />\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Call the API service to create a new specialty\r\n    createSpecialty({\r\n      name,\r\n      imageBase64,\r\n      descriptionHTML,\r\n      descriptionMarkdown,\r\n    })\r\n      .then((newSpecialty) => {\r\n        if (newSpecialty.errCode === 0) {\r\n          toast.success(\r\n            <FormattedMessage id=\"manage-specialty.createSpecialtySuccess\" />\r\n          );\r\n        } else {\r\n          toast.error(\r\n            <FormattedMessage id=\"manage-specialty.createSpecialtyFailed\" />\r\n          );\r\n        }\r\n        this.setState({\r\n          name: \"\",\r\n          imageBase64: \"\",\r\n          descriptionHTML: \"\",\r\n          descriptionMarkdown: \"\",\r\n          previewImgURL: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(<FormattedMessage id=\"manage-specialty.unknownError\" />);\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"specialty-container\">\r\n          <div className=\"container\">\r\n            <div className=\"row mb-5\">\r\n              {/* Input for Specialty Name */}\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"specialtyName\">\r\n                    <FormattedMessage id=\"manage-specialty.specialtyName\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"specialtyName\"\r\n                    className=\"form-control input-area\"\r\n                    value={this.state.name}\r\n                    onChange={(event) =>\r\n                      this.handleOnChangeInput(event, \"name\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Input for Specialty Image */}\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"inputImage\" className=\"d-block\">\r\n                  <FormattedMessage id=\"manage-specialty.specialtyImage\" />\r\n                </label>\r\n                <div className=\"previewImg-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"inputImage\"\r\n                    onChange={(event) => this.handleOnChangeImage(event)}\r\n                  />\r\n                  <label htmlFor=\"inputImage\">\r\n                    <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                    <i className=\"fas fa-upload\"></i>\r\n                  </label>\r\n                  <div\r\n                    className=\"preview-image\"\r\n                    style={{\r\n                      backgroundImage: `url(${this.state.previewImgURL})`,\r\n                    }}\r\n                    onClick={() => this.openPreviewImage()}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <MdEditor\r\n                  style={{ height: \"500px\" }}\r\n                  renderHTML={(text) => mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  value={this.state.descriptionMarkdown}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Save button */}\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-md-12\">\r\n                <button\r\n                  className=\"btn btn-primary px-5\"\r\n                  onClick={this.handleSave}\r\n                >\r\n                  <FormattedMessage id=\"manage-specialty.btnSave\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ height: \"100px\" }}></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ManageClinic.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport { LANGUAGES, CommonUtils } from \"../../../utils\";\r\nimport { createClinic } from \"../../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageClinic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      address: \"\",\r\n      imageBase64: \"\",\r\n\r\n      descriptionHTML: \"\",\r\n      descriptionMarkdown: \"\",\r\n      previewImgURL: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {}\r\n\r\n  handleOnChangeInput = (event, field) => {\r\n    this.setState({\r\n      [field]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleEditorChange = ({ html, text }) => {\r\n    this.setState({\r\n      descriptionMarkdown: text,\r\n      descriptionHTML: html,\r\n    });\r\n  };\r\n\r\n  handleOnChangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        previewImgURL: objectUrl,\r\n        imageBase64: base64,\r\n      });\r\n      console.log(\"Image URL: \" + objectUrl);\r\n    }\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { address, name, imageBase64, descriptionHTML, descriptionMarkdown } =\r\n      this.state;\r\n\r\n    // Check if any required fields are empty\r\n    if (!name || !imageBase64 || !descriptionHTML || !descriptionMarkdown) {\r\n      toast.error(\r\n        <FormattedMessage id=\"manage-clinic.missingParameterError\" />\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Call the API service to create a new clinic\r\n    createClinic({\r\n      name,\r\n      address,\r\n      imageBase64,\r\n      descriptionHTML,\r\n      descriptionMarkdown,\r\n    })\r\n      .then((newClinic) => {\r\n        if (newClinic.errCode === 0) {\r\n          toast.success(\r\n            <FormattedMessage id=\"manage-clinic.createClinicSuccess\" />\r\n          );\r\n        } else {\r\n          toast.error(\r\n            <FormattedMessage id=\"manage-clinic.createClinicFailed\" />\r\n          );\r\n        }\r\n        this.setState({\r\n          name: \"\",\r\n          imageBase64: \"\",\r\n          descriptionHTML: \"\",\r\n          descriptionMarkdown: \"\",\r\n          previewImgURL: \"\",\r\n          address: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        toast.error(<FormattedMessage id=\"manage-clinic.unknownError\" />);\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"app-container\">\r\n          <div className=\"container\">\r\n            <div className=\"row mb-3\">\r\n              {/* Input for clinic Name */}\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"clinicName\">\r\n                    <FormattedMessage id=\"manage-clinic.clinicName\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"clinicName\"\r\n                    className=\"form-control input-area\"\r\n                    value={this.state.name}\r\n                    onChange={(event) =>\r\n                      this.handleOnChangeInput(event, \"name\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Input for clinic Image */}\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"inputImage\" className=\"d-block\">\r\n                  <FormattedMessage id=\"manage-clinic.clinicImage\" />\r\n                </label>\r\n                <div className=\"previewImg-container\">\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"inputImage\"\r\n                    onChange={(event) => this.handleOnChangeImage(event)}\r\n                  />\r\n                  <label htmlFor=\"inputImage\">\r\n                    <FormattedMessage id=\"manage-user.uploadImage\" />\r\n                    <i className=\"fas fa-upload\"></i>\r\n                  </label>\r\n                  <div\r\n                    className=\"preview-image\"\r\n                    style={{\r\n                      backgroundImage: `url(${this.state.previewImgURL})`,\r\n                    }}\r\n                    onClick={() => this.openPreviewImage()}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mb-5\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"clinicName\">\r\n                    <FormattedMessage id=\"manage-clinic.clinicAddress\" />\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"address\"\r\n                    className=\"form-control input-area\"\r\n                    value={this.state.address}\r\n                    onChange={(event) =>\r\n                      this.handleOnChangeInput(event, \"address\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <MdEditor\r\n                  style={{ height: \"500px\" }}\r\n                  renderHTML={(text) => mdParser.render(text)}\r\n                  onChange={this.handleEditorChange}\r\n                  value={this.state.descriptionMarkdown}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Save button */}\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-md-12\">\r\n                <button\r\n                  className=\"btn btn-primary px-5\"\r\n                  onClick={this.handleSave}\r\n                >\r\n                  <FormattedMessage id=\"manage-clinic.btnSave\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ height: \"100px\" }}></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport UserManage from \"../containers/System/UserManage\";\r\nimport UserRedux from \"../containers/System/Admin/UserRedux\";\r\nimport ManageDoctor from \"../containers/System/Admin/ManageDoctor\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport ManageSpecialty from \"../containers/System/Specialty/ManageSpecialty\";\r\nimport ManageClinic from \"../containers/System/Clinic/ManageClinic\";\r\nclass System extends Component {\r\n  render() {\r\n    const { systemMenuPath, isLoggedIn } = this.props;\r\n    return (\r\n      <>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"system-container\">\r\n          <div className=\"system-list\">\r\n            <Switch>\r\n              <Route path=\"/system/user-manage\" component={UserManage} />\r\n              <Route path=\"/system/user-redux\" component={UserRedux} />\r\n              <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n              <Route\r\n                path=\"/system/manage-specialty\"\r\n                component={ManageSpecialty}\r\n              />\r\n              <Route path=\"/system/manage-clinic\" component={ManageClinic} />\r\n\r\n              <Route\r\n                component={() => {\r\n                  return <Redirect to={systemMenuPath} />;\r\n                }}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    systemMenuPath: state.app.systemMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../scss/Specialty.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { getAllSpecialties } from \"../../../../services/userService\";\r\nimport Slider from \"react-slick\";\r\nimport { withRouter } from \"react-router\";\r\nimport { LANGUAGES } from \"../../../../utils\";\r\nclass Specialty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataSpecialty: [],\r\n      slides: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await getAllSpecialties();\r\n      if (res.errCode === 0) {\r\n        console.log(\"check data\", res.data);\r\n        this.setState({ dataSpecialty: res.data ? res.data : [] });\r\n        console.log(this.state);\r\n      } else {\r\n        console.error(\"Failed to get all specialty\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n      this.assignDataOfCarousel();\r\n    }\r\n    if (prevState.dataSpecialty !== this.state.dataSpecialty) {\r\n      this.assignDataOfCarousel();\r\n    }\r\n  }\r\n  handleViewDetailSpecialty(specialtyId) {\r\n    this.props.history.push(`/detail-specialty/${specialtyId}`);\r\n  }\r\n  assignDataOfCarousel() {\r\n    let { dataSpecialty } = this.state;\r\n    console.log(\"assignDataOfCarousel\", dataSpecialty);\r\n    let { language } = this.props;\r\n    let slides = [];\r\n\r\n    if (dataSpecialty && dataSpecialty.length > 0) {\r\n      dataSpecialty.forEach((item, index) => {\r\n        // let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\r\n        // let nameEn = `${item.positionData.valueEn}, ${item.lastName} ${item.firstName}`;\r\n\r\n        // Create a new slide object for each iteration\r\n        let slide = {\r\n          img: item.image,\r\n          // mainTitle: language === LANGUAGES.VI ? nameVi : nameEn,\r\n          mainTitle: item.name,\r\n          specialtyId: item.id,\r\n        };\r\n\r\n        slides.push(slide);\r\n      });\r\n      this.setState({\r\n        slides: slides,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(\"props spacialty\", this.state);\r\n    let { slides } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid specialty-container\">\r\n          <div className=\"container\">\r\n            <div className=\"specialty-header\">\r\n              <span className=\"header-title header-title-underline\">\r\n                <FormattedMessage\r\n                  id=\"home-page.speciality-popularity\"\r\n                  defaultMessage=\"Specialty\"\r\n                />\r\n              </span>\r\n              <span className=\"home-btn-see-more\">\r\n                <FormattedMessage\r\n                  id=\"home-page.btnSeeMore\"\r\n                  defaultMessage=\"See more\"\r\n                />\r\n              </span>\r\n            </div>\r\n            <Slider {...this.props.settings}>\r\n              {slides.map((slide, index) => {\r\n                return (\r\n                  <div className=\"card-container\">\r\n                    <div\r\n                      className=\"card p-2 py-3 text-center\"\r\n                      onClick={() =>\r\n                        this.handleViewDetailSpecialty(slide.specialtyId)\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <div\r\n                        className=\" mb-2 avt-specialty\"\r\n                        style={{\r\n                          backgroundImage: `url(${slide.img})`,\r\n                        }}\r\n                      ></div>\r\n                      <h5 className=\"mb-0 main-title\">{slide.mainTitle}</h5>\r\n\r\n                      {/* <div className=\"ratings mt-2\">\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                  </div> */}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </>\r\n      // <div className=\"section-common \">\r\n      //   <div className=\"section-header\">\r\n      //     <span className=\"title-section\">\r\n\r\n      //     </span>\r\n      //     <button className=\"btn-section\">\r\n\r\n      //     </button>\r\n      //   </div>\r\n\r\n      //   <div className=\"section-body\">\r\n      //     <Slider {...this.props.settings}>\r\n      //       {dataSpecialty.map((item, index) => {\r\n      //         return (\r\n      //           <div className=\"section-custiomize\">\r\n      //             <div\r\n      //               className=\"slider-card card-specialty\"\r\n      //               key={index}\r\n      //               onClick={() => this.handleViewDetailSpecialty(item)}\r\n      //             >\r\n      //               <div className=\"section-specialty\" key={index}>\r\n      //                 <span\r\n      //                   className=\"bg-img specialty-image\"\r\n      //                   style={{ backgroundImage: `url(${item.image})` }}\r\n      //                 ></span>\r\n      //                 <span className=\"specialty-name\">{item.name}</span>\r\n      //               </div>\r\n      //             </div>\r\n      //           </div>\r\n      //         );\r\n      //       })}\r\n      //     </Slider>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(Specialty)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../scss/MedicalFacility.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n// import \"slick-carousel/slick/slick.css\";\r\n// import \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport { getAllClinics } from \"../../../../services/userService\";\r\nimport { withRouter } from \"react-router\";\r\nclass MedicalFacility extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataClinic: [],\r\n      slides: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await getAllClinics();\r\n\r\n      if (res.errCode === 0) {\r\n        console.log(\"clinic res data\", res.data);\r\n        this.setState({ dataClinic: res.data ? res.data : [] });\r\n        console.log(this.state);\r\n      } else {\r\n        console.error(\"Failed to get all clinic\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n  handleViewDetailClinic(clinicId) {\r\n    this.props.history.push(`/detail-clinic/${clinicId}`);\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.language !== this.props.language) {\r\n      this.assignDataOfCarousel();\r\n    }\r\n    if (prevState.dataClinic !== this.state.dataClinic) {\r\n      this.assignDataOfCarousel();\r\n    }\r\n  }\r\n\r\n  assignDataOfCarousel() {\r\n    let { dataClinic } = this.state;\r\n    let { language } = this.props;\r\n    let slides = [];\r\n\r\n    if (dataClinic && dataClinic.length > 0) {\r\n      dataClinic.forEach((item, index) => {\r\n        // let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\r\n        // let nameEn = `${item.positionData.valueEn}, ${item.lastName} ${item.firstName}`;\r\n\r\n        // Create a new slide object for each iteration\r\n        let slide = {\r\n          img: item.image,\r\n          // mainTitle: language === LANGUAGES.VI ? nameVi : nameEn,\r\n          mainTitle: item.name,\r\n          clinicId: item.id,\r\n        };\r\n\r\n        slides.push(slide);\r\n      });\r\n      this.setState({\r\n        slides: slides,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    console.log(\"props\", this.state);\r\n    let { slides } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid medical-container\">\r\n          <div className=\"container\">\r\n            <div className=\"medical-header\">\r\n              <span className=\"header-title\">\r\n                <FormattedMessage id=\"home-page.medical-popularity\" />\r\n              </span>\r\n              <span className=\"home-btn-see-more\">\r\n                <FormattedMessage\r\n                  id=\"home-page.btnSeeMore\"\r\n                  defaultMessage=\"See more\"\r\n                />\r\n              </span>\r\n            </div>\r\n            <Slider {...this.props.settings}>\r\n              {slides.map((slide, index) => {\r\n                return (\r\n                  <div className=\"card-container\">\r\n                    <div\r\n                      className=\"card p-2 py-3 text-center\"\r\n                      onClick={() =>\r\n                        this.handleViewDetailClinic(slide.clinicId)\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <div\r\n                        className=\" mb-2 avt-medical\"\r\n                        style={{\r\n                          backgroundImage: `url(${slide.img})`,\r\n                        }}\r\n                      ></div>\r\n                      <h5 className=\"mb-0 main-title\">{slide.mainTitle}</h5>\r\n\r\n                      {/* <div className=\"ratings mt-2\">\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                    <i className=\"fa fa-star\"></i>\r\n                  </div> */}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </Slider>\r\n          </div>\r\n        </div>\r\n      </>\r\n      // <div className=\"section-common \">\r\n      //   <div className=\"section-header\">\r\n      //     <span className=\"title-section\">\r\n\r\n      //     </span>\r\n      //     <button className=\"btn-section\">\r\n      //       <FormattedMessage\r\n      //         id=\"home-page.btnSeeMore\"\r\n      //         defaultMessage=\"See more\"\r\n      //       />\r\n      //     </button>\r\n      //   </div>\r\n\r\n      //   <div className=\"section-body\">\r\n      //     <Slider {...this.props.settings}>\r\n      //       {dataClinic.map((item, index) => {\r\n      //         return (\r\n      //           <div className=\"section-custiomize\">\r\n      //             <div\r\n      //               className=\"slider-card card-specialty\"\r\n      //               key={index}\r\n      //               onClick={() => this.handleViewDetailSpecialty(item)}\r\n      //             >\r\n      //               <div className=\"section-specialty\" key={index}>\r\n      //                 <span\r\n      //                   className=\"bg-img specialty-image\"\r\n      //                   style={{ backgroundImage: `url(${item.image})` }}\r\n      //                 ></span>\r\n      //                 <span className=\"specialty-name\">{item.name}</span>\r\n      //               </div>\r\n      //             </div>\r\n      //           </div>\r\n      //         );\r\n      //       })}\r\n      //     </Slider>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(MedicalFacility)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"../scss/ReactionOfUser.scss\";\r\nclass ReactionOfUser extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"slider\">\r\n        <div className=\"slide-track\">\r\n          {[...Array(14)].map((_, index) => (\r\n            <div className=\"slide\" key={index}>\r\n              <img\r\n                src={`https://s3-us-west-2.amazonaws.com/s.cdpn.io/557257/${\r\n                  (index % 7) + 1\r\n                }.png`}\r\n                height=\"100\"\r\n                width=\"250\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactionOfUser);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport YouTube from \"react-youtube\";\r\nimport \"../Section/scss/About.scss\";\r\nimport \"../Base.scss\";\r\nclass About extends Component {\r\n  changeLanguage(language) {\r\n    this.props.changeLanguageAppRedux(language);\r\n  }\r\n\r\n  render() {\r\n    const opts = {\r\n      // height: \"390\",\r\n      width: \"100%\", // Set the width to 100% for responsiveness\r\n      playerVars: {\r\n        // Any additional options\r\n        autoplay: 0,\r\n      },\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"about container-fluid\">\r\n          <div className=\"container\">\r\n            <h4 className=\"about-title\">Truyền thông nói về BookingCare</h4>\r\n            <div className=\"row\">\r\n              <div className=\" d-block col-md-12 col-lg-7\">\r\n                <div className=\"video\">\r\n                  {\" \"}\r\n                  <YouTube videoId=\"FyDQljKtWnI\" opts={opts} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 col-lg-5\">\r\n                <ul className=\"social-list \">\r\n                  <li className=\"social-item\">\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=mstAc81lpMc\"\r\n                      target=\"_blank\"\r\n                      className=\"social-link\"\r\n                    ></a>\r\n                  </li>\r\n\r\n                  <li className=\"social-item\">\r\n                    <a\r\n                      href=\"https://vietnamnet.vn/thong-tin-truyen-thong\"\r\n                      target=\"_blank\"\r\n                      className=\"social-link\"\r\n                    ></a>\r\n                  </li>\r\n                  <li className=\"social-item\">\r\n                    <a\r\n                      href=\"https://infonet.vietnamnet.vn/da-co-hon-20000-luot-benh-nhan-dat-lich-kham-qua-bookingcare-175080.html\"\r\n                      target=\"_blank\"\r\n                      className=\"social-link\"\r\n                    ></a>\r\n                  </li>\r\n                  <li className=\"social-item\">\r\n                    <a\r\n                      href=\"https://suckhoedoisong.vn/dat-lich-kham-benh-tiet-kiem-thong-minh-va-hieu-qua-169153232.htm\"\r\n                      target=\"_blank\"\r\n                      className=\"social-link\"\r\n                    ></a>\r\n                  </li>\r\n                  <li className=\"social-item\">\r\n                    <a\r\n                      href=\"https://video.vnexpress.net/cuoc-song-4-0/kham-benh-khong-phai-xep-hang-o-ha-noi-3797126.html\"\r\n                      target=\"_blank\"\r\n                      className=\"social-link\"\r\n                    ></a>\r\n                  </li>\r\n                  <li className=\"social-item\">\r\n                    <a\r\n                      href=\"https://vtv.vn/video/ca-phe-khoi-nghiep-14-11-2018-334894.htm\"\r\n                      target=\"_blank\"\r\n                      className=\"social-link\"\r\n                    ></a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"./HomeHeader\";\r\nimport Specialty from \"./Section/slider/Specialty\";\r\nimport MedicalFacility from \"./Section/slider/MedicalFacility\";\r\nimport OutStandingDoctor from \"./Section/slider/OutStandingDoctor\";\r\nimport Footer from \"./Section/Info/Footer\";\r\nimport ReactionOfUser from \"./Section/Info/ReactionOfUser\";\r\n// import HandBook from \"./Section/HandBook\";\r\nimport About from \"./Section/About\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../../styles/Base.scss\";\r\nimport \"./HomePage.scss\";\r\n\r\n\r\nclass HomePage extends Component {\r\n  componentDidMount() {\r\n    document.title = \"VKU Healcare - Nền tảng y tế sức khỏe toàn diện\";\r\n  }\r\n  render() {\r\n    const settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 3,\r\n      initialSlide: 0,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            initialSlide: 2,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n      <>\r\n        <HomeHeader isShowBanner={true} />\r\n        <ReactionOfUser />\r\n\r\n        <Specialty settings={settings} />\r\n        <MedicalFacility settings={settings} />\r\n        <OutStandingDoctor settings={settings} />\r\n\r\n        <About />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"./SchedulingToday.scss\";\r\nclass SchedulingToday extends Component {\r\n  state = {\r\n    emojis: [\r\n      [\"🐳\", \"John Doe\", \"9:00 AM\"],\r\n      [\"🐋\", \"Jane Smith\", \"10:30 AM\"],\r\n      [\"🐬\", \"Michael Brown\", \"11:15 AM\"],\r\n      [\"🐟\", \"Emily Johnson\", \"1:00 PM\"],\r\n      [\"🐠\", \"David Wilson\", \"2:30 PM\"],\r\n      [\"🐡\", \"Sarah Martinez\", \"3:45 PM\"],\r\n      [\"🦈\", \"Daniel Davis\", \"4:30 PM\"],\r\n      [\"🐙\", \"Lisa Miller\", \"5:15 PM\"],\r\n      [\"🐚\", \"Kevin Garcia\", \"6:00 PM\"],\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { emojis } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"carousel\">\r\n          {emojis.map((emoji, index) => (\r\n            <div className=\"carousel__item\" key={index}>\r\n              <div className=\"carousel__item-head\">{emoji[0]}</div>\r\n              <div className=\"carousel__item-body\">\r\n                <p className=\"title\">{emoji[1]}</p>\r\n                <p>Scheduled: {emoji[2]}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SchedulingToday);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nrequire(\"dotenv\").config();\r\nclass LikeAndShare extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Initialize state here if needed\r\n  }\r\n\r\n  initFacebookSDK() {\r\n    if (window.FB) {\r\n      window.FB.XFBML.parse();\r\n    }\r\n\r\n    let { language } = this.props;\r\n    let locale = language === LANGUAGES.VI ? \"vi_VN\" : \"en_US\";\r\n    window.fbAsyncInit = function () {\r\n      window.FB.init({\r\n        appId: process.env.REACT_APP_FACEBOOK_APP_ID,\r\n        cookie: true, // enable cookies to allow the server to access\r\n        // the session\r\n        xfbml: true, // parse social plugins on this page\r\n        version: \"v2.5\", // use version 2.1\r\n      });\r\n    };\r\n    // Load the SDK asynchronously\r\n    (function (d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) return;\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = `//connect.facebook.net/${locale}/sdk.js`;\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    })(document, \"script\", \"facebook-jssdk\");\r\n  }\r\n  componentDidMount() {\r\n    this.initFacebookSDK();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.language !== prevProps.language) {\r\n      // Handle language change if needed\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { dataHref } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"fb-like\"\r\n        data-href={dataHref}\r\n        data-width=\"\"\r\n        data-layout=\"button_count\"\r\n        data-action=\"like\"\r\n        data-size=\"large\"\r\n        data-share=\"true\"\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeAndShare);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"../../HomePage/HomeHeader\";\r\nimport { getDetailInfoDoctor } from \"../../../services/userService\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport \"./DetailDoctor.scss\";\r\nimport \"../../../styles/Base.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DoctorSchedule from \"./DoctorSchedule\";\r\nimport SchedulingToday from \"./Modal/SchedulingToday\";\r\nimport DoctorExtraInfor from \"./DoctorExtraInfor\";\r\nimport LikeAndShare from \"../SocialPlugin/LikeAndShare\";\r\nimport Footer from \"../../HomePage/Section/Info/Footer\"\r\nclass DetailDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      detailDoctor: {},\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    if (\r\n      this.props.match &&\r\n      this.props.match.params &&\r\n      this.props.match.params.id\r\n    ) {\r\n      let id = this.props.match.params.id;\r\n      let res = await getDetailInfoDoctor(id);\r\n      if (res && res.data) {\r\n        this.setState({\r\n          detailDoctor: res.data,\r\n        });\r\n      }\r\n      console.log(\"detail doctor\", res);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.match.params.id);\r\n    let language = this.props.language;\r\n    let { detailDoctor } = this.state;\r\n\r\n    let nameVi = \"\";\r\n    let nameEn = \"\";\r\n    if (detailDoctor && detailDoctor.positionData) {\r\n      nameVi = `${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName}`;\r\n      nameEn = `${detailDoctor.positionData.valueEn}, ${detailDoctor.firstName} ${detailDoctor.lastName}`;\r\n    }\r\n    return (\r\n      <>\r\n        <HomeHeader isShowBanner={false} />\r\n\r\n        <div className=\"detail-doctor-container container\">\r\n          <div className=\"introduction-doctor\">\r\n            <span\r\n              className=\"avatar-doctor\"\r\n              style={{\r\n                backgroundImage: `url(${detailDoctor.image})`,\r\n              }}\r\n            ></span>\r\n            <div className=\"info-doctor\">\r\n              <h3 className=\"main-title\">\r\n                {language === LANGUAGES.VI ? nameVi : nameEn}\r\n              </h3>\r\n              <p className=\"desc\">\r\n                {detailDoctor &&\r\n                  detailDoctor.Markdown &&\r\n                  detailDoctor.Markdown.description}\r\n              </p>\r\n              <div className=\"like-and-share-btn\">\r\n                <LikeAndShare></LikeAndShare>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"schedule-doctor container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-7 col-sm-12\">\r\n                <DoctorSchedule\r\n                  doctorId={\r\n                    detailDoctor && detailDoctor.id ? detailDoctor.id : -1\r\n                  }\r\n                  isShowSeparator={true}\r\n                />\r\n              </div>\r\n              <div class=\"col-md-5 col-sm-12\">\r\n                <DoctorExtraInfor\r\n                  doctorId={\r\n                    detailDoctor && detailDoctor.id ? detailDoctor.id : -1\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"detail-doctor container-fluid\">\r\n          <div className=\"container \">\r\n            <div className=\"row detail-doctor-content\">\r\n              <div className=\"col-lg-6 col-md-6 col-12 detail-doctor-content-left\">\r\n                {\" \"}\r\n                {detailDoctor &&\r\n                  detailDoctor.Markdown &&\r\n                  detailDoctor.Markdown.contentHTML && (\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: detailDoctor.Markdown.contentHTML,\r\n                      }}\r\n                    />\r\n                  )}\r\n              </div>\r\n              <div className=\"col-lg-6 col-md-6 col-12 detail-doctor-content-right\">\r\n                <SchedulingToday />\r\n                <div className=\"register\">\r\n                  <strong className=\"register-title\">\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"homeheader.register\" />\r\n                  </strong>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"fullname\"\r\n                      name=\"fullname\"\r\n                      value={this.state.fullname}\r\n                      onChange={this.handleChange}\r\n                      placeholder=\"Fullname\"\r\n                      required\r\n                    />\r\n                    <input\r\n                      type=\"tel\"\r\n                      id=\"phone\"\r\n                      name=\"phone\"\r\n                      pattern=\"[0-9]{10,11}\"\r\n                      value={this.state.phone}\r\n                      onChange={this.handleChange}\r\n                      placeholder=\"Phone number\"\r\n                      required\r\n                    />\r\n\r\n                    <textarea\r\n                      placeholder=\"Description...\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    ></textarea>\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      value={language == \"en\" ? \"Submit\" : \"Gửi đăng ký\"}\r\n                    />\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Footer/>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import Header from \"../containers/Header/Header\";\r\nimport \"./ManageSchedule.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as actions from \"../../../store/actions\";\r\nimport Select from \"react-select\";\r\nimport { LANGUAGES, dateFormat } from \"../../../utils\";\r\n// import DatePicker from \"../../../components/Input/DatePicker\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport { saveBulkScheduleDoctor } from \"../../../services/userService\";\r\nclass ManageSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDoctor: \"\",\r\n      listDoctors: \"\",\r\n      currDate: \"\",\r\n      rangeTime: [],\r\n      textDate: \"\",\r\n      isDatePickerOpen: false,\r\n    };\r\n  }\r\n\r\n  buildDataSelectDoctor = (inputData) => {\r\n    let results = [];\r\n    let language = this.props.language;\r\n    // console.log(language);\r\n    if (inputData && inputData.length > 0) {\r\n      inputData.map((item, index) => {\r\n        let object = {};\r\n        let labelVi = `${item.lastName} ${item.firstName}`;\r\n        let labelEn = `${item.firstName} ${item.lastName}`;\r\n        object.label = language === LANGUAGES.VI ? labelVi : labelEn;\r\n        object.value = item.id;\r\n        results.push(object);\r\n      });\r\n    }\r\n\r\n    return results;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchAllDoctors();\r\n    this.props.fetchAllScheduleTime();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(\"componentDidUpdate\", prevProps.allDoctors);\r\n    if (prevProps.allDoctors !== this.props.allDoctors) {\r\n      let dataSelect = this.buildDataSelectDoctor(this.props.allDoctors);\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n      });\r\n    }\r\n\r\n    if (prevProps.language !== this.props.language) {\r\n      let dataSelect = this.buildDataSelectDoctor(this.props.allDoctors);\r\n      this.setState({\r\n        listDoctors: dataSelect,\r\n      });\r\n    }\r\n    if (prevProps.allScheduleTime !== this.props.allScheduleTime) {\r\n      let data = this.props.allScheduleTime;\r\n      if (data && data.length > 0) {\r\n        data = data.map((item) => {\r\n          item.isSelected = false;\r\n          return item;\r\n        });\r\n      }\r\n      this.setState({\r\n        rangeTime: this.props.allScheduleTime,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeSelect = async (selectedOption) => {\r\n    this.setState({ selectedDoctor: selectedOption });\r\n  };\r\n  handleClickBtnTime = (time) => {\r\n    let { rangeTime } = this.state;\r\n    let rangeTimeSelected = [];\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      rangeTimeSelected = rangeTime.map((item) => {\r\n        if (item.id === time.id) {\r\n          item.isSelected = !item.isSelected;\r\n        }\r\n        return item;\r\n      });\r\n      // console.log(\"selected\", rangeTimeSelected);\r\n      this.setState({ rangeTime: rangeTimeSelected });\r\n    }\r\n  };\r\n\r\n  handleSaveSchedule = async () => {\r\n    let { rangeTime, selectedDoctor, currDate } = this.state;\r\n    let result = [];\r\n    // console.log(\"curr range time: \", rangeTime);\r\n    if (!selectedDoctor && _.isEmpty(selectedDoctor)) {\r\n      toast.error(<FormattedMessage id=\"manage-schedules.invalidDoctor\" />);\r\n      return;\r\n    }\r\n    if (!currDate) {\r\n      toast.error(<FormattedMessage id=\"manage-schedules.invalidDate\" />);\r\n      return;\r\n    }\r\n    // console.log(\"currDate: \" + currDate);\r\n    // let formatedDate = moment(currDate).unix();\r\n    let formatedDate = new Date(currDate).getTime();\r\n    // console.log(\"format date\", formatedDate);\r\n\r\n    if (rangeTime && rangeTime.length > 0) {\r\n      let selectedTime = rangeTime.filter((item) => item.isSelected === true);\r\n\r\n      if (selectedTime && selectedTime.length > 0) {\r\n        selectedTime.map((schedule) => {\r\n          let object = {};\r\n          object.doctorId = selectedDoctor.value;\r\n          object.date = formatedDate;\r\n          object.timeType = schedule.keyMap;\r\n          result.push(object);\r\n        });\r\n      } else {\r\n        console.log(\"invalid selected time\");\r\n        return;\r\n      }\r\n    }\r\n    // console.log(\"selectedTime\", result);\r\n    // console.log(\"check result\", result);\r\n    let res = await saveBulkScheduleDoctor({\r\n      arraySchedule: result,\r\n      doctorId: selectedDoctor.value,\r\n      formatedDate: formatedDate,\r\n    });\r\n    if (res.errCode === 0) {\r\n      toast.success(\r\n        <FormattedMessage id=\"manage-schedules.saveChangesSuccess\" />\r\n      );\r\n    } else {\r\n      toast.error(<FormattedMessage id=\"manage-schedules.saveChangesFailed\" />);\r\n    }\r\n  };\r\n\r\n  handleOnChangeDatePicker = (date) => {\r\n    let formattedDate;\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      weekday: \"long\", // Include the full name of the day of the week\r\n    };\r\n\r\n    if (this.props.language === LANGUAGES.VI) {\r\n      // For Vietnamese language, format as \"Thứ N, dd/mm/yyyy\"\r\n      formattedDate = date.toLocaleDateString(\"vi-VN\", options);\r\n    } else {\r\n      // For English language, format as \"Monday, mm/dd/yyyy\"\r\n      formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n    }\r\n\r\n    this.setState({\r\n      currDate: date,\r\n      textDate: formattedDate,\r\n    });\r\n  };\r\n\r\n  handleDatePickerClick = () => {\r\n    this.setState((prevState) => ({\r\n      isDatePickerOpen: !prevState.isDatePickerOpen,\r\n    }));\r\n  };\r\n  render() {\r\n    const { selectedDoctor, listDoctors } = this.state;\r\n    // console.log(listDoctors);\r\n    let { language } = this.props;\r\n    // console.log(this.state);\r\n    let rangeTime = this.state.rangeTime;\r\n    // console.log(\"range time\", rangeTime);\r\n    return (\r\n      <>\r\n        <div className=\"container manage-schedule-doctor\">\r\n          <span className=\"title d-block\">\r\n            <FormattedMessage id=\"manage-schedules.title\" />\r\n          </span>\r\n          <div className=\"select-container row mb-3 mt-3\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <label>\r\n                <FormattedMessage id=\"manage-schedules.pick-doctor\" />\r\n              </label>\r\n              <div className=\"input-area\">\r\n                <Select\r\n                  value={selectedDoctor}\r\n                  onChange={this.handleChangeSelect}\r\n                  options={listDoctors}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"input-area col-md-6\">\r\n              <label>\r\n                <FormattedMessage id=\"manage-schedules.pick-date\" />\r\n              </label>\r\n\r\n              <div className=\"date-picker\" onClick={this.handleDatePickerClick}>\r\n                <DatePicker\r\n                  onChange={this.handleOnChangeDatePicker}\r\n                  className=\"form-control date-picker-select\"\r\n                  selected={this.state.currDate}\r\n                  minDate={new Date(new Date().getTime() - 24 * 60 * 60 * 1000)}\r\n                  // minDate={new Date()}\r\n                  style={{ fontSize: \"18px\" }}\r\n                  format={dateFormat.SEND_TO_SERVER}\r\n                  isOpen={this.state.isDatePickerOpen}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"date-picker-text\"\r\n                  value={this.state.textDate}\r\n                  readOnly // Make the input read-only to display the selected date\r\n                  placeholder=\"Select a date\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\" pick-time-container\">\r\n            {rangeTime &&\r\n              rangeTime.length > 0 &&\r\n              rangeTime.map((item, index) => {\r\n                // console.log(\"item\", item);\r\n                return (\r\n                  <button\r\n                    className={\r\n                      item.isSelected === true\r\n                        ? \"btn btn-custom active px-5 border mx-2 mt-2  d-block\"\r\n                        : \"btn btn-custom px-5 border mx-2 mt-2  d-block\"\r\n                    }\r\n                    key={index}\r\n                    onClick={() => this.handleClickBtnTime(item)}\r\n                  >\r\n                    {language === LANGUAGES.VI ? item.valueVI : item.valueEN}\r\n                  </button>\r\n                );\r\n              })}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary px-5 mt-3 d-block\"\r\n            onClick={this.handleSaveSchedule}\r\n          >\r\n            <FormattedMessage id=\"manage-schedules.btnSave\" />\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    allDoctors: state.admin.allDoctors,\r\n    language: state.app.language,\r\n    allScheduleTime: state.admin.allScheduleTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n    fetchAllScheduleTime: () => dispatch(actions.fetchAllScheduleTime()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n","import React, { Component } from \"react\";\r\nimport \"moment/locale/vi\";\r\nimport { connect } from \"react-redux\";\r\nimport { CommonUtils } from \"../../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"./RemedyModal.scss\";\r\nimport _ from \"lodash\";\r\nimport { Modal } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass RemedyModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      imgBase64: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if (prevProps.dataRemedyModal !== this.props.dataRemedyModal) {\r\n      this.setState({\r\n        email: this.props.dataRemedyModal.email,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnchangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  handleOnChangeImage = async (event) => {\r\n    let data = event.target.files;\r\n    let file = data[0];\r\n    if (file) {\r\n      let base64 = await CommonUtils.getBase64(file);\r\n      let objectUrl = URL.createObjectURL(file);\r\n      this.setState({\r\n        // previewImgURL: objectUrl,\r\n        imgBase64: base64,\r\n      });\r\n      console.log(\"Image url: \" + objectUrl);\r\n    }\r\n  };\r\n\r\n  handleSendRemedy = () => {\r\n    this.props.sendRemedy(this.state);\r\n  };\r\n  render() {\r\n    let { language, dataRemedyModal } = this.props;\r\n    let { email } = this.state;\r\n    console.log(\"preparing state\", this.props);\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.props.isOpenModalBooking}\r\n          centered\r\n          className=\"modal\"\r\n          size=\"lg\"\r\n          style={{ maxWidth: \"800px\", width: \"100%\" }}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Gửi hóa đơn khám bệnh</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              onClick={this.props.onCloseRemedyModal}\r\n            >\r\n              <span>&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control input-email\"\r\n                    placeholder=\"Enter email\"\r\n                    defaultValue={email}\r\n                    onChange={(event) =>\r\n                      this.handleOnchangeInput(event, \"email\")\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>File</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    onChange={(event) => this.handleOnChangeImage(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={this.props.onCloseRemedyModal}\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.handleSendRemedy}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"./ManagePatient.scss\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport {\r\n  getAllPaitentsBookedAppoiment,\r\n  postSendRemedy,\r\n} from \"../../../services/userService\";\r\nimport moment from \"moment\";\r\nimport RemedyModal from \"../../Patient/Doctor/Modal/RemedyModal\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nclass ManagePatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpenModalRemedy: false,\r\n      isDatePickerOpen: false,\r\n      currDate: moment(new Date()).add(0, \"days\").startOf(\"day\").valueOf(),\r\n      textDate: \"\",\r\n      dataPatients: [],\r\n      dataRemedyModal: {},\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getDataPatients();\r\n  }\r\n\r\n  getDataPatients = async () => {\r\n    //set date\r\n    let { user } = this.props;\r\n    let date = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\r\n    let { currDate } = this.state;\r\n    let formatedDate = new Date(currDate).getTime();\r\n    this.setState({ textDate: this.convertDateToString(date) });\r\n    //render patient appoiments\r\n    let res = await getAllPaitentsBookedAppoiment({\r\n      doctorId: user.id,\r\n      date: formatedDate,\r\n    });\r\n\r\n    if (res && res.errCode === 0) {\r\n      this.setState({\r\n        dataPatients: res.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {}\r\n  handleDatePickerClick = () => {\r\n    this.setState((prevState) => ({\r\n      isDatePickerOpen: !prevState.isDatePickerOpen,\r\n    }));\r\n  };\r\n  convertDateToString = (date) => {\r\n    let formattedDate = \"\";\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      weekday: \"long\", // Include the full name of the day of the week\r\n    };\r\n\r\n    if (this.props.language === LANGUAGES.VI) {\r\n      // For Vietnamese language, format as \"Thứ N, dd/mm/yyyy\"\r\n      formattedDate = date.toLocaleDateString(\"vi-VN\", options);\r\n    } else {\r\n      // For English language, format as \"Monday, mm/dd/yyyy\"\r\n      formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n    }\r\n\r\n    return formattedDate;\r\n  };\r\n  handleOnChangeDatePicker = (date) => {\r\n    let currDate;\r\n    currDate = moment(date).add(0, \"days\").startOf(\"day\").valueOf();\r\n\r\n    this.setState(\r\n      {\r\n        currDate,\r\n        textDate: this.convertDateToString(date),\r\n      },\r\n      async () => {\r\n        await this.getDataPatients();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleConfirmAppoiment = (item) => {\r\n    let data = {\r\n      doctorId: item.doctorId,\r\n      patientId: item.patientId,\r\n      email: item.patientData.email,\r\n      timeType: item.timeType,\r\n      patientName: item.patientData.firstName,\r\n    };\r\n    this.setState({ isOpenModalRemedy: true, dataRemedyModal: data });\r\n    console.log(\"data\", data);\r\n  };\r\n  handleCloseRemedyModal = () => {\r\n    this.setState({ isOpenModalRemedy: false });\r\n  };\r\n  sendRemedy = async (data) => {\r\n    this.setState({ isLoading: true });\r\n    let { dataRemedyModal } = this.state;\r\n    let res = await postSendRemedy({\r\n      email: data.email,\r\n      imgBase64: data.imgBase64,\r\n      patientId: dataRemedyModal.patientId,\r\n      doctorId: dataRemedyModal.doctorId,\r\n      timeType: dataRemedyModal.timeType,\r\n      language: this.props.language,\r\n      patientName: dataRemedyModal.patientName,\r\n    });\r\n    if (res && res.errCode === 0) {\r\n      await this.getDataPatients();\r\n      this.handleCloseRemedyModal();\r\n      this.setState({ isLoading: false });\r\n      toast.success(\"Successfully sent\");\r\n    } else {\r\n      toast.error(\"Error sending\");\r\n    }\r\n  };\r\n  render() {\r\n    console.log(\" user \", this.state);\r\n    let { dataPatients, isOpenModalRemedy, dataRemedyModal, isLoading } =\r\n      this.state;\r\n    let { language } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"container manage-patient-container\">\r\n          <div className=\"title\">Quan ly benh nhan</div>\r\n          <div className=\"row mb-4\">\r\n            <div className=\"col-md-4\">\r\n              <label>\r\n                <FormattedMessage id=\"manage-schedules.pick-date\" />\r\n              </label>\r\n              <div\r\n                className=\"date-picker \"\r\n                onClick={this.handleDatePickerClick}\r\n              >\r\n                <DatePicker\r\n                  onChange={this.handleOnChangeDatePicker}\r\n                  className=\"form-control date-picker-select\"\r\n                  selected={this.state.currDate}\r\n                  minDate={new Date(new Date().getTime() - 24 * 60 * 60 * 1000)}\r\n                  // minDate={new Date()}\r\n                  style={{ fontSize: \"18px\" }}\r\n                  // format={dateFormat.SEND_TO_SERVER}\r\n                  isOpen={this.state.isDatePickerOpen}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"date-picker-text\"\r\n                  value={this.state.textDate}\r\n                  readOnly // Make the input read-only to display the selected date\r\n                  placeholder=\"Select a date\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <table id=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Time</th>\r\n                  <th scope=\"col\">Fullname</th>\r\n                  <th scope=\"col\">Address</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataPatients &&\r\n                  dataPatients.length > 0 &&\r\n                  dataPatients.map((item, index) => {\r\n                    let time =\r\n                      language === LANGUAGES.VI\r\n                        ? item.timeTypeDataPatient.valueVi\r\n                        : item.timeTypeDataPatient.valueEn;\r\n                    let gender =\r\n                      language === LANGUAGES.VI\r\n                        ? item.patientData.genderData.valueVi\r\n                        : item.patientData.genderData.valueEn;\r\n                    return (\r\n                      <tr key={index}>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{time}</td>\r\n                        <td>{item.patientData.firstName}</td>\r\n                        <td>{item.patientData.address}</td>\r\n                        <td>{gender}</td>\r\n                        <td>\r\n                          {/* Add action buttons or links here for each user */}\r\n                          {/* For example, a button to view user details */}\r\n\r\n                          <button\r\n                            className=\"btn red px-3\"\r\n                            onClick={() => this.handleConfirmAppoiment(item)}\r\n                          >\r\n                            Conform\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <RemedyModal\r\n          isOpenModalBooking={isOpenModalRemedy}\r\n          dataRemedyModal={dataRemedyModal}\r\n          onCloseRemedyModal={this.handleCloseRemedyModal}\r\n          sendRemedy={this.sendRemedy}\r\n        />\r\n\r\n        <LoadingOverlay\r\n          className=\"loading-overlay\"\r\n          active={isLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          {/* Your content goes here */}\r\n          <div></div>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    user: state.user.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport ManageSchedule from \"../containers/System/Doctor/ManageSchedule\";\r\nimport ManagePatient from \"../containers/System/Doctor/ManagePatient\";\r\nclass Doctor extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n    return (\r\n      <>\r\n        {isLoggedIn && <Header />}\r\n        <div className=\"Doctor-container\">\r\n          <div className=\"Doctor-list\">\r\n            <Switch>\r\n              <Route\r\n                path=\"/doctor/manage-schedule\"\r\n                component={ManageSchedule}\r\n              />\r\n              <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    DoctorMenuPath: state.app.DoctorMenuPath,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { postVerifyBookAppointment } from \"../../services/userService\";\r\nimport HomeHeader from \"../HomePage/HomeHeader\";\r\nclass VerifyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataProfile: {},\r\n      statusVerify: false,\r\n      errCode: -1,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.location && this.props.location.search) {\r\n      let urlSearchParams = new URLSearchParams(window.location.search);\r\n      let token = urlSearchParams.get(\"token\");\r\n      let doctorId = urlSearchParams.get(\"doctorId\");\r\n      let res = await postVerifyBookAppointment({\r\n        token: token,\r\n        doctorId: doctorId,\r\n      });\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: 0,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          statusVerify: true,\r\n          errCode: res.errCode,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.language !== prevProps.language) {\r\n      // Handle language change\r\n    }\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n      // Handle doctorId change\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errCode, statusVerify } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <HomeHeader />\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6\">\r\n              {statusVerify ? (\r\n                errCode === 0 ? (\r\n                  <div className=\"alert alert-success\">\r\n                    Verification succeeded! Your email has been verified.\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"alert alert-danger\">\r\n                    Verification failed. Please try again later.\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <div className=\"text-center\">Loading...</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport {\r\n  userIsAuthenticated,\r\n  userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\nimport { path } from \"../utils\";\r\nimport Home from \"../routes/Home\";\r\nimport Login from \"./Auth/Login/Login.js\";\r\n\r\nimport System from \"../routes/System\";\r\n// import { CustomToastCloseButton } from \"../components/CustomToast\";\r\nimport HomePage from \"./HomePage/HomePage.js\";\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport DetailDoctor from \"./Patient/Doctor/DetailDoctor\";\r\nimport Doctor from \"../routes/Doctor\";\r\nimport VerifyEmail from \"./Patient/VerifyEmail\";\r\nimport DetailSpecialty from \"./Patient/Specialty/DetailSpecialty\";\r\nimport DetailClinic from \"./Patient/Clinic/DetailClinic\";\r\nclass App extends Component {\r\n  handlePersistorState = () => {\r\n    const { persistor } = this.props;\r\n    let { bootstrapped } = persistor.getState();\r\n    if (bootstrapped) {\r\n      if (this.props.onBeforeLift) {\r\n        Promise.resolve(this.props.onBeforeLift())\r\n          .then(() => this.setState({ bootstrapped: true }))\r\n          .catch(() => this.setState({ bootstrapped: true }));\r\n      } else {\r\n        this.setState({ bootstrapped: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handlePersistorState();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Router history={history}>\r\n          <CustomScrollbars style={{ height: \"100vh\", width: \"100%\" }}>\r\n            <div className=\"main-container\">\r\n              <div className=\"content-container\">\r\n                <Switch>\r\n                  <Route path={path.HOME} exact component={Home} />\r\n                  <Route\r\n                    path={path.LOGIN}\r\n                    component={userIsNotAuthenticated(Login)}\r\n                  />\r\n\r\n                  <Route\r\n                    path={path.SYSTEM}\r\n                    component={userIsAuthenticated(System)}\r\n                  />\r\n                  <Route\r\n                    path={\"/doctor/\"}\r\n                    component={userIsAuthenticated(Doctor)}\r\n                  />\r\n                  <Route path={path.HOMEPAGE} component={HomePage} />\r\n                  <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\r\n                  <Route\r\n                    path={path.DETAIL_SPECIALTY}\r\n                    component={DetailSpecialty}\r\n                  />\r\n                  <Route path={path.DETAIL_CLINIC} component={DetailClinic} />\r\n                  <Route\r\n                    path={path.VERIFY_EMAIL_BOOKING}\r\n                    component={VerifyEmail}\r\n                  />\r\n                </Switch>\r\n              </div>\r\n\r\n              {/* <ToastContainer\r\n                className=\"toast-container\"\r\n                toastClassName=\"toast-item\"\r\n                bodyClassName=\"toast-item-body\"\r\n                autoClose={false}\r\n                hideProgressBar={true}\r\n                pauseOnHover={false}\r\n                pauseOnFocusLoss={true}\r\n                closeOnClick={false}\r\n                draggable={false}\r\n                closeButton={<CustomToastCloseButton />}\r\n              /> */}\r\n\r\n              <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                theme=\"light\"\r\n              />\r\n            </div>\r\n          </CustomScrollbars>\r\n        </Router>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    started: state.app.started,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport \"@formatjs/intl-pluralrules/polyfill\";\r\nimport \"@formatjs/intl-pluralrules/locale-data/en\";\r\nimport \"@formatjs/intl-pluralrules/locale-data/vi\";\r\n\r\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\r\nimport \"@formatjs/intl-relativetimeformat/locale-data/en\";\r\nimport \"@formatjs/intl-relativetimeformat/locale-data/vi\";\r\n\r\nimport { LanguageUtils } from \"../utils\";\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n  render() {\r\n    const { children, language } = this.props;\r\n    return (\r\n      <IntlProvider\r\n        locale={language}\r\n        messages={messages[language]}\r\n        defaultLocale=\"vi\"\r\n      >\r\n        {children}\r\n      </IntlProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor}/>\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"../scss/SearchCarousel.scss\";\r\nclass SearchCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps) {}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\" search-section  row\">\r\n            <ul className=\"core-skill section col-lg-6 col-md-6 col-12\">\r\n              <span className=\"section-title core-skill-title\">\r\n                <strong>Find diseases & conditions by first letter</strong>\r\n              </span>\r\n              <ul className=\"search-characters\">\r\n                <li className=\"search-item\">a</li>\r\n                <li className=\"search-item\">b</li>\r\n                <li className=\"search-item\">c</li>\r\n                <li className=\"search-item\">d</li>\r\n                <li className=\"search-item\">e</li>\r\n                <li className=\"search-item\">f</li>\r\n                <li className=\"search-item\">g</li>\r\n                <li className=\"search-item\">h</li>\r\n                <li className=\"search-item\">i</li>\r\n                <li className=\"search-item\">j</li>\r\n                <li className=\"search-item\">k</li>\r\n                <li className=\"search-item\">l</li>\r\n                <li className=\"search-item\">m</li>\r\n                <li className=\"search-item\">n</li>\r\n                <li className=\"search-item\">o</li>\r\n                <li className=\"search-item\">p</li>\r\n                <li className=\"search-item\">q</li>\r\n                <li className=\"search-item\">r</li>\r\n                <li className=\"search-item\">s</li>\r\n                <li className=\"search-item\">t</li>\r\n                <li className=\"search-item\">u</li>\r\n                <li className=\"search-item\">v</li>\r\n                <li className=\"search-item\">w</li>\r\n                <li className=\"search-item\">x</li>\r\n                <li className=\"search-item\">y</li>\r\n                <li className=\"search-item\">z</li>\r\n              </ul>\r\n            </ul>\r\n            <ul className=\"other-skill section col-lg-6 col-md-6 col-12\">\r\n              <span className=\"section-title others-skill-title\">\r\n                <strong>Search diseases & conditions</strong>\r\n              </span>\r\n              <div id=\"search\" className=\"search-input\">\r\n                <svg viewBox=\"0 0 420 60\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <rect className=\"bar\" />\r\n\r\n                  <g className=\"magnifier\">\r\n                    <circle className=\"glass\" />\r\n                    <line\r\n                      className=\"handle\"\r\n                      x1=\"32\"\r\n                      y1=\"32\"\r\n                      x2=\"44\"\r\n                      y2=\"44\"\r\n                    ></line>\r\n                  </g>\r\n\r\n                  <g className=\"sparks\">\r\n                    <circle className=\"spark\" />\r\n                    <circle className=\"spark\" />\r\n                    <circle className=\"spark\" />\r\n                  </g>\r\n\r\n                  <g className=\"burst pattern-one\">\r\n                    <circle className=\"particle circle\" />\r\n                    <path className=\"particle triangle\" />\r\n                    <circle className=\"particle circle\" />\r\n                    <path className=\"particle plus\" />\r\n                    <rect className=\"particle rect\" />\r\n                    <path className=\"particle triangle\" />\r\n                  </g>\r\n                  <g className=\"burst pattern-two\">\r\n                    <path className=\"particle plus\" />\r\n                    <circle className=\"particle circle\" />\r\n                    <path className=\"particle triangle\" />\r\n                    <rect className=\"particle rect\" />\r\n                    <circle className=\"particle circle\" />\r\n                    <path className=\"particle plus\" />\r\n                  </g>\r\n                  <g className=\"burst pattern-three\">\r\n                    <circle className=\"particle circle\" />\r\n                    <rect className=\"particle rect\" />\r\n                    <path className=\"particle plus\" />\r\n                    <path className=\"particle triangle\" />\r\n                    <rect className=\"particle rect\" />\r\n                    <path className=\"particle plus\" />\r\n                  </g>\r\n                </svg>\r\n                <input\r\n                  type=\"search\"\r\n                  name=\"q\"\r\n                  aria-label=\"Search for inspiration\"\r\n                />\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchCarousel);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./HomeHeader.scss\";\r\nimport { getAllSpecialties } from \"../../services/userService\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { LANGUAGES } from \"../../utils\";\r\nimport { changeLanguageApp } from \"../../store/actions\";\r\nimport { withRouter } from \"react-router\";\r\nimport SearchCarousel from \"./Section/slider/SearchCarousel\";\r\n\r\nclass HomeHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataSpecialty: [],\r\n            fullname: \"\",\r\n            phone: \"\",\r\n            department: \"\",\r\n            description: \"\",\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await getAllSpecialties();\r\n            if (res.errCode === 0) {\r\n                console.log(\"check data\", res.data);\r\n                this.setState({ dataSpecialty: res.data ? res.data : [] });\r\n                console.log(this.state);\r\n            } else {\r\n                console.error(\"Failed to get all specialty\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Handle form submission logic here\r\n        console.log(\"Form submitted with state:\", this.state);\r\n        // You can add further logic to send this data to a server or perform other actions\r\n    };\r\n\r\n    switchLanguage = () => {\r\n        const currLanguage = this.props.language;\r\n        const oppositeLanguage =\r\n            currLanguage === LANGUAGES.VI ? LANGUAGES.EN : LANGUAGES.VI;\r\n        this.props.changeLanguageAppRedux(oppositeLanguage);\r\n    };\r\n\r\n    handleMenuOpen = () => {\r\n        this.setState({ isOverlayActive: true });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ isOverlayActive: false });\r\n    };\r\n\r\n    handleClickBtnShop = () => {\r\n        window.open(\"http://localhost:3000/\", \"_blank\");\r\n    };\r\n\r\n    returnToHomePage = () => {\r\n        this.props.history.push(\"/home\");\r\n    };\r\n\r\n    render() {\r\n        const { isOverlayActive, dataSpecialty, fullname, phone, department, description } = this.state;\r\n        const { language, isShowBanner } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"header-navbar row\">\r\n                            <div className=\"col-2 nav-left\">\r\n                                {/* <i className=\"fas fa-bars header-open-slidebar\"></i> */}\r\n                                <a href=\"\" className=\"header-logo d-none d-md-block\" onClick={this.returnToHomePage}></a>\r\n                            </div>\r\n                            <div className=\"col-8 nav-center\">\r\n                                {/* Nav Center Items */}\r\n                            </div>\r\n                            <div className=\"col-2 nav-right\">\r\n                                <div className=\"shop\" onClick={this.handleClickBtnShop}>\r\n                                    <i className=\"fas fa-shopping-bag\"></i>\r\n                                    <FormattedMessage id=\"homeheader.shop\" />\r\n                                </div>\r\n                                <div className=\"dropdown-language\" onClick={this.switchLanguage}>\r\n                                    <span className=\"hide-language-btn\"></span>\r\n                                    <span className={`language-btn${language !== LANGUAGES.VI ? \" language-vi offline\" : \" language-vi\"}`}>\r\n                                        <i className=\"fas fa-star\"></i>\r\n                                    </span>\r\n                                    <span className={`language-btn${language !== LANGUAGES.EN ? \" language-en offline\" : \" language-en\"}`}>\r\n                                        <i className=\"fas fa-plus\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {isShowBanner && (\r\n                    <div>\r\n                        <div className=\"banner row d-flex flex-wrap flex-lg-nowrap flex-md-wrap\">\r\n                            <div className=\"banner-left mt-md-5 mb-lg-5 text-md-start text-center col-md-5 col-12 col-sm-12 col-lg-6\">\r\n                                <div className=\"register\">\r\n                                    <strong className=\"register-title\">\r\n                                        <FormattedMessage id=\"homeheader.register\" />\r\n                                    </strong>\r\n                                    <form onSubmit={this.handleSubmit}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"fullname\"\r\n                                            name=\"fullname\"\r\n                                            value={fullname}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Fullname\"\r\n                                            required\r\n                                        />\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            id=\"phone\"\r\n                                            name=\"phone\"\r\n                                            pattern=\"[0-9]{10,11}\"\r\n                                            value={phone}\r\n                                            onChange={this.handleChange}\r\n                                            placeholder=\"Phone number\"\r\n                                            required\r\n                                        />\r\n                                        <select\r\n                                            id=\"department\"\r\n                                            name=\"department\"\r\n                                            value={department}\r\n                                            onChange={this.handleChange}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select specialty</option>\r\n                                            {dataSpecialty.map(specialty => (\r\n                                                <option key={specialty.id} value={specialty.name}>\r\n                                                    {specialty.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <textarea\r\n                                            placeholder=\"Description...\"\r\n                                            id=\"description\"\r\n                                            name=\"description\"\r\n                                            value={description}\r\n                                            onChange={this.handleChange}\r\n                                            required\r\n                                        />\r\n                                        <input type=\"submit\" value={language === \"en\" ? \"Submit\" : \"Gửi đăng ký\"} />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"banner-right col-12 col-md-5 col-sm-12 col-lg-6 text-center mx-auto mx-sm-0\">\r\n                                <div className=\"banner-title\">\r\n                                    <h3 className=\"main-title\">\r\n                                        <FormattedMessage id=\"banner.main-title\" />\r\n                                    </h3>\r\n                                    <h2 className=\"sub-title\">\r\n                                        <FormattedMessage id=\"banner.sub-title\" />\r\n                                    </h2>\r\n                                    <p className=\"desc\">\r\n                                        <FormattedMessage id=\"banner.desc\" />\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"banner-right-background\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <SearchCarousel />\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    language: state.app.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language)),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeHeader));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"../scss/Footer.scss\"\r\nclass Footer extends Component {\r\n   \r\n    render() {\r\n      return (\r\n        <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"footer-col\">\r\n              <h4>company</h4>\r\n              <ul>\r\n                <li><a href=\"#\">about us</a></li>\r\n                <li><a href=\"#\">our services</a></li>\r\n                <li><a href=\"#\">privacy policy</a></li>\r\n                <li><a href=\"#\">affiliate program</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"footer-col\">\r\n              <h4>get help</h4>\r\n              <ul>\r\n                <li><a href=\"#\">FAQ</a></li>\r\n                <li><a href=\"#\">shipping</a></li>\r\n                <li><a href=\"#\">returns</a></li>\r\n                <li><a href=\"#\">order status</a></li>\r\n                <li><a href=\"#\">payment options</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"footer-col\">\r\n              <h4>online shop</h4>\r\n              <ul>\r\n                <li><a href=\"#\">watch</a></li>\r\n                <li><a href=\"#\">bag</a></li>\r\n                <li><a href=\"#\">shoes</a></li>\r\n                <li><a href=\"#\">dress</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"footer-col\">\r\n              <h4>follow us</h4>\r\n              <div className=\"social-links\">\r\n                <a href=\"#\"><i className=\"fab fa-facebook-f\"></i></a>\r\n                <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\r\n                <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\r\n                <a href=\"#\"><i className=\"fab fa-linkedin-in\"></i></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n      );\r\n    }\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport \"./ProfileDoctor.scss\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\nimport { getProfileDoctorByID } from \"../../../services/userService\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nclass ProfileDoctor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataProfile: {},\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let data = await this.getInforDoctor(this.props.doctorId);\r\n    this.setState({ dataProfile: data });\r\n  }\r\n\r\n  getInforDoctor = async (id) => {\r\n    let result = {};\r\n    if (id) {\r\n      let res = await getProfileDoctorByID(id);\r\n      if (res && res.errCode === 0) {\r\n        result = res.data;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.language !== prevProps.language) {\r\n    }\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n    }\r\n  }\r\n  convertToCustomFormat(number) {\r\n    if (number >= 1000) {\r\n      return (number / 1000).toFixed(3).replace(\".\", \",\");\r\n    }\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  renderPrice(dataProfile, language) {\r\n    if (\r\n      dataProfile &&\r\n      dataProfile.Doctor_Infor &&\r\n      dataProfile.Doctor_Infor.priceTypeData\r\n    ) {\r\n      const priceValue =\r\n        language === LANGUAGES.VI\r\n          ? dataProfile.Doctor_Infor.priceTypeData.valueVI\r\n          : language === LANGUAGES.EN\r\n          ? dataProfile.Doctor_Infor.priceTypeData.valueEN\r\n          : null; // Handle other languages if needed\r\n\r\n      if (priceValue !== null) {\r\n        return (\r\n          this.convertToCustomFormat(priceValue) +\r\n          (language === LANGUAGES.VI ? \" VND\" : \" $\")\r\n        );\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  renderTimeBooking = (dataTime) => {\r\n    let language = this.props.language;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time =\r\n        language === LANGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"dddd - MM/DD/YYYY\");\r\n      let forMatedDate = this.capitalizeFirstLetter(date);\r\n      return (\r\n        <>\r\n          <span>\r\n            {time + \"  -  \"}\r\n            {forMatedDate}\r\n          </span>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"check prop\", this.props.dataBookingModal);\r\n    let { dataProfile } = this.state;\r\n    console.log(\"render\", this.props.doctorId);\r\n    let { language, dataBookingModal, isShowDescription } = this.props;\r\n\r\n    let nameVi = \"\";\r\n    let nameEn = \"\";\r\n    if (dataProfile && dataProfile.positionData) {\r\n      nameVi = `${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName}`;\r\n      nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`;\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"profile-doctor-container\">\r\n          <div className=\"introduction-doctor\">\r\n            <div\r\n              className=\"avatar-doctor\"\r\n              style={{\r\n                backgroundImage: `url(${dataProfile.image})`,\r\n              }}\r\n            >\r\n              <Link\r\n                className=\"link-to-detail-doctor\"\r\n                to={`/detail-doctor/${this.props.doctorId}`}\r\n              ></Link>\r\n            </div>\r\n\r\n            <ul className=\"info-doctor\">\r\n              <li className=\"profile-title\">\r\n                <FormattedMessage id=\"patient.booking-modal.booking-title\" />\r\n              </li>\r\n              <li className=\"infor-doctor-contain-name-and-time\">\r\n                <span className=\"slider-card-title\">\r\n                  {language === LANGUAGES.VI ? nameVi : nameEn}\r\n                </span>\r\n                <>{this.renderTimeBooking(dataBookingModal)}</>\r\n              </li>\r\n              {isShowDescription == true ? (\r\n                <li className=\"doctor-desc\">\r\n                  {dataProfile &&\r\n                  dataProfile.Markdown &&\r\n                  dataProfile.Markdown.description\r\n                    ? dataProfile.Markdown.description\r\n                    : \"\"}\r\n                </li>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <li className=\"price\">\r\n                <span>\r\n                  <FormattedMessage id=\"patient.booking-modal.price-title\" />\r\n                </span>\r\n                {this.renderPrice(dataProfile, this.props.language)}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport \"./DoctorExtraInfor.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { getExtraInforDoctorByID } from \"../../../services/userService\";\r\n\r\nclass DoctorExtraInfor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowDetailPrice: false,\r\n      extraDoctor: {},\r\n    };\r\n  }\r\n  async componentDidMount(prevProps) {\r\n    if (this.props.doctorId) {\r\n      let res = await getExtraInforDoctorByID(this.props.doctorId);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({ extraDoctor: res.data });\r\n      }\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n      let res = await getExtraInforDoctorByID(this.props.doctorId);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({ extraDoctor: res.data });\r\n      }\r\n    }\r\n  }\r\n\r\n  showHideDetailDoctorInfor = (status) => {\r\n    this.setState({ isShowDetailPrice: status });\r\n  };\r\n  convertToCustomFormat(number) {\r\n    if (number >= 1000) {\r\n      return (number / 1000).toFixed(3).replace(\".\", \",\");\r\n    }\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  render() {\r\n    let language = this.props.language;\r\n    let { isShowDetailPrice, extraDoctor } = this.state;\r\n    console.log(\"extra doctor\", extraDoctor);\r\n    return (\r\n      <>\r\n        <div className=\"doctor-extra-info-container \">\r\n          <div className=\"content-up\">\r\n            <span className=\"text-address\">\r\n              {\" \"}\r\n              <FormattedMessage id=\"patient.extra-infor-doctor.address-title\" />\r\n            </span>\r\n            <span className=\"name-clinic\">\r\n              {extraDoctor && extraDoctor.nameClinic\r\n                ? extraDoctor.nameClinic\r\n                : \"\"}\r\n            </span>\r\n            <span className=\"detail-address\">\r\n              <i className=\"detail-address-icon fas fa-map-marker\"></i>\r\n              {extraDoctor && extraDoctor.addressClinic\r\n                ? extraDoctor.addressClinic\r\n                : \"\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"content-down\">\r\n            {isShowDetailPrice == false && (\r\n              <div className=\"price-content-up\">\r\n                <span className=\"price-title\">\r\n                  <FormattedMessage id=\"patient.extra-infor-doctor.price-title\" />\r\n                </span>\r\n                <span className=\"price-sub-title\">\r\n                  {\" \"}\r\n                  {extraDoctor && extraDoctor.priceTypeData\r\n                    ? language === LANGUAGES.VI\r\n                      ? this.convertToCustomFormat(\r\n                          extraDoctor.priceTypeData.valueVI\r\n                        ) + \" VND\"\r\n                      : this.convertToCustomFormat(\r\n                          extraDoctor.priceTypeData.valueEN\r\n                        ) + \" $\"\r\n                    : \"\"}\r\n                </span>\r\n                <span\r\n                  className=\"open-close-price-detail-btn\"\r\n                  onClick={() => this.showHideDetailDoctorInfor(true)}\r\n                >\r\n                  <FormattedMessage id=\"patient.extra-infor-doctor.show-price-detail\" />\r\n                </span>\r\n              </div>\r\n            )}\r\n\r\n            {isShowDetailPrice == true && (\r\n              <div className=\"price-content-down\">\r\n                <span className=\"price-title\">\r\n                  <FormattedMessage id=\"patient.extra-infor-doctor.price-title\" />\r\n                </span>\r\n                <div className=\"price-detail\">\r\n                  <div className=\"price-detail-title\">\r\n                    <span className=\"left\">\r\n                      <FormattedMessage id=\"patient.extra-infor-doctor.price-title\" />\r\n                    </span>\r\n                    <span className=\"right\">\r\n                      {\" \"}\r\n                      {extraDoctor && extraDoctor.priceTypeData\r\n                        ? language === LANGUAGES.VI\r\n                          ? this.convertToCustomFormat(\r\n                              extraDoctor.priceTypeData.valueVI\r\n                            ) + \" VND\"\r\n                          : this.convertToCustomFormat(\r\n                              extraDoctor.priceTypeData.valueEN\r\n                            ) + \" $\"\r\n                        : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"price-desc\">\r\n                    {extraDoctor && extraDoctor.note ? extraDoctor.note : \"\"}\r\n                  </div>\r\n                  <div className=\"payment-method-detail\">\r\n                    <FormattedMessage id=\"patient.extra-infor-doctor.payment-detail\" />\r\n                    {extraDoctor && extraDoctor.paymentTypeData\r\n                      ? language === LANGUAGES.VI\r\n                        ? extraDoctor.paymentTypeData.valueVI\r\n                        : extraDoctor.paymentTypeData.valueEN\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n                <span\r\n                  className=\"open-close-price-detail-btn\"\r\n                  onClick={() => this.showHideDetailDoctorInfor(false)}\r\n                >\r\n                  {\" \"}\r\n                  <FormattedMessage id=\"patient.extra-infor-doctor.hide-price-detail\" />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from \"../../../../utils\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport * as actions from \"../../../../store/actions\";\r\nimport \"./BookingModal.scss\";\r\nimport ProfileDoctor from \"../ProfileDoctor\";\r\nimport _ from \"lodash\";\r\nimport { Button, Modal, ModalFooter, Input } from \"reactstrap\";\r\nimport { postPatientBookAppointment } from \"../../../../services/userService\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nclass BookingModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      reason: \"\",\r\n      forWhom: \"\",\r\n      selectedGender: \"\",\r\n      birthday: \"\",\r\n      doctorId: \"\",\r\n      timeType: \"\",\r\n      genders: \"\",\r\n      textDate: \"\",\r\n      isDatePickerOpen: false,\r\n      errors: {},\r\n      isLoading: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getGenderStart();\r\n  }\r\n  // Define a function to validate the input values\r\n  validateInput = () => {\r\n    const errors = {};\r\n\r\n    // Validate Full Name\r\n    if (!this.state.fullname.trim()) {\r\n      errors.fullname = \"Full Name is required\";\r\n    }\r\n\r\n    // Validate Phone Number\r\n    if (!this.state.phoneNumber.trim()) {\r\n      errors.phoneNumber = \"Phone Number is required\";\r\n    } else if (!/^\\d{10}$/g.test(this.state.phoneNumber)) {\r\n      errors.phoneNumber = \"Phone Number must be a 10-digit number\";\r\n    }\r\n\r\n    // Validate Email\r\n    if (!this.state.email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/^\\S+@\\S+\\.\\S+$/.test(this.state.email)) {\r\n      errors.email = \"Invalid email format\";\r\n    }\r\n\r\n    // Validate Gender\r\n    if (!this.state.selectedGender) {\r\n      errors.selectedGender = \"Gender is required\";\r\n    }\r\n\r\n    // Validate Address\r\n    if (!this.state.address.trim()) {\r\n      errors.address = \"Address is required\";\r\n    }\r\n\r\n    // Validate Reason\r\n    if (!this.state.reason.trim()) {\r\n      errors.reason = \"Reason is required\";\r\n    }\r\n\r\n    // Return the validation errors (if any)\r\n    return errors;\r\n  };\r\n\r\n  buildDataGender = (data) => {\r\n    let result = [];\r\n    let language = this.props.language;\r\n    if (data && data.length > 0) {\r\n      data.map((item) => {\r\n        let object = {};\r\n        object.label = language === LANGUAGES.VI ? item.valueVI : item.valueEN;\r\n        object.value = item.keyMap;\r\n        result.push(object);\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if (this.props.language !== prevProps.language) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n\r\n    if (this.props.genders !== prevProps.genders) {\r\n      this.setState({\r\n        genders: this.buildDataGender(this.props.genders),\r\n      });\r\n    }\r\n    if (this.props.dataBookingModal !== prevProps.dataBookingModal) {\r\n      let data = this.props.dataBookingModal;\r\n      let timeType = this.props.dataBookingModal.timeType;\r\n      let doctorId = data && !_.isEmpty(data) ? data.doctorId : \"\";\r\n      this.setState({\r\n        doctorId: doctorId,\r\n        timeType: timeType,\r\n      });\r\n    }\r\n  }\r\n  handleCloseModal = () => {\r\n    this.props.onCloseBookingModal();\r\n  };\r\n\r\n  handleOnchangeInput = (event, id) => {\r\n    let valueInput = event.target.value;\r\n    let stateCopy = { ...this.state };\r\n    stateCopy[id] = valueInput;\r\n    this.setState({\r\n      ...stateCopy,\r\n    });\r\n  };\r\n  handleOnChangeSelect = (selectedOption) => {\r\n    this.setState({ selectedGender: selectedOption });\r\n  };\r\n\r\n  handleConfirmBooking = async () => {\r\n    this.setState({ isLoading: true });\r\n    const err = this.validateInput();\r\n    this.setState({ errors: err });\r\n    if (_.isEmpty(err)) {\r\n      let timeString = this.buildTimeBooking(this.props.dataBookingModal);\r\n      console.log(\"Time\", timeString);\r\n      let date = new Date(this.state.birthday).getTime();\r\n      let doctorName = this.buildDoctorName(this.props.dataBookingModal);\r\n      let res = await postPatientBookAppointment({\r\n        fullname: this.state.fullname,\r\n        phoneNumber: this.state.phoneNumber,\r\n        email: this.state.email,\r\n        address: this.state.address,\r\n        reason: this.state.reason,\r\n        // forWhom :this.state.fullname,\r\n        selectedGender: this.state.selectedGender.value,\r\n        date: this.props.dataBookingModal.date,\r\n        birthday: date,\r\n        doctorId: this.state.doctorId,\r\n        timeString: timeString,\r\n        timeType: this.state.timeType,\r\n        language: this.props.language,\r\n        doctorName: doctorName,\r\n      });\r\n      console.log(res);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({ isLoading: false });\r\n        toast.success(\r\n          <FormattedMessage id=\"patient.booking-modal.booking-success\" />\r\n        );\r\n        this.handleCloseModal();\r\n      } else {\r\n        toast.error(\r\n          <FormattedMessage id=\"patient.booking-modal.booking-failded\" />\r\n        );\r\n      }\r\n    }\r\n  };\r\n  buildTimeBooking = (dataTime) => {\r\n    let language = this.props.language;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let time =\r\n        language === LANGUAGES.VI\r\n          ? dataTime.timeTypeData.valueVi\r\n          : dataTime.timeTypeData.valueEn;\r\n      let date =\r\n        language === LANGUAGES.VI\r\n          ? moment.unix(+dataTime.date / 1000).format(\"dddd - DD/MM/YYYY\")\r\n          : moment\r\n              .unix(+dataTime.date / 1000)\r\n              .locale(\"en\")\r\n              .format(\"dddd - MM/DD/YYYY\");\r\n      let formattedDate = this.capitalizeFirstLetter(date);\r\n      return `${time} - ${formattedDate}`;\r\n    }\r\n  };\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  buildDoctorName = (dataTime) => {\r\n    let language = this.props.language;\r\n    if (dataTime && !_.isEmpty(dataTime)) {\r\n      let doctorName =\r\n        language === LANGUAGES.VI\r\n          ? dataTime.doctorData.lastName + \" \" + dataTime.doctorData.firstName\r\n          : dataTime.doctorData.firstName + \" \" + dataTime.doctorData.lastName;\r\n\r\n      return doctorName;\r\n    }\r\n  };\r\n  handleDatePickerClick = () => {\r\n    this.setState((prevState) => ({\r\n      isDatePickerOpen: !prevState.isDatePickerOpen,\r\n    }));\r\n  };\r\n  convertDateToString = (date) => {\r\n    let formattedDate = \"\";\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      weekday: \"long\", // Include the full name of the day of the week\r\n    };\r\n\r\n    if (this.props.language === LANGUAGES.VI) {\r\n      // For Vietnamese language, format as \"Thứ N, dd/mm/yyyy\"\r\n      formattedDate = date.toLocaleDateString(\"vi-VN\", options);\r\n    } else {\r\n      // For English language, format as \"Monday, mm/dd/yyyy\"\r\n      formattedDate = date.toLocaleDateString(\"en-US\", options);\r\n    }\r\n\r\n    return formattedDate;\r\n  };\r\n  handleOnChangeDatePicker = (date) => {\r\n    let currDate;\r\n    currDate = moment(date).add(0, \"days\").startOf(\"day\").valueOf();\r\n\r\n    this.setState({\r\n      birthday: currDate,\r\n      textDate: this.convertDateToString(date),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { language, dataBookingModal } = this.props;\r\n    let { isLoading } = this.state;\r\n    let doctorId =\r\n      dataBookingModal && !_.isEmpty(dataBookingModal)\r\n        ? dataBookingModal.doctorId\r\n        : \"\";\r\n    console.log(\"data booking modal\", this.props);\r\n    return (\r\n      <>\r\n        <div>\r\n          <Modal\r\n            isOpen={this.props.isOpenModalBooking}\r\n            centered\r\n            className=\"modal\"\r\n            size=\"lg\"\r\n            style={{ maxWidth: \"800px\", width: \"100%\" }}\r\n          >\r\n            <div className=\"modal-body\">\r\n              <ProfileDoctor\r\n                doctorId={doctorId}\r\n                dataBookingModal={dataBookingModal}\r\n                isShowDescription={false}\r\n                // timeSelected={this.props.timeSelected}\r\n                // dateSelected={this.props.dateSelected}\r\n              />\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-12\">\r\n                      <label for=\"fullname\">\r\n                        <FormattedMessage id=\"patient.booking-modal.fullname\" />\r\n                      </label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"fullname\"\r\n                        id=\"fullname\"\r\n                        value={this.state.fullname}\r\n                        onChange={(event) =>\r\n                          this.handleOnchangeInput(event, \"fullname\")\r\n                        }\r\n                        placeholder={\r\n                          <FormattedMessage id=\"patient.booking-modal.fullname\" />\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                      <label for=\"phoneNumber\">\r\n                        <FormattedMessage id=\"patient.booking-modal.phonenumber\" />\r\n                      </label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        id=\"phoneNumber\"\r\n                        value={this.state.phoneNumber}\r\n                        onChange={(event) =>\r\n                          this.handleOnchangeInput(event, \"phoneNumber\")\r\n                        }\r\n                        placeholder={\r\n                          <FormattedMessage id=\"patient.booking-modal.phonenumber-placeholder\" />\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-12\">\r\n                      <label for=\"email\">\r\n                        <FormattedMessage id=\"patient.booking-modal.email\" />\r\n                      </label>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={(event) =>\r\n                          this.handleOnchangeInput(event, \"email\")\r\n                        }\r\n                        placeholder={\r\n                          <FormattedMessage id=\"patient.booking-modal.email-placeholder\" />\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                      <label for=\"gender\">\r\n                        <FormattedMessage id=\"patient.booking-modal.gender\" />\r\n                      </label>\r\n                      <Select\r\n                        name=\"gender\"\r\n                        id=\"gender\"\r\n                        value={this.state.selectedGender}\r\n                        onChange={this.handleOnChangeSelect}\r\n                        options={this.state.genders}\r\n                        placeholder={\r\n                          <FormattedMessage id=\"patient.booking-modal.gender-placeholder\" />\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                      <label for=\"address\">\r\n                        <FormattedMessage id=\"patient.booking-modal.address\" />\r\n                      </label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        id=\"address\"\r\n                        value={this.state.address}\r\n                        onChange={(event) =>\r\n                          this.handleOnchangeInput(event, \"address\")\r\n                        }\r\n                        placeholder={\r\n                          <FormattedMessage id=\"patient.booking-modal.address-placeholder\" />\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\" col-12 col-md-6\">\r\n                      <label for=\"address\">\r\n                        <FormattedMessage id=\"patient.booking-modal.birthday\" />\r\n                      </label>\r\n                      <div\r\n                        className=\"date-picker\"\r\n                        onClick={this.handleDatePickerClick}\r\n                      >\r\n                        <DatePicker\r\n                          onChange={this.handleOnChangeDatePicker}\r\n                          className=\"form-control date-picker-select\"\r\n                          selected={this.state.currDate}\r\n                          maxDate={\r\n                            new Date(new Date().getTime() - 24 * 60 * 60 * 1000)\r\n                          }\r\n                          // minDate={new Date()}\r\n                          style={{ fontSize: \"18px\" }}\r\n                          // format={dateFormat.SEND_TO_SERVER}\r\n                          isOpen={this.state.isDatePickerOpen}\r\n                        />\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"date-picker-text\"\r\n                          value={this.state.textDate}\r\n                          readOnly // Make the input read-only to display the selected date\r\n                          placeholder=\"Select a date\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"reason\">\r\n                    <FormattedMessage id=\"patient.booking-modal.reason\" />\r\n                  </label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"reason\"\r\n                    id=\"reason\"\r\n                    value={this.state.reason}\r\n                    onChange={(event) =>\r\n                      this.handleOnchangeInput(event, \"reason\")\r\n                    }\r\n                  />\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                  <div className=\"col-md-6 col-12\">\r\n                    <div className=\"form-group\">\r\n                      <label for=\"forWhom\">Đặt cho ai</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"forWhom\"\r\n                        id=\"forWhom\"\r\n                        value={this.state.forWhom}\r\n                        onChange={(event) => this.handleOnchangeInput(event, 'forWhom')}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6 col-12\">\r\n                    <div className=\"form-group\">\r\n                      <div className=\"option-container\">\r\n                        <div className=\"option\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"option1\"\r\n                            name=\"options\"\r\n                            // value=\"option1\"\r\n                            // checked={selectedOption === \"option1\"}\r\n                            // onChange={handleOptionChange}\r\n                          />\r\n                          <label htmlFor=\"option1\">Cho mình</label>\r\n                        </div>\r\n                        <div className=\"option\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            id=\"option2\"\r\n                            name=\"options\"\r\n                            // value=\"option2\"\r\n                            // checked={selectedOption === \"option2\"}\r\n                            // onChange={handleOptionChange}\r\n                          />\r\n                          <label htmlFor=\"option2\">Cho người khác</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n              <ModalFooter>\r\n                <div>\r\n                  {/* Map over errors and display them */}\r\n                  {Object.keys(this.state.errors).map((key, index) => (\r\n                    <span\r\n                      key={index}\r\n                      className=\"error-message\"\r\n                      style={{ color: \"red\", display: \"block\" }}\r\n                    >\r\n                      {this.state.errors[key]}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className=\"px-5\"\r\n                  onClick={() => this.handleConfirmBooking()}\r\n                >\r\n                  <FormattedMessage id=\"patient.booking-modal.btn-confirm\" />\r\n                </Button>{\" \"}\r\n                <Button\r\n                  color=\"secondary\"\r\n                  className=\"px-5\"\r\n                  onClick={this.handleCloseModal}\r\n                >\r\n                  <FormattedMessage id=\"patient.booking-modal.btn-cancel\" />\r\n                </Button>\r\n              </ModalFooter>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <LoadingOverlay\r\n          className=\"loading-overlay\"\r\n          active={isLoading}\r\n          spinner\r\n          text=\"Loading...\"\r\n        >\r\n          {/* Your content goes here */}\r\n          <div></div>\r\n        </LoadingOverlay>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n    genders: state.admin.genders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LANGUAGES } from \"../../../utils\";\r\nimport \"./DoctorSchedule.scss\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\nimport { getScheduleDoctorByDate } from \"../../../services/userService\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport BookingModal from \"./Modal/BookingModal\";\r\n\r\nclass DoctorSchedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allDays: [],\r\n      allAvailableTimes: [],\r\n      isOpenModalBooking: false,\r\n\r\n      dataBookingModalFromSchedule: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    let language = this.props.language;\r\n    this.getArrDays(language);\r\n    let allDays = this.getArrDays(language);\r\n    this.setState({\r\n      allDays,\r\n    });\r\n\r\n    if (this.props.doctorId) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.doctorId,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvailableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if (this.props.language !== prevProps.language) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      this.setState({\r\n        allDays,\r\n      });\r\n    }\r\n    if (this.props.doctorId !== prevProps.doctorId) {\r\n      let allDays = this.getArrDays(this.props.language);\r\n      let res = await getScheduleDoctorByDate(\r\n        this.props.doctorId,\r\n        allDays[0].value\r\n      );\r\n      this.setState({\r\n        allAvailableTimes: res.data ? res.data : [],\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnChangeSelect = async (event) => {\r\n    if (this.props.doctorId && this.props.doctorId !== -1) {\r\n      let doctorId = this.props.doctorId;\r\n      let date = event.target.value;\r\n      // let dateLabel = this.initDateLabel(event.target.key, this.props.language);\r\n      // console.log(\"date label\", dateLabel);\r\n      let dateLabel = event.target.options[event.target.selectedIndex].label;\r\n      let res = await getScheduleDoctorByDate(doctorId, date);\r\n      if (res && res.errCode === 0) {\r\n        this.setState({\r\n          allAvailableTimes: res.data ? res.data : [],\r\n          dateSelected: dateLabel,\r\n        });\r\n      }\r\n      // console.log(\"available schedules\", res.data);\r\n    }\r\n  };\r\n  capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  handleOpenModalBooking = (item, timeDisplay) => {\r\n    this.setState({\r\n      isOpenModalBooking: true,\r\n      dataBookingModalFromSchedule: item,\r\n    });\r\n  };\r\n  initDateLabel = (i, language) => {\r\n    let label;\r\n    if (i === 0) {\r\n      let today = language === LANGUAGES.VI ? \"Hôm nay\" : \"Today\";\r\n      label = today + \" \" + moment().format(\"DD/MM\");\r\n    } else {\r\n      if (language === LANGUAGES.VI) {\r\n        let lebelVi = moment().add(i, \"days\").format(\"dddd - DD/MM\");\r\n        label = this.capitalizeFirstLetter(lebelVi);\r\n      } else {\r\n        label = moment().add(i, \"days\").locale(\"en\").format(\"ddd - DD/MM\");\r\n      }\r\n    }\r\n    return label;\r\n  };\r\n  getArrDays = (language) => {\r\n    let allDays = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      let object = {};\r\n      let label = this.initDateLabel(i, language);\r\n      object.label = label;\r\n      object.value = moment(new Date()).add(i, \"days\").startOf(\"day\").valueOf();\r\n      object.index = i;\r\n      allDays.push(object);\r\n    }\r\n    return allDays;\r\n  };\r\n\r\n  handleCloseBookingModal = () => {\r\n    this.setState({ isOpenModalBooking: false });\r\n  };\r\n  render() {\r\n    let {\r\n      allDays,\r\n      allAvailableTimes,\r\n      isOpenModalBooking,\r\n      dataBookingModalFromSchedule,\r\n    } = this.state;\r\n    let language = this.props.language;\r\n    // console.log(\"schedule state\", typeof this.state.timeSelected);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"doctor-schedule \">\r\n          <div className=\"all-schedule\">\r\n            <select\r\n              onChange={(event) => this.handleOnChangeSelect(event)}\r\n              className=\"select-schedule\"\r\n            >\r\n              {allDays &&\r\n                allDays.length > 0 &&\r\n                allDays.map((day, index) => {\r\n                  // console.log(day.label, \"day\", index);\r\n                  return (\r\n                    <option key={index} value={day.value} label={day.label}>\r\n                      {day.label}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n          </div>\r\n          <div className=\"all-available-time\">\r\n            <div className=\"title-calendar\">\r\n              <span className=\"title-calendar-icon fas fa-calendar-alt\"></span>\r\n              <span>\r\n                <FormattedMessage id=\"patient.detail-doctor.appointment\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"time-available\">\r\n              {allAvailableTimes && allAvailableTimes.length > 0 ? (\r\n                allAvailableTimes.map((item, index) => {\r\n                  let timeDisplay =\r\n                    language === LANGUAGES.VI\r\n                      ? item.timeTypeData.valueVi\r\n                      : item.timeTypeData.valueEn;\r\n\r\n                  return (\r\n                    <button\r\n                      key={index}\r\n                      className={`btn-time ${\r\n                        language === \"en\" ? \"btn-en\" : \"\"\r\n                      }`}\r\n                      onClick={() =>\r\n                        this.handleOpenModalBooking(item, timeDisplay)\r\n                      }\r\n                    >\r\n                      {timeDisplay}\r\n                    </button>\r\n                  );\r\n                })\r\n              ) : (\r\n                <FormattedMessage id=\"patient.detail-doctor.not-available-time\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* {allAvailableTimes && allAvailableTimes.length > 0 && (\r\n            <span className=\"pick-title\">\r\n              <FormattedMessage id=\"patient.detail-doctor.pick-time-tittle-first-part\" />{\" \"}\r\n              <i class=\"fas fa-hand-point-up\"></i>\r\n              <FormattedMessage id=\"patient.detail-doctor.pick-time-tittle-second-part\" />\r\n            </span>\r\n          )}\r\n          {this.props.isShowSeparator && this.props.isShowSeparator === true ? (\r\n            <div className=\"seperator\"></div>\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n        </div>\r\n        <BookingModal\r\n          isOpenModalBooking={isOpenModalBooking}\r\n          dataBookingModal={dataBookingModalFromSchedule}\r\n          onCloseBookingModal={this.handleCloseBookingModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    language: state.app.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","export const path = {\r\n  HOME: \"/\",\r\n  HOMEPAGE: \"/home\",\r\n  HEALTHY: \"/healthy\",\r\n  LOGIN: \"/login\",\r\n  LOG_OUT: \"/logout\",\r\n  REGISTER: \"/register\",\r\n  SYSTEM: \"/system\",\r\n  DETAIL_DOCTOR: \"/detail-doctor/:id\",\r\n  DETAIL_SPECIALTY: \"/detail-specialty/:id\",\r\n  DETAIL_CLINIC: \"/detail-clinic/:id\",\r\n  VERIFY_EMAIL_BOOKING: \"/verify-booking\",\r\n};\r\n\r\nexport const LANGUAGES = {\r\n  VI: \"vi\",\r\n  EN: \"en\",\r\n};\r\n\r\nexport const CRUD_ACTIONS = {\r\n  CREATE: \"CREATE\",\r\n  EDIT: \"EDIT\",\r\n  DELETE: \"DELETE\",\r\n  READ: \"READ\",\r\n};\r\n\r\nexport const dateFormat = {\r\n  SEND_TO_SERVER: \"DD/MM/YYYY\",\r\n};\r\n\r\nexport const YesNoObj = {\r\n  YES: \"Y\",\r\n  NO: \"N\",\r\n};\r\n\r\nexport const USER_ROLE = {\r\n  ADMIN: \"R1\",\r\n  DOCTOR: \"R2\",\r\n  PATIENT: \"R3\",\r\n};\r\n","class CommonUtils {\r\n  static isNumber1(number) {\r\n    if (number === 1) return true;\r\n    return false;\r\n  }\r\n  static getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n}\r\n\r\nexport default CommonUtils;\r\n","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;"],"sourceRoot":""}