image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  COMPOSE_PROJECT_NAME: healthcare

stages:
  - build
  - test
  - deploy

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker compose -f docker-compose.yaml build
    - docker images

test:
  stage: test
  script:
    - echo "Test stage - No operations to perform."

deploy:
  stage: deploy
  only:
    - main
  before_script:
    - mkdir -p ~/.ssh
    - echo "$AWS_SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host $AWS_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  script:
    # Create app directory on EC2
    - ssh -i ~/.ssh/id_rsa $AWS_USER@$AWS_HOST "mkdir -p ~/app"
    
    # Copy necessary files to EC2
    - scp -i ~/.ssh/id_rsa docker-compose.yaml $AWS_USER@$AWS_HOST:~/app/
    - scp -i ~/.ssh/id_rsa -r Healcare-NodeJS-Server $AWS_USER@$AWS_HOST:~/app/
    - scp -i ~/.ssh/id_rsa -r Healcare-client-ReactJS $AWS_USER@$AWS_HOST:~/app/
    - scp -i ~/.ssh/id_rsa default.conf $AWS_USER@$AWS_HOST:~/app/
    - scp -i ~/.ssh/id_rsa hoidanit.sql $AWS_USER@$AWS_HOST:~/app/
    - scp -i ~/.ssh/id_rsa studentdb.sql $AWS_USER@$AWS_HOST:~/app/
    - scp -i ~/.ssh/id_rsa udpmailserver.sql $AWS_USER@$AWS_HOST:~/app/
    
    # Deploy the application using Docker Compose
    - ssh -i ~/.ssh/id_rsa $AWS_USER@$AWS_HOST 'cd ~/app && docker compose down && docker compose up -d --build'

  environment:
    name: production
    url: http://$AWS_HOST
